// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AdMobileRequest.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AdMobileRequest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace rj {
namespace protos {
namespace mobile {

namespace {

const ::google::protobuf::Descriptor* MobileAdRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobileAdRequest_Device_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdRequest_Device_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobileAdRequest_User_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdRequest_User_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MobileAdRequest_User_Gender_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MobileAdRequest_TestFlag_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MobileAdRequest_Type_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MobileAdRequest_Platform_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MobileAdRequest_SlidingEffect_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MobileAdRequest_Orientation_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_AdMobileRequest_2eproto() {
  protobuf_AddDesc_AdMobileRequest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "AdMobileRequest.proto");
  GOOGLE_CHECK(file != NULL);
  MobileAdRequest_descriptor_ = file->message_type(0);
  static const int MobileAdRequest_offsets_[31] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, aid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, ua_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, test_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, adspacestrict_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, adspacewidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, adspaceheight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, ipaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, udid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, imei_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, connectiontype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, platform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, packagename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, section_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, adcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, slidingeffect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, orientation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, dnsip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, device_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, user_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, wifimac_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, bluetoothmac_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, simserialnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, androidid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, deviceserialnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, cpuserialnumber_),
  };
  MobileAdRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdRequest_descriptor_,
      MobileAdRequest::default_instance_,
      MobileAdRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdRequest));
  MobileAdRequest_Device_descriptor_ = MobileAdRequest_descriptor_->nested_type(0);
  static const int MobileAdRequest_Device_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, vender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, modelname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, marketingname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, screenwidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, screenheight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, density_),
  };
  MobileAdRequest_Device_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdRequest_Device_descriptor_,
      MobileAdRequest_Device::default_instance_,
      MobileAdRequest_Device_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdRequest_Device));
  MobileAdRequest_User_descriptor_ = MobileAdRequest_descriptor_->nested_type(1);
  static const int MobileAdRequest_User_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_User, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_User, gender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_User, age_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_User, countrycode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_User, region_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_User, city_),
  };
  MobileAdRequest_User_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdRequest_User_descriptor_,
      MobileAdRequest_User::default_instance_,
      MobileAdRequest_User_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_User, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_User, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdRequest_User));
  MobileAdRequest_User_Gender_descriptor_ = MobileAdRequest_User_descriptor_->enum_type(0);
  MobileAdRequest_TestFlag_descriptor_ = MobileAdRequest_descriptor_->enum_type(0);
  MobileAdRequest_Type_descriptor_ = MobileAdRequest_descriptor_->enum_type(1);
  MobileAdRequest_Platform_descriptor_ = MobileAdRequest_descriptor_->enum_type(2);
  MobileAdRequest_SlidingEffect_descriptor_ = MobileAdRequest_descriptor_->enum_type(3);
  MobileAdRequest_Orientation_descriptor_ = MobileAdRequest_descriptor_->enum_type(4);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_AdMobileRequest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdRequest_descriptor_, &MobileAdRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdRequest_Device_descriptor_, &MobileAdRequest_Device::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdRequest_User_descriptor_, &MobileAdRequest_User::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_AdMobileRequest_2eproto() {
  delete MobileAdRequest::default_instance_;
  delete MobileAdRequest_reflection_;
  delete MobileAdRequest_Device::default_instance_;
  delete MobileAdRequest_Device_reflection_;
  delete MobileAdRequest_User::default_instance_;
  delete MobileAdRequest_User_reflection_;
}

void protobuf_AddDesc_AdMobileRequest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025AdMobileRequest.proto\022\024com.rj.protos.m"
    "obile\"\242\013\n\017MobileAdRequest\022\n\n\002id\030\001 \001(\t\022\013\n"
    "\003aid\030\002 \002(\t\022\n\n\002ua\030\003 \001(\t\022<\n\004test\030\004 \001(\0162..c"
    "om.rj.protos.mobile.MobileAdRequest.Test"
    "Flag\022\017\n\007version\030\005 \001(\t\022\021\n\tlongitude\030\006 \001(\t"
    "\022\020\n\010latitude\030\007 \001(\t\022\025\n\radspaceStrict\030\010 \001("
    "\t\022\024\n\014adspaceWidth\030\t \001(\t\022\025\n\radspaceHeight"
    "\030\n \001(\t\0228\n\004type\030\013 \001(\0162*.com.rj.protos.mob"
    "ile.MobileAdRequest.Type\022\021\n\tipAddress\030\014 "
    "\001(\t\022\014\n\004udid\030\r \001(\t\022\014\n\004imei\030\016 \001(\t\022\026\n\016conne"
    "ctionType\030\017 \001(\t\022\021\n\ttimestamp\030\020 \001(\t\022@\n\010pl"
    "atform\030\021 \001(\0162..com.rj.protos.mobile.Mobi"
    "leAdRequest.Platform\022\023\n\013packageName\030\022 \001("
    "\t\022\017\n\007section\030\023 \001(\t\022\017\n\007adCount\030\024 \001(\t\022J\n\rs"
    "lidingEffect\030\025 \001(\01623.com.rj.protos.mobil"
    "e.MobileAdRequest.SlidingEffect\022F\n\013orien"
    "tation\030\026 \001(\01621.com.rj.protos.mobile.Mobi"
    "leAdRequest.Orientation\022\r\n\005dnsIp\030\027 \001(\t\022<"
    "\n\006device\030\030 \001(\0132,.com.rj.protos.mobile.Mo"
    "bileAdRequest.Device\0228\n\004user\030\031 \001(\0132*.com"
    ".rj.protos.mobile.MobileAdRequest.User\022\017"
    "\n\007wifiMac\030\032 \001(\t\022\024\n\014bluetoothMac\030\033 \001(\t\022\027\n"
    "\017simSerialNumber\030\034 \001(\t\022\021\n\tandroidId\030\035 \001("
    "\t\022\032\n\022deviceSerialNumber\030\036 \001(\t\022\027\n\017cpuSeri"
    "alNumber\030\037 \001(\t\032~\n\006Device\022\016\n\006vender\030\001 \001(\t"
    "\022\021\n\tmodelName\030\002 \001(\t\022\025\n\rmarketingName\030\003 \001"
    "(\t\022\023\n\013screenWidth\030\004 \001(\t\022\024\n\014screenHeight\030"
    "\005 \001(\t\022\017\n\007density\030\006 \001(\t\032\266\001\n\004User\022\013\n\003uid\030\001"
    " \001(\t\022A\n\006gender\030\002 \001(\01621.com.rj.protos.mob"
    "ile.MobileAdRequest.User.Gender\022\013\n\003Age\030\003"
    " \001(\t\022\023\n\013countryCode\030\004 \001(\t\022\016\n\006region\030\005 \001("
    "\t\022\014\n\004city\030\006 \001(\t\"\036\n\006Gender\022\010\n\004MALE\020\000\022\n\n\006F"
    "EMALE\020\001\"\037\n\010TestFlag\022\010\n\004TRUE\020\000\022\t\n\005FALSE\020\001"
    "\"\'\n\004Type\022\n\n\006BANNER\020\000\022\007\n\003VAD\020\001\022\n\n\006NATIVE\020"
    "\002\")\n\010Platform\022\007\n\003all\020\000\022\013\n\007android\020\001\022\007\n\003i"
    "os\020\002\"(\n\rSlidingEffect\022\n\n\006SINGLE\020\000\022\013\n\007SLI"
    "DING\020\001\"*\n\013Orientation\022\r\n\tLANDSCAPE\020\000\022\014\n\010"
    "PORTRAIT\020\001B,\n\024com.rj.protos.mobileB\024Mobi"
    "leAdRequestProto", 1536);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AdMobileRequest.proto", &protobuf_RegisterTypes);
  MobileAdRequest::default_instance_ = new MobileAdRequest();
  MobileAdRequest_Device::default_instance_ = new MobileAdRequest_Device();
  MobileAdRequest_User::default_instance_ = new MobileAdRequest_User();
  MobileAdRequest::default_instance_->InitAsDefaultInstance();
  MobileAdRequest_Device::default_instance_->InitAsDefaultInstance();
  MobileAdRequest_User::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_AdMobileRequest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_AdMobileRequest_2eproto {
  StaticDescriptorInitializer_AdMobileRequest_2eproto() {
    protobuf_AddDesc_AdMobileRequest_2eproto();
  }
} static_descriptor_initializer_AdMobileRequest_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* MobileAdRequest_TestFlag_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdRequest_TestFlag_descriptor_;
}
bool MobileAdRequest_TestFlag_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MobileAdRequest_TestFlag MobileAdRequest::TRUE;
const MobileAdRequest_TestFlag MobileAdRequest::FALSE;
const MobileAdRequest_TestFlag MobileAdRequest::TestFlag_MIN;
const MobileAdRequest_TestFlag MobileAdRequest::TestFlag_MAX;
const int MobileAdRequest::TestFlag_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* MobileAdRequest_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdRequest_Type_descriptor_;
}
bool MobileAdRequest_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MobileAdRequest_Type MobileAdRequest::BANNER;
const MobileAdRequest_Type MobileAdRequest::VAD;
const MobileAdRequest_Type MobileAdRequest::NATIVE;
const MobileAdRequest_Type MobileAdRequest::Type_MIN;
const MobileAdRequest_Type MobileAdRequest::Type_MAX;
const int MobileAdRequest::Type_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* MobileAdRequest_Platform_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdRequest_Platform_descriptor_;
}
bool MobileAdRequest_Platform_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MobileAdRequest_Platform MobileAdRequest::all;
const MobileAdRequest_Platform MobileAdRequest::android;
const MobileAdRequest_Platform MobileAdRequest::ios;
const MobileAdRequest_Platform MobileAdRequest::Platform_MIN;
const MobileAdRequest_Platform MobileAdRequest::Platform_MAX;
const int MobileAdRequest::Platform_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* MobileAdRequest_SlidingEffect_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdRequest_SlidingEffect_descriptor_;
}
bool MobileAdRequest_SlidingEffect_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MobileAdRequest_SlidingEffect MobileAdRequest::SINGLE;
const MobileAdRequest_SlidingEffect MobileAdRequest::SLIDING;
const MobileAdRequest_SlidingEffect MobileAdRequest::SlidingEffect_MIN;
const MobileAdRequest_SlidingEffect MobileAdRequest::SlidingEffect_MAX;
const int MobileAdRequest::SlidingEffect_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* MobileAdRequest_Orientation_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdRequest_Orientation_descriptor_;
}
bool MobileAdRequest_Orientation_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MobileAdRequest_Orientation MobileAdRequest::LANDSCAPE;
const MobileAdRequest_Orientation MobileAdRequest::PORTRAIT;
const MobileAdRequest_Orientation MobileAdRequest::Orientation_MIN;
const MobileAdRequest_Orientation MobileAdRequest::Orientation_MAX;
const int MobileAdRequest::Orientation_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MobileAdRequest_Device::kVenderFieldNumber;
const int MobileAdRequest_Device::kModelNameFieldNumber;
const int MobileAdRequest_Device::kMarketingNameFieldNumber;
const int MobileAdRequest_Device::kScreenWidthFieldNumber;
const int MobileAdRequest_Device::kScreenHeightFieldNumber;
const int MobileAdRequest_Device::kDensityFieldNumber;
#endif  // !_MSC_VER

MobileAdRequest_Device::MobileAdRequest_Device()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdRequest_Device::InitAsDefaultInstance() {
}

MobileAdRequest_Device::MobileAdRequest_Device(const MobileAdRequest_Device& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdRequest_Device::SharedCtor() {
  _cached_size_ = 0;
  vender_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  modelname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  marketingname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  screenwidth_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  screenheight_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  density_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdRequest_Device::~MobileAdRequest_Device() {
  SharedDtor();
}

void MobileAdRequest_Device::SharedDtor() {
  if (vender_ != &::google::protobuf::internal::kEmptyString) {
    delete vender_;
  }
  if (modelname_ != &::google::protobuf::internal::kEmptyString) {
    delete modelname_;
  }
  if (marketingname_ != &::google::protobuf::internal::kEmptyString) {
    delete marketingname_;
  }
  if (screenwidth_ != &::google::protobuf::internal::kEmptyString) {
    delete screenwidth_;
  }
  if (screenheight_ != &::google::protobuf::internal::kEmptyString) {
    delete screenheight_;
  }
  if (density_ != &::google::protobuf::internal::kEmptyString) {
    delete density_;
  }
  if (this != default_instance_) {
  }
}

void MobileAdRequest_Device::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdRequest_Device::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdRequest_Device_descriptor_;
}

const MobileAdRequest_Device& MobileAdRequest_Device::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdMobileRequest_2eproto();
  return *default_instance_;
}

MobileAdRequest_Device* MobileAdRequest_Device::default_instance_ = NULL;

MobileAdRequest_Device* MobileAdRequest_Device::New() const {
  return new MobileAdRequest_Device;
}

void MobileAdRequest_Device::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_vender()) {
      if (vender_ != &::google::protobuf::internal::kEmptyString) {
        vender_->clear();
      }
    }
    if (has_modelname()) {
      if (modelname_ != &::google::protobuf::internal::kEmptyString) {
        modelname_->clear();
      }
    }
    if (has_marketingname()) {
      if (marketingname_ != &::google::protobuf::internal::kEmptyString) {
        marketingname_->clear();
      }
    }
    if (has_screenwidth()) {
      if (screenwidth_ != &::google::protobuf::internal::kEmptyString) {
        screenwidth_->clear();
      }
    }
    if (has_screenheight()) {
      if (screenheight_ != &::google::protobuf::internal::kEmptyString) {
        screenheight_->clear();
      }
    }
    if (has_density()) {
      if (density_ != &::google::protobuf::internal::kEmptyString) {
        density_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdRequest_Device::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string vender = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vender()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->vender().data(), this->vender().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_modelName;
        break;
      }

      // optional string modelName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_modelName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modelname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->modelname().data(), this->modelname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_marketingName;
        break;
      }

      // optional string marketingName = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_marketingName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_marketingname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->marketingname().data(), this->marketingname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_screenWidth;
        break;
      }

      // optional string screenWidth = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_screenWidth:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_screenwidth()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->screenwidth().data(), this->screenwidth().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_screenHeight;
        break;
      }

      // optional string screenHeight = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_screenHeight:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_screenheight()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->screenheight().data(), this->screenheight().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_density;
        break;
      }

      // optional string density = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_density:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_density()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->density().data(), this->density().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdRequest_Device::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string vender = 1;
  if (has_vender()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->vender().data(), this->vender().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->vender(), output);
  }

  // optional string modelName = 2;
  if (has_modelname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->modelname().data(), this->modelname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->modelname(), output);
  }

  // optional string marketingName = 3;
  if (has_marketingname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketingname().data(), this->marketingname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->marketingname(), output);
  }

  // optional string screenWidth = 4;
  if (has_screenwidth()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->screenwidth().data(), this->screenwidth().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->screenwidth(), output);
  }

  // optional string screenHeight = 5;
  if (has_screenheight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->screenheight().data(), this->screenheight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->screenheight(), output);
  }

  // optional string density = 6;
  if (has_density()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->density().data(), this->density().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->density(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdRequest_Device::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string vender = 1;
  if (has_vender()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->vender().data(), this->vender().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vender(), target);
  }

  // optional string modelName = 2;
  if (has_modelname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->modelname().data(), this->modelname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->modelname(), target);
  }

  // optional string marketingName = 3;
  if (has_marketingname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketingname().data(), this->marketingname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->marketingname(), target);
  }

  // optional string screenWidth = 4;
  if (has_screenwidth()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->screenwidth().data(), this->screenwidth().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->screenwidth(), target);
  }

  // optional string screenHeight = 5;
  if (has_screenheight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->screenheight().data(), this->screenheight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->screenheight(), target);
  }

  // optional string density = 6;
  if (has_density()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->density().data(), this->density().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->density(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdRequest_Device::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string vender = 1;
    if (has_vender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vender());
    }

    // optional string modelName = 2;
    if (has_modelname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->modelname());
    }

    // optional string marketingName = 3;
    if (has_marketingname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->marketingname());
    }

    // optional string screenWidth = 4;
    if (has_screenwidth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->screenwidth());
    }

    // optional string screenHeight = 5;
    if (has_screenheight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->screenheight());
    }

    // optional string density = 6;
    if (has_density()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->density());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdRequest_Device::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdRequest_Device* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdRequest_Device*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdRequest_Device::MergeFrom(const MobileAdRequest_Device& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_vender()) {
      set_vender(from.vender());
    }
    if (from.has_modelname()) {
      set_modelname(from.modelname());
    }
    if (from.has_marketingname()) {
      set_marketingname(from.marketingname());
    }
    if (from.has_screenwidth()) {
      set_screenwidth(from.screenwidth());
    }
    if (from.has_screenheight()) {
      set_screenheight(from.screenheight());
    }
    if (from.has_density()) {
      set_density(from.density());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdRequest_Device::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdRequest_Device::CopyFrom(const MobileAdRequest_Device& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdRequest_Device::IsInitialized() const {

  return true;
}

void MobileAdRequest_Device::Swap(MobileAdRequest_Device* other) {
  if (other != this) {
    std::swap(vender_, other->vender_);
    std::swap(modelname_, other->modelname_);
    std::swap(marketingname_, other->marketingname_);
    std::swap(screenwidth_, other->screenwidth_);
    std::swap(screenheight_, other->screenheight_);
    std::swap(density_, other->density_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdRequest_Device::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdRequest_Device_descriptor_;
  metadata.reflection = MobileAdRequest_Device_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

const ::google::protobuf::EnumDescriptor* MobileAdRequest_User_Gender_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdRequest_User_Gender_descriptor_;
}
bool MobileAdRequest_User_Gender_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MobileAdRequest_User_Gender MobileAdRequest_User::MALE;
const MobileAdRequest_User_Gender MobileAdRequest_User::FEMALE;
const MobileAdRequest_User_Gender MobileAdRequest_User::Gender_MIN;
const MobileAdRequest_User_Gender MobileAdRequest_User::Gender_MAX;
const int MobileAdRequest_User::Gender_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MobileAdRequest_User::kUidFieldNumber;
const int MobileAdRequest_User::kGenderFieldNumber;
const int MobileAdRequest_User::kAgeFieldNumber;
const int MobileAdRequest_User::kCountryCodeFieldNumber;
const int MobileAdRequest_User::kRegionFieldNumber;
const int MobileAdRequest_User::kCityFieldNumber;
#endif  // !_MSC_VER

MobileAdRequest_User::MobileAdRequest_User()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdRequest_User::InitAsDefaultInstance() {
}

MobileAdRequest_User::MobileAdRequest_User(const MobileAdRequest_User& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdRequest_User::SharedCtor() {
  _cached_size_ = 0;
  uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  gender_ = 0;
  age_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  countrycode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  region_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  city_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdRequest_User::~MobileAdRequest_User() {
  SharedDtor();
}

void MobileAdRequest_User::SharedDtor() {
  if (uid_ != &::google::protobuf::internal::kEmptyString) {
    delete uid_;
  }
  if (age_ != &::google::protobuf::internal::kEmptyString) {
    delete age_;
  }
  if (countrycode_ != &::google::protobuf::internal::kEmptyString) {
    delete countrycode_;
  }
  if (region_ != &::google::protobuf::internal::kEmptyString) {
    delete region_;
  }
  if (city_ != &::google::protobuf::internal::kEmptyString) {
    delete city_;
  }
  if (this != default_instance_) {
  }
}

void MobileAdRequest_User::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdRequest_User::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdRequest_User_descriptor_;
}

const MobileAdRequest_User& MobileAdRequest_User::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdMobileRequest_2eproto();
  return *default_instance_;
}

MobileAdRequest_User* MobileAdRequest_User::default_instance_ = NULL;

MobileAdRequest_User* MobileAdRequest_User::New() const {
  return new MobileAdRequest_User;
}

void MobileAdRequest_User::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_uid()) {
      if (uid_ != &::google::protobuf::internal::kEmptyString) {
        uid_->clear();
      }
    }
    gender_ = 0;
    if (has_age()) {
      if (age_ != &::google::protobuf::internal::kEmptyString) {
        age_->clear();
      }
    }
    if (has_countrycode()) {
      if (countrycode_ != &::google::protobuf::internal::kEmptyString) {
        countrycode_->clear();
      }
    }
    if (has_region()) {
      if (region_ != &::google::protobuf::internal::kEmptyString) {
        region_->clear();
      }
    }
    if (has_city()) {
      if (city_ != &::google::protobuf::internal::kEmptyString) {
        city_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdRequest_User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string uid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uid().data(), this->uid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gender;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdRequest.User.Gender gender = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gender:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::rj::protos::mobile::MobileAdRequest_User_Gender_IsValid(value)) {
            set_gender(static_cast< ::com::rj::protos::mobile::MobileAdRequest_User_Gender >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_Age;
        break;
      }

      // optional string Age = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Age:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_age()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->age().data(), this->age().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_countryCode;
        break;
      }

      // optional string countryCode = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_countryCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_countrycode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->countrycode().data(), this->countrycode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_region;
        break;
      }

      // optional string region = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_region:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->region().data(), this->region().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_city;
        break;
      }

      // optional string city = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_city:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->city().data(), this->city().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdRequest_User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->uid(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.User.Gender gender = 2;
  if (has_gender()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->gender(), output);
  }

  // optional string Age = 3;
  if (has_age()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->age().data(), this->age().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->age(), output);
  }

  // optional string countryCode = 4;
  if (has_countrycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->countrycode().data(), this->countrycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->countrycode(), output);
  }

  // optional string region = 5;
  if (has_region()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->region().data(), this->region().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->region(), output);
  }

  // optional string city = 6;
  if (has_city()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->city(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdRequest_User::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.User.Gender gender = 2;
  if (has_gender()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->gender(), target);
  }

  // optional string Age = 3;
  if (has_age()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->age().data(), this->age().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->age(), target);
  }

  // optional string countryCode = 4;
  if (has_countrycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->countrycode().data(), this->countrycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->countrycode(), target);
  }

  // optional string region = 5;
  if (has_region()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->region().data(), this->region().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->region(), target);
  }

  // optional string city = 6;
  if (has_city()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->city(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdRequest_User::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uid());
    }

    // optional .com.rj.protos.mobile.MobileAdRequest.User.Gender gender = 2;
    if (has_gender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->gender());
    }

    // optional string Age = 3;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->age());
    }

    // optional string countryCode = 4;
    if (has_countrycode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->countrycode());
    }

    // optional string region = 5;
    if (has_region()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->region());
    }

    // optional string city = 6;
    if (has_city()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->city());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdRequest_User::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdRequest_User* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdRequest_User*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdRequest_User::MergeFrom(const MobileAdRequest_User& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_gender()) {
      set_gender(from.gender());
    }
    if (from.has_age()) {
      set_age(from.age());
    }
    if (from.has_countrycode()) {
      set_countrycode(from.countrycode());
    }
    if (from.has_region()) {
      set_region(from.region());
    }
    if (from.has_city()) {
      set_city(from.city());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdRequest_User::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdRequest_User::CopyFrom(const MobileAdRequest_User& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdRequest_User::IsInitialized() const {

  return true;
}

void MobileAdRequest_User::Swap(MobileAdRequest_User* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(gender_, other->gender_);
    std::swap(age_, other->age_);
    std::swap(countrycode_, other->countrycode_);
    std::swap(region_, other->region_);
    std::swap(city_, other->city_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdRequest_User::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdRequest_User_descriptor_;
  metadata.reflection = MobileAdRequest_User_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MobileAdRequest::kIdFieldNumber;
const int MobileAdRequest::kAidFieldNumber;
const int MobileAdRequest::kUaFieldNumber;
const int MobileAdRequest::kTestFieldNumber;
const int MobileAdRequest::kVersionFieldNumber;
const int MobileAdRequest::kLongitudeFieldNumber;
const int MobileAdRequest::kLatitudeFieldNumber;
const int MobileAdRequest::kAdspaceStrictFieldNumber;
const int MobileAdRequest::kAdspaceWidthFieldNumber;
const int MobileAdRequest::kAdspaceHeightFieldNumber;
const int MobileAdRequest::kTypeFieldNumber;
const int MobileAdRequest::kIpAddressFieldNumber;
const int MobileAdRequest::kUdidFieldNumber;
const int MobileAdRequest::kImeiFieldNumber;
const int MobileAdRequest::kConnectionTypeFieldNumber;
const int MobileAdRequest::kTimestampFieldNumber;
const int MobileAdRequest::kPlatformFieldNumber;
const int MobileAdRequest::kPackageNameFieldNumber;
const int MobileAdRequest::kSectionFieldNumber;
const int MobileAdRequest::kAdCountFieldNumber;
const int MobileAdRequest::kSlidingEffectFieldNumber;
const int MobileAdRequest::kOrientationFieldNumber;
const int MobileAdRequest::kDnsIpFieldNumber;
const int MobileAdRequest::kDeviceFieldNumber;
const int MobileAdRequest::kUserFieldNumber;
const int MobileAdRequest::kWifiMacFieldNumber;
const int MobileAdRequest::kBluetoothMacFieldNumber;
const int MobileAdRequest::kSimSerialNumberFieldNumber;
const int MobileAdRequest::kAndroidIdFieldNumber;
const int MobileAdRequest::kDeviceSerialNumberFieldNumber;
const int MobileAdRequest::kCpuSerialNumberFieldNumber;
#endif  // !_MSC_VER

MobileAdRequest::MobileAdRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdRequest::InitAsDefaultInstance() {
  device_ = const_cast< ::com::rj::protos::mobile::MobileAdRequest_Device*>(&::com::rj::protos::mobile::MobileAdRequest_Device::default_instance());
  user_ = const_cast< ::com::rj::protos::mobile::MobileAdRequest_User*>(&::com::rj::protos::mobile::MobileAdRequest_User::default_instance());
}

MobileAdRequest::MobileAdRequest(const MobileAdRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdRequest::SharedCtor() {
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  aid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ua_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  test_ = 0;
  version_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  longitude_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  latitude_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  adspacestrict_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  adspacewidth_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  adspaceheight_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  ipaddress_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  udid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  imei_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  connectiontype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  timestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  platform_ = 0;
  packagename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  section_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  adcount_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  slidingeffect_ = 0;
  orientation_ = 0;
  dnsip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  device_ = NULL;
  user_ = NULL;
  wifimac_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bluetoothmac_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  simserialnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  androidid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  deviceserialnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cpuserialnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdRequest::~MobileAdRequest() {
  SharedDtor();
}

void MobileAdRequest::SharedDtor() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (aid_ != &::google::protobuf::internal::kEmptyString) {
    delete aid_;
  }
  if (ua_ != &::google::protobuf::internal::kEmptyString) {
    delete ua_;
  }
  if (version_ != &::google::protobuf::internal::kEmptyString) {
    delete version_;
  }
  if (longitude_ != &::google::protobuf::internal::kEmptyString) {
    delete longitude_;
  }
  if (latitude_ != &::google::protobuf::internal::kEmptyString) {
    delete latitude_;
  }
  if (adspacestrict_ != &::google::protobuf::internal::kEmptyString) {
    delete adspacestrict_;
  }
  if (adspacewidth_ != &::google::protobuf::internal::kEmptyString) {
    delete adspacewidth_;
  }
  if (adspaceheight_ != &::google::protobuf::internal::kEmptyString) {
    delete adspaceheight_;
  }
  if (ipaddress_ != &::google::protobuf::internal::kEmptyString) {
    delete ipaddress_;
  }
  if (udid_ != &::google::protobuf::internal::kEmptyString) {
    delete udid_;
  }
  if (imei_ != &::google::protobuf::internal::kEmptyString) {
    delete imei_;
  }
  if (connectiontype_ != &::google::protobuf::internal::kEmptyString) {
    delete connectiontype_;
  }
  if (timestamp_ != &::google::protobuf::internal::kEmptyString) {
    delete timestamp_;
  }
  if (packagename_ != &::google::protobuf::internal::kEmptyString) {
    delete packagename_;
  }
  if (section_ != &::google::protobuf::internal::kEmptyString) {
    delete section_;
  }
  if (adcount_ != &::google::protobuf::internal::kEmptyString) {
    delete adcount_;
  }
  if (dnsip_ != &::google::protobuf::internal::kEmptyString) {
    delete dnsip_;
  }
  if (wifimac_ != &::google::protobuf::internal::kEmptyString) {
    delete wifimac_;
  }
  if (bluetoothmac_ != &::google::protobuf::internal::kEmptyString) {
    delete bluetoothmac_;
  }
  if (simserialnumber_ != &::google::protobuf::internal::kEmptyString) {
    delete simserialnumber_;
  }
  if (androidid_ != &::google::protobuf::internal::kEmptyString) {
    delete androidid_;
  }
  if (deviceserialnumber_ != &::google::protobuf::internal::kEmptyString) {
    delete deviceserialnumber_;
  }
  if (cpuserialnumber_ != &::google::protobuf::internal::kEmptyString) {
    delete cpuserialnumber_;
  }
  if (this != default_instance_) {
    delete device_;
    delete user_;
  }
}

void MobileAdRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdRequest_descriptor_;
}

const MobileAdRequest& MobileAdRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdMobileRequest_2eproto();
  return *default_instance_;
}

MobileAdRequest* MobileAdRequest::default_instance_ = NULL;

MobileAdRequest* MobileAdRequest::New() const {
  return new MobileAdRequest;
}

void MobileAdRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
    if (has_aid()) {
      if (aid_ != &::google::protobuf::internal::kEmptyString) {
        aid_->clear();
      }
    }
    if (has_ua()) {
      if (ua_ != &::google::protobuf::internal::kEmptyString) {
        ua_->clear();
      }
    }
    test_ = 0;
    if (has_version()) {
      if (version_ != &::google::protobuf::internal::kEmptyString) {
        version_->clear();
      }
    }
    if (has_longitude()) {
      if (longitude_ != &::google::protobuf::internal::kEmptyString) {
        longitude_->clear();
      }
    }
    if (has_latitude()) {
      if (latitude_ != &::google::protobuf::internal::kEmptyString) {
        latitude_->clear();
      }
    }
    if (has_adspacestrict()) {
      if (adspacestrict_ != &::google::protobuf::internal::kEmptyString) {
        adspacestrict_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_adspacewidth()) {
      if (adspacewidth_ != &::google::protobuf::internal::kEmptyString) {
        adspacewidth_->clear();
      }
    }
    if (has_adspaceheight()) {
      if (adspaceheight_ != &::google::protobuf::internal::kEmptyString) {
        adspaceheight_->clear();
      }
    }
    type_ = 0;
    if (has_ipaddress()) {
      if (ipaddress_ != &::google::protobuf::internal::kEmptyString) {
        ipaddress_->clear();
      }
    }
    if (has_udid()) {
      if (udid_ != &::google::protobuf::internal::kEmptyString) {
        udid_->clear();
      }
    }
    if (has_imei()) {
      if (imei_ != &::google::protobuf::internal::kEmptyString) {
        imei_->clear();
      }
    }
    if (has_connectiontype()) {
      if (connectiontype_ != &::google::protobuf::internal::kEmptyString) {
        connectiontype_->clear();
      }
    }
    if (has_timestamp()) {
      if (timestamp_ != &::google::protobuf::internal::kEmptyString) {
        timestamp_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    platform_ = 0;
    if (has_packagename()) {
      if (packagename_ != &::google::protobuf::internal::kEmptyString) {
        packagename_->clear();
      }
    }
    if (has_section()) {
      if (section_ != &::google::protobuf::internal::kEmptyString) {
        section_->clear();
      }
    }
    if (has_adcount()) {
      if (adcount_ != &::google::protobuf::internal::kEmptyString) {
        adcount_->clear();
      }
    }
    slidingeffect_ = 0;
    orientation_ = 0;
    if (has_dnsip()) {
      if (dnsip_ != &::google::protobuf::internal::kEmptyString) {
        dnsip_->clear();
      }
    }
    if (has_device()) {
      if (device_ != NULL) device_->::com::rj::protos::mobile::MobileAdRequest_Device::Clear();
    }
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (has_user()) {
      if (user_ != NULL) user_->::com::rj::protos::mobile::MobileAdRequest_User::Clear();
    }
    if (has_wifimac()) {
      if (wifimac_ != &::google::protobuf::internal::kEmptyString) {
        wifimac_->clear();
      }
    }
    if (has_bluetoothmac()) {
      if (bluetoothmac_ != &::google::protobuf::internal::kEmptyString) {
        bluetoothmac_->clear();
      }
    }
    if (has_simserialnumber()) {
      if (simserialnumber_ != &::google::protobuf::internal::kEmptyString) {
        simserialnumber_->clear();
      }
    }
    if (has_androidid()) {
      if (androidid_ != &::google::protobuf::internal::kEmptyString) {
        androidid_->clear();
      }
    }
    if (has_deviceserialnumber()) {
      if (deviceserialnumber_ != &::google::protobuf::internal::kEmptyString) {
        deviceserialnumber_->clear();
      }
    }
    if (has_cpuserialnumber()) {
      if (cpuserialnumber_ != &::google::protobuf::internal::kEmptyString) {
        cpuserialnumber_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_aid;
        break;
      }

      // required string aid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_aid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_aid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->aid().data(), this->aid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ua;
        break;
      }

      // optional string ua = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ua:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ua()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ua().data(), this->ua().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_test;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdRequest.TestFlag test = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_test:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::rj::protos::mobile::MobileAdRequest_TestFlag_IsValid(value)) {
            set_test(static_cast< ::com::rj::protos::mobile::MobileAdRequest_TestFlag >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_version;
        break;
      }

      // optional string version = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_longitude;
        break;
      }

      // optional string longitude = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_longitude:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_longitude()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->longitude().data(), this->longitude().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_latitude;
        break;
      }

      // optional string latitude = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_latitude:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_latitude()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->latitude().data(), this->latitude().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_adspaceStrict;
        break;
      }

      // optional string adspaceStrict = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adspaceStrict:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adspacestrict()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->adspacestrict().data(), this->adspacestrict().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_adspaceWidth;
        break;
      }

      // optional string adspaceWidth = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adspaceWidth:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adspacewidth()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->adspacewidth().data(), this->adspacewidth().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_adspaceHeight;
        break;
      }

      // optional string adspaceHeight = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adspaceHeight:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adspaceheight()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->adspaceheight().data(), this->adspaceheight().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_type;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdRequest.Type type = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::rj::protos::mobile::MobileAdRequest_Type_IsValid(value)) {
            set_type(static_cast< ::com::rj::protos::mobile::MobileAdRequest_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(11, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_ipAddress;
        break;
      }

      // optional string ipAddress = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ipAddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ipaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ipaddress().data(), this->ipaddress().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_udid;
        break;
      }

      // optional string udid = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_udid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_udid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->udid().data(), this->udid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_imei;
        break;
      }

      // optional string imei = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_imei:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imei()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->imei().data(), this->imei().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_connectionType;
        break;
      }

      // optional string connectionType = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_connectionType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_connectiontype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->connectiontype().data(), this->connectiontype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_timestamp;
        break;
      }

      // optional string timestamp = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_timestamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timestamp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->timestamp().data(), this->timestamp().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_platform;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdRequest.Platform platform = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_platform:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::rj::protos::mobile::MobileAdRequest_Platform_IsValid(value)) {
            set_platform(static_cast< ::com::rj::protos::mobile::MobileAdRequest_Platform >(value));
          } else {
            mutable_unknown_fields()->AddVarint(17, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_packageName;
        break;
      }

      // optional string packageName = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_packageName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_packagename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->packagename().data(), this->packagename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_section;
        break;
      }

      // optional string section = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_section:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_section()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->section().data(), this->section().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_adCount;
        break;
      }

      // optional string adCount = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adCount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adcount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->adcount().data(), this->adcount().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_slidingEffect;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdRequest.SlidingEffect slidingEffect = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slidingEffect:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::rj::protos::mobile::MobileAdRequest_SlidingEffect_IsValid(value)) {
            set_slidingeffect(static_cast< ::com::rj::protos::mobile::MobileAdRequest_SlidingEffect >(value));
          } else {
            mutable_unknown_fields()->AddVarint(21, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_orientation;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdRequest.Orientation orientation = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_orientation:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::rj::protos::mobile::MobileAdRequest_Orientation_IsValid(value)) {
            set_orientation(static_cast< ::com::rj::protos::mobile::MobileAdRequest_Orientation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(22, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_dnsIp;
        break;
      }

      // optional string dnsIp = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dnsIp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dnsip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->dnsip().data(), this->dnsip().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(194)) goto parse_device;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdRequest.Device device = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_device:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_device()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_user;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdRequest.User user = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_user:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_wifiMac;
        break;
      }

      // optional string wifiMac = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_wifiMac:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wifimac()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->wifimac().data(), this->wifimac().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(218)) goto parse_bluetoothMac;
        break;
      }

      // optional string bluetoothMac = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bluetoothMac:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bluetoothmac()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bluetoothmac().data(), this->bluetoothmac().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(226)) goto parse_simSerialNumber;
        break;
      }

      // optional string simSerialNumber = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_simSerialNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_simserialnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->simserialnumber().data(), this->simserialnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(234)) goto parse_androidId;
        break;
      }

      // optional string androidId = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_androidId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_androidid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->androidid().data(), this->androidid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(242)) goto parse_deviceSerialNumber;
        break;
      }

      // optional string deviceSerialNumber = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_deviceSerialNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceserialnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->deviceserialnumber().data(), this->deviceserialnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(250)) goto parse_cpuSerialNumber;
        break;
      }

      // optional string cpuSerialNumber = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cpuSerialNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cpuserialnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cpuserialnumber().data(), this->cpuserialnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->id(), output);
  }

  // required string aid = 2;
  if (has_aid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->aid().data(), this->aid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->aid(), output);
  }

  // optional string ua = 3;
  if (has_ua()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ua().data(), this->ua().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->ua(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.TestFlag test = 4;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->test(), output);
  }

  // optional string version = 5;
  if (has_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->version(), output);
  }

  // optional string longitude = 6;
  if (has_longitude()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->longitude().data(), this->longitude().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->longitude(), output);
  }

  // optional string latitude = 7;
  if (has_latitude()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->latitude().data(), this->latitude().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->latitude(), output);
  }

  // optional string adspaceStrict = 8;
  if (has_adspacestrict()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adspacestrict().data(), this->adspacestrict().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->adspacestrict(), output);
  }

  // optional string adspaceWidth = 9;
  if (has_adspacewidth()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adspacewidth().data(), this->adspacewidth().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->adspacewidth(), output);
  }

  // optional string adspaceHeight = 10;
  if (has_adspaceheight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adspaceheight().data(), this->adspaceheight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->adspaceheight(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.Type type = 11;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->type(), output);
  }

  // optional string ipAddress = 12;
  if (has_ipaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ipaddress().data(), this->ipaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->ipaddress(), output);
  }

  // optional string udid = 13;
  if (has_udid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->udid().data(), this->udid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->udid(), output);
  }

  // optional string imei = 14;
  if (has_imei()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->imei().data(), this->imei().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->imei(), output);
  }

  // optional string connectionType = 15;
  if (has_connectiontype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->connectiontype().data(), this->connectiontype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->connectiontype(), output);
  }

  // optional string timestamp = 16;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->timestamp(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.Platform platform = 17;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      17, this->platform(), output);
  }

  // optional string packageName = 18;
  if (has_packagename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->packagename().data(), this->packagename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->packagename(), output);
  }

  // optional string section = 19;
  if (has_section()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->section().data(), this->section().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->section(), output);
  }

  // optional string adCount = 20;
  if (has_adcount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adcount().data(), this->adcount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->adcount(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.SlidingEffect slidingEffect = 21;
  if (has_slidingeffect()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      21, this->slidingeffect(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.Orientation orientation = 22;
  if (has_orientation()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      22, this->orientation(), output);
  }

  // optional string dnsIp = 23;
  if (has_dnsip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dnsip().data(), this->dnsip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->dnsip(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.Device device = 24;
  if (has_device()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->device(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.User user = 25;
  if (has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->user(), output);
  }

  // optional string wifiMac = 26;
  if (has_wifimac()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->wifimac().data(), this->wifimac().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      26, this->wifimac(), output);
  }

  // optional string bluetoothMac = 27;
  if (has_bluetoothmac()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bluetoothmac().data(), this->bluetoothmac().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      27, this->bluetoothmac(), output);
  }

  // optional string simSerialNumber = 28;
  if (has_simserialnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->simserialnumber().data(), this->simserialnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      28, this->simserialnumber(), output);
  }

  // optional string androidId = 29;
  if (has_androidid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->androidid().data(), this->androidid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      29, this->androidid(), output);
  }

  // optional string deviceSerialNumber = 30;
  if (has_deviceserialnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->deviceserialnumber().data(), this->deviceserialnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      30, this->deviceserialnumber(), output);
  }

  // optional string cpuSerialNumber = 31;
  if (has_cpuserialnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cpuserialnumber().data(), this->cpuserialnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      31, this->cpuserialnumber(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string aid = 2;
  if (has_aid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->aid().data(), this->aid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->aid(), target);
  }

  // optional string ua = 3;
  if (has_ua()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ua().data(), this->ua().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ua(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.TestFlag test = 4;
  if (has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->test(), target);
  }

  // optional string version = 5;
  if (has_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->version(), target);
  }

  // optional string longitude = 6;
  if (has_longitude()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->longitude().data(), this->longitude().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->longitude(), target);
  }

  // optional string latitude = 7;
  if (has_latitude()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->latitude().data(), this->latitude().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->latitude(), target);
  }

  // optional string adspaceStrict = 8;
  if (has_adspacestrict()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adspacestrict().data(), this->adspacestrict().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->adspacestrict(), target);
  }

  // optional string adspaceWidth = 9;
  if (has_adspacewidth()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adspacewidth().data(), this->adspacewidth().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->adspacewidth(), target);
  }

  // optional string adspaceHeight = 10;
  if (has_adspaceheight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adspaceheight().data(), this->adspaceheight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->adspaceheight(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.Type type = 11;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->type(), target);
  }

  // optional string ipAddress = 12;
  if (has_ipaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ipaddress().data(), this->ipaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->ipaddress(), target);
  }

  // optional string udid = 13;
  if (has_udid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->udid().data(), this->udid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->udid(), target);
  }

  // optional string imei = 14;
  if (has_imei()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->imei().data(), this->imei().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->imei(), target);
  }

  // optional string connectionType = 15;
  if (has_connectiontype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->connectiontype().data(), this->connectiontype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->connectiontype(), target);
  }

  // optional string timestamp = 16;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->timestamp(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.Platform platform = 17;
  if (has_platform()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      17, this->platform(), target);
  }

  // optional string packageName = 18;
  if (has_packagename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->packagename().data(), this->packagename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->packagename(), target);
  }

  // optional string section = 19;
  if (has_section()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->section().data(), this->section().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->section(), target);
  }

  // optional string adCount = 20;
  if (has_adcount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adcount().data(), this->adcount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->adcount(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.SlidingEffect slidingEffect = 21;
  if (has_slidingeffect()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      21, this->slidingeffect(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.Orientation orientation = 22;
  if (has_orientation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      22, this->orientation(), target);
  }

  // optional string dnsIp = 23;
  if (has_dnsip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dnsip().data(), this->dnsip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->dnsip(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.Device device = 24;
  if (has_device()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        24, this->device(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.User user = 25;
  if (has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        25, this->user(), target);
  }

  // optional string wifiMac = 26;
  if (has_wifimac()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->wifimac().data(), this->wifimac().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->wifimac(), target);
  }

  // optional string bluetoothMac = 27;
  if (has_bluetoothmac()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bluetoothmac().data(), this->bluetoothmac().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->bluetoothmac(), target);
  }

  // optional string simSerialNumber = 28;
  if (has_simserialnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->simserialnumber().data(), this->simserialnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->simserialnumber(), target);
  }

  // optional string androidId = 29;
  if (has_androidid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->androidid().data(), this->androidid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->androidid(), target);
  }

  // optional string deviceSerialNumber = 30;
  if (has_deviceserialnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->deviceserialnumber().data(), this->deviceserialnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->deviceserialnumber(), target);
  }

  // optional string cpuSerialNumber = 31;
  if (has_cpuserialnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cpuserialnumber().data(), this->cpuserialnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        31, this->cpuserialnumber(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // required string aid = 2;
    if (has_aid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->aid());
    }

    // optional string ua = 3;
    if (has_ua()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ua());
    }

    // optional .com.rj.protos.mobile.MobileAdRequest.TestFlag test = 4;
    if (has_test()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->test());
    }

    // optional string version = 5;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }

    // optional string longitude = 6;
    if (has_longitude()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->longitude());
    }

    // optional string latitude = 7;
    if (has_latitude()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->latitude());
    }

    // optional string adspaceStrict = 8;
    if (has_adspacestrict()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->adspacestrict());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string adspaceWidth = 9;
    if (has_adspacewidth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->adspacewidth());
    }

    // optional string adspaceHeight = 10;
    if (has_adspaceheight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->adspaceheight());
    }

    // optional .com.rj.protos.mobile.MobileAdRequest.Type type = 11;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional string ipAddress = 12;
    if (has_ipaddress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ipaddress());
    }

    // optional string udid = 13;
    if (has_udid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->udid());
    }

    // optional string imei = 14;
    if (has_imei()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->imei());
    }

    // optional string connectionType = 15;
    if (has_connectiontype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->connectiontype());
    }

    // optional string timestamp = 16;
    if (has_timestamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->timestamp());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional .com.rj.protos.mobile.MobileAdRequest.Platform platform = 17;
    if (has_platform()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->platform());
    }

    // optional string packageName = 18;
    if (has_packagename()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->packagename());
    }

    // optional string section = 19;
    if (has_section()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->section());
    }

    // optional string adCount = 20;
    if (has_adcount()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->adcount());
    }

    // optional .com.rj.protos.mobile.MobileAdRequest.SlidingEffect slidingEffect = 21;
    if (has_slidingeffect()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->slidingeffect());
    }

    // optional .com.rj.protos.mobile.MobileAdRequest.Orientation orientation = 22;
    if (has_orientation()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->orientation());
    }

    // optional string dnsIp = 23;
    if (has_dnsip()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dnsip());
    }

    // optional .com.rj.protos.mobile.MobileAdRequest.Device device = 24;
    if (has_device()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->device());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional .com.rj.protos.mobile.MobileAdRequest.User user = 25;
    if (has_user()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->user());
    }

    // optional string wifiMac = 26;
    if (has_wifimac()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->wifimac());
    }

    // optional string bluetoothMac = 27;
    if (has_bluetoothmac()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bluetoothmac());
    }

    // optional string simSerialNumber = 28;
    if (has_simserialnumber()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->simserialnumber());
    }

    // optional string androidId = 29;
    if (has_androidid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->androidid());
    }

    // optional string deviceSerialNumber = 30;
    if (has_deviceserialnumber()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->deviceserialnumber());
    }

    // optional string cpuSerialNumber = 31;
    if (has_cpuserialnumber()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cpuserialnumber());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdRequest::MergeFrom(const MobileAdRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_aid()) {
      set_aid(from.aid());
    }
    if (from.has_ua()) {
      set_ua(from.ua());
    }
    if (from.has_test()) {
      set_test(from.test());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_longitude()) {
      set_longitude(from.longitude());
    }
    if (from.has_latitude()) {
      set_latitude(from.latitude());
    }
    if (from.has_adspacestrict()) {
      set_adspacestrict(from.adspacestrict());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_adspacewidth()) {
      set_adspacewidth(from.adspacewidth());
    }
    if (from.has_adspaceheight()) {
      set_adspaceheight(from.adspaceheight());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_ipaddress()) {
      set_ipaddress(from.ipaddress());
    }
    if (from.has_udid()) {
      set_udid(from.udid());
    }
    if (from.has_imei()) {
      set_imei(from.imei());
    }
    if (from.has_connectiontype()) {
      set_connectiontype(from.connectiontype());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_platform()) {
      set_platform(from.platform());
    }
    if (from.has_packagename()) {
      set_packagename(from.packagename());
    }
    if (from.has_section()) {
      set_section(from.section());
    }
    if (from.has_adcount()) {
      set_adcount(from.adcount());
    }
    if (from.has_slidingeffect()) {
      set_slidingeffect(from.slidingeffect());
    }
    if (from.has_orientation()) {
      set_orientation(from.orientation());
    }
    if (from.has_dnsip()) {
      set_dnsip(from.dnsip());
    }
    if (from.has_device()) {
      mutable_device()->::com::rj::protos::mobile::MobileAdRequest_Device::MergeFrom(from.device());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_user()) {
      mutable_user()->::com::rj::protos::mobile::MobileAdRequest_User::MergeFrom(from.user());
    }
    if (from.has_wifimac()) {
      set_wifimac(from.wifimac());
    }
    if (from.has_bluetoothmac()) {
      set_bluetoothmac(from.bluetoothmac());
    }
    if (from.has_simserialnumber()) {
      set_simserialnumber(from.simserialnumber());
    }
    if (from.has_androidid()) {
      set_androidid(from.androidid());
    }
    if (from.has_deviceserialnumber()) {
      set_deviceserialnumber(from.deviceserialnumber());
    }
    if (from.has_cpuserialnumber()) {
      set_cpuserialnumber(from.cpuserialnumber());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdRequest::CopyFrom(const MobileAdRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void MobileAdRequest::Swap(MobileAdRequest* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(aid_, other->aid_);
    std::swap(ua_, other->ua_);
    std::swap(test_, other->test_);
    std::swap(version_, other->version_);
    std::swap(longitude_, other->longitude_);
    std::swap(latitude_, other->latitude_);
    std::swap(adspacestrict_, other->adspacestrict_);
    std::swap(adspacewidth_, other->adspacewidth_);
    std::swap(adspaceheight_, other->adspaceheight_);
    std::swap(type_, other->type_);
    std::swap(ipaddress_, other->ipaddress_);
    std::swap(udid_, other->udid_);
    std::swap(imei_, other->imei_);
    std::swap(connectiontype_, other->connectiontype_);
    std::swap(timestamp_, other->timestamp_);
    std::swap(platform_, other->platform_);
    std::swap(packagename_, other->packagename_);
    std::swap(section_, other->section_);
    std::swap(adcount_, other->adcount_);
    std::swap(slidingeffect_, other->slidingeffect_);
    std::swap(orientation_, other->orientation_);
    std::swap(dnsip_, other->dnsip_);
    std::swap(device_, other->device_);
    std::swap(user_, other->user_);
    std::swap(wifimac_, other->wifimac_);
    std::swap(bluetoothmac_, other->bluetoothmac_);
    std::swap(simserialnumber_, other->simserialnumber_);
    std::swap(androidid_, other->androidid_);
    std::swap(deviceserialnumber_, other->deviceserialnumber_);
    std::swap(cpuserialnumber_, other->cpuserialnumber_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdRequest_descriptor_;
  metadata.reflection = MobileAdRequest_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mobile
}  // namespace protos
}  // namespace rj
}  // namespace com

// @@protoc_insertion_point(global_scope)
