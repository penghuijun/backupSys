// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AdMobileResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AdMobileResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace rj {
namespace protos {
namespace mobile {

namespace {

const ::google::protobuf::Descriptor* MobileAdResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobileAdResponse_Banner_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdResponse_Banner_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MobileAdResponse_Banner_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MobileAdResponse_VAD_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdResponse_VAD_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobileAdResponse_VAD_Navigation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdResponse_VAD_Navigation_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobileAdResponse_VAD_Interstitial_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdResponse_VAD_Interstitial_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobileAdResponse_VAD_Video_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdResponse_VAD_Video_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobileAdResponse_VAD_Video_VideoTrackingEvents_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdResponse_VAD_Video_VideoTrackingEvents_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MobileAdResponse_VAD_Video_VideoTrackingEvents_TrackingType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MobileAdResponse_VAD_VadType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MobileAdResponse_VAD_Animation_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MobileAdResponse_VAD_Orientation_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MobileAdResponse_Native_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdResponse_Native_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobileAdResponse_Native_Content_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdResponse_Native_Content_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MobileAdResponse_Native_Content_MutipleMediaType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_AdMobileResponse_2eproto() {
  protobuf_AddDesc_AdMobileResponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "AdMobileResponse.proto");
  GOOGLE_CHECK(file != NULL);
  MobileAdResponse_descriptor_ = file->message_type(0);
  static const int MobileAdResponse_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, bidderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, banner_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, vad_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, native_),
  };
  MobileAdResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdResponse_descriptor_,
      MobileAdResponse::default_instance_,
      MobileAdResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdResponse));
  MobileAdResponse_Banner_descriptor_ = MobileAdResponse_descriptor_->nested_type(0);
  static const int MobileAdResponse_Banner_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Banner, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Banner, htmlmarkup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Banner, clickopentype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Banner, clickurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Banner, imageurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Banner, refresh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Banner, reload_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Banner, animation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Banner, impressionurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Banner, clicktrackingurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Banner, adlink_),
  };
  MobileAdResponse_Banner_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdResponse_Banner_descriptor_,
      MobileAdResponse_Banner::default_instance_,
      MobileAdResponse_Banner_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Banner, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Banner, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdResponse_Banner));
  MobileAdResponse_Banner_Type_descriptor_ = MobileAdResponse_Banner_descriptor_->enum_type(0);
  MobileAdResponse_VAD_descriptor_ = MobileAdResponse_descriptor_->nested_type(1);
  static const int MobileAdResponse_VAD_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD, animation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD, interstitial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD, video_),
  };
  MobileAdResponse_VAD_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdResponse_VAD_descriptor_,
      MobileAdResponse_VAD::default_instance_,
      MobileAdResponse_VAD_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdResponse_VAD));
  MobileAdResponse_VAD_Navigation_descriptor_ = MobileAdResponse_VAD_descriptor_->nested_type(0);
  static const int MobileAdResponse_VAD_Navigation_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Navigation, show_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Navigation, topbackgroundurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Navigation, topshow_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Navigation, toptitle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Navigation, toptitlecontent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Navigation, bottombackgroundurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Navigation, bottomshow_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Navigation, bottombackbutton_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Navigation, bottomforwardbutton_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Navigation, bottomreloadbutton_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Navigation, bottomexternalbutton_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Navigation, bottompausebutton_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Navigation, bottomreplaybutton_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Navigation, bottomtimer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Navigation, allowtap_),
  };
  MobileAdResponse_VAD_Navigation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdResponse_VAD_Navigation_descriptor_,
      MobileAdResponse_VAD_Navigation::default_instance_,
      MobileAdResponse_VAD_Navigation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Navigation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Navigation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdResponse_VAD_Navigation));
  MobileAdResponse_VAD_Interstitial_descriptor_ = MobileAdResponse_VAD_descriptor_->nested_type(1);
  static const int MobileAdResponse_VAD_Interstitial_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Interstitial, preload_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Interstitial, autoclose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Interstitial, orientation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Interstitial, htmlmarkup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Interstitial, imageurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Interstitial, clickurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Interstitial, adlink_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Interstitial, skipbuttonshow_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Interstitial, skipbuttonshowafter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Interstitial, navigation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Interstitial, impressionurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Interstitial, clicktrackingurl_),
  };
  MobileAdResponse_VAD_Interstitial_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdResponse_VAD_Interstitial_descriptor_,
      MobileAdResponse_VAD_Interstitial::default_instance_,
      MobileAdResponse_VAD_Interstitial_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Interstitial, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Interstitial, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdResponse_VAD_Interstitial));
  MobileAdResponse_VAD_Video_descriptor_ = MobileAdResponse_VAD_descriptor_->nested_type(2);
  static const int MobileAdResponse_VAD_Video_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video, orientation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video, expiration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video, creativedisplay_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video, creativedelivery_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video, creativetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video, creativebitrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video, creativewidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video, creativeheight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video, creativevideourl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video, videodurational_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video, skipbuttonshow_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video, skipbuttonshowafter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video, navigation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video, htmloverlayshow_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video, htmloverlayshowafter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video, htmloverlayurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video, htmloverlaycontent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video, videotrackingevents_),
  };
  MobileAdResponse_VAD_Video_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdResponse_VAD_Video_descriptor_,
      MobileAdResponse_VAD_Video::default_instance_,
      MobileAdResponse_VAD_Video_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdResponse_VAD_Video));
  MobileAdResponse_VAD_Video_VideoTrackingEvents_descriptor_ = MobileAdResponse_VAD_Video_descriptor_->nested_type(0);
  static const int MobileAdResponse_VAD_Video_VideoTrackingEvents_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video_VideoTrackingEvents, trackingtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video_VideoTrackingEvents, secondvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video_VideoTrackingEvents, trackingurl_),
  };
  MobileAdResponse_VAD_Video_VideoTrackingEvents_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdResponse_VAD_Video_VideoTrackingEvents_descriptor_,
      MobileAdResponse_VAD_Video_VideoTrackingEvents::default_instance_,
      MobileAdResponse_VAD_Video_VideoTrackingEvents_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video_VideoTrackingEvents, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_VAD_Video_VideoTrackingEvents, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdResponse_VAD_Video_VideoTrackingEvents));
  MobileAdResponse_VAD_Video_VideoTrackingEvents_TrackingType_descriptor_ = MobileAdResponse_VAD_Video_VideoTrackingEvents_descriptor_->enum_type(0);
  MobileAdResponse_VAD_VadType_descriptor_ = MobileAdResponse_VAD_descriptor_->enum_type(0);
  MobileAdResponse_VAD_Animation_descriptor_ = MobileAdResponse_VAD_descriptor_->enum_type(1);
  MobileAdResponse_VAD_Orientation_descriptor_ = MobileAdResponse_VAD_descriptor_->enum_type(2);
  MobileAdResponse_Native_descriptor_ = MobileAdResponse_descriptor_->nested_type(2);
  static const int MobileAdResponse_Native_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native, adtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native, content_),
  };
  MobileAdResponse_Native_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdResponse_Native_descriptor_,
      MobileAdResponse_Native::default_instance_,
      MobileAdResponse_Native_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdResponse_Native));
  MobileAdResponse_Native_Content_descriptor_ = MobileAdResponse_Native_descriptor_->nested_type(0);
  static const int MobileAdResponse_Native_Content_offsets_[21] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, contenttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, apptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, iconurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, subtitle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, mutiplemediatype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, imageurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, videourl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, youtubeurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, mraidmarkup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, clickurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, relatedinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, tracking_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, apppackage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, telnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, adlink_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, shareurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, impressionurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, imagetrackingurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, buttontrackingurl_),
  };
  MobileAdResponse_Native_Content_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdResponse_Native_Content_descriptor_,
      MobileAdResponse_Native_Content::default_instance_,
      MobileAdResponse_Native_Content_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Native_Content, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdResponse_Native_Content));
  MobileAdResponse_Native_Content_MutipleMediaType_descriptor_ = MobileAdResponse_Native_Content_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_AdMobileResponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdResponse_descriptor_, &MobileAdResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdResponse_Banner_descriptor_, &MobileAdResponse_Banner::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdResponse_VAD_descriptor_, &MobileAdResponse_VAD::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdResponse_VAD_Navigation_descriptor_, &MobileAdResponse_VAD_Navigation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdResponse_VAD_Interstitial_descriptor_, &MobileAdResponse_VAD_Interstitial::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdResponse_VAD_Video_descriptor_, &MobileAdResponse_VAD_Video::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdResponse_VAD_Video_VideoTrackingEvents_descriptor_, &MobileAdResponse_VAD_Video_VideoTrackingEvents::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdResponse_Native_descriptor_, &MobileAdResponse_Native::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdResponse_Native_Content_descriptor_, &MobileAdResponse_Native_Content::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_AdMobileResponse_2eproto() {
  delete MobileAdResponse::default_instance_;
  delete MobileAdResponse_reflection_;
  delete MobileAdResponse_Banner::default_instance_;
  delete MobileAdResponse_Banner_reflection_;
  delete MobileAdResponse_VAD::default_instance_;
  delete MobileAdResponse_VAD_reflection_;
  delete MobileAdResponse_VAD_Navigation::default_instance_;
  delete MobileAdResponse_VAD_Navigation_reflection_;
  delete MobileAdResponse_VAD_Interstitial::default_instance_;
  delete MobileAdResponse_VAD_Interstitial_reflection_;
  delete MobileAdResponse_VAD_Video::default_instance_;
  delete MobileAdResponse_VAD_Video_reflection_;
  delete MobileAdResponse_VAD_Video_VideoTrackingEvents::default_instance_;
  delete MobileAdResponse_VAD_Video_VideoTrackingEvents_reflection_;
  delete MobileAdResponse_Native::default_instance_;
  delete MobileAdResponse_Native_reflection_;
  delete MobileAdResponse_Native_Content::default_instance_;
  delete MobileAdResponse_Native_Content_reflection_;
}

void protobuf_AddDesc_AdMobileResponse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026AdMobileResponse.proto\022\024com.rj.protos."
    "mobile\"\352\033\n\020MobileAdResponse\022\n\n\002id\030\001 \002(\t\022"
    "\020\n\010bidderId\030\002 \001(\t\022=\n\006banner\030\003 \001(\0132-.com."
    "rj.protos.mobile.MobileAdResponse.Banner"
    "\0227\n\003vad\030\004 \001(\0132*.com.rj.protos.mobile.Mob"
    "ileAdResponse.VAD\022=\n\006native\030\005 \001(\0132-.com."
    "rj.protos.mobile.MobileAdResponse.Native"
    "\032\274\002\n\006Banner\022@\n\004type\030\001 \001(\01622.com.rj.proto"
    "s.mobile.MobileAdResponse.Banner.Type\022\022\n"
    "\nhtmlMarkup\030\002 \001(\t\022\025\n\rclickOpenType\030\003 \001(\t"
    "\022\020\n\010clickUrl\030\004 \001(\t\022\020\n\010imageUrl\030\005 \001(\t\022\017\n\007"
    "refresh\030\006 \001(\t\022\016\n\006reload\030\007 \001(\t\022\021\n\tanimati"
    "on\030\010 \001(\t\022\025\n\rimpressionUrl\030\t \003(\t\022\030\n\020click"
    "TrackingUrl\030\n \003(\t\022\016\n\006adLink\030\013 \001(\t\",\n\004Typ"
    "e\022\014\n\010IMAGEURL\020\000\022\n\n\006MARKUP\020\001\022\n\n\006ADLINK\020\002\032"
    "\250\022\n\003VAD\022@\n\004type\030\001 \001(\01622.com.rj.protos.mo"
    "bile.MobileAdResponse.VAD.VadType\022G\n\tani"
    "mation\030\002 \001(\01624.com.rj.protos.mobile.Mobi"
    "leAdResponse.VAD.Animation\022M\n\014interstiti"
    "al\030\003 \001(\01327.com.rj.protos.mobile.MobileAd"
    "Response.VAD.Interstitial\022\?\n\005video\030\004 \001(\013"
    "20.com.rj.protos.mobile.MobileAdResponse"
    ".VAD.Video\032\360\002\n\nNavigation\022\014\n\004show\030\001 \001(\t\022"
    "\030\n\020topBackgroundUrl\030\002 \001(\t\022\017\n\007topShow\030\003 \001"
    "(\t\022\020\n\010topTitle\030\004 \001(\t\022\027\n\017topTitleContent\030"
    "\005 \001(\t\022\033\n\023bottomBackgroundUrl\030\006 \001(\t\022\022\n\nbo"
    "ttomShow\030\007 \001(\t\022\030\n\020bottomBackButton\030\010 \001(\t"
    "\022\033\n\023bottomForwardButton\030\t \001(\t\022\032\n\022bottomR"
    "eloadButton\030\n \001(\t\022\034\n\024bottomExternalButto"
    "n\030\013 \001(\t\022\031\n\021bottomPausebutton\030\014 \001(\t\022\032\n\022bo"
    "ttomReplaybutton\030\r \001(\t\022\023\n\013bottomTimer\030\016 "
    "\001(\t\022\020\n\010allowtap\030\017 \001(\t\032\370\002\n\014Interstitial\022\017"
    "\n\007preload\030\001 \001(\t\022\021\n\tautoClose\030\002 \001(\t\022K\n\013or"
    "ientation\030\003 \001(\01626.com.rj.protos.mobile.M"
    "obileAdResponse.VAD.Orientation\022\022\n\nhtmlM"
    "arkup\030\004 \001(\t\022\020\n\010imageUrl\030\005 \001(\t\022\020\n\010clickUr"
    "l\030\006 \001(\t\022\016\n\006adLink\030\007 \001(\t\022\026\n\016skipButtonSho"
    "w\030\010 \001(\t\022\033\n\023skipBUttonShowAfter\030\t \001(\t\022I\n\n"
    "navigation\030\n \001(\01325.com.rj.protos.mobile."
    "MobileAdResponse.VAD.Navigation\022\025\n\rimpre"
    "ssionUrl\030\013 \003(\t\022\030\n\020clickTrackingUrl\030\014 \003(\t"
    "\032\320\007\n\005Video\022K\n\013orientation\030\001 \001(\01626.com.rj"
    ".protos.mobile.MobileAdResponse.VAD.Orie"
    "ntation\022\022\n\nexpiration\030\002 \001(\t\022\027\n\017creativeD"
    "isplay\030\003 \001(\t\022\030\n\020creativeDelivery\030\004 \001(\t\022\024"
    "\n\014creativeType\030\005 \001(\t\022\027\n\017creativeBitrate\030"
    "\006 \001(\t\022\025\n\rcreativeWidth\030\007 \001(\t\022\026\n\016creative"
    "Height\030\010 \001(\t\022\030\n\020creativeVideoUrl\030\t \001(\t\022\027"
    "\n\017videoDurational\030\n \001(\t\022\026\n\016skipButtonSho"
    "w\030\013 \001(\t\022\033\n\023skipBUttonShowAfter\030\014 \001(\t\022I\n\n"
    "navigation\030\r \001(\01325.com.rj.protos.mobile."
    "MobileAdResponse.VAD.Navigation\022\027\n\017htmlo"
    "verlayShow\030\016 \001(\t\022\034\n\024htmloverlayShowAfter"
    "\030\017 \001(\t\022\026\n\016htmloverlayUrl\030\020 \001(\t\022\032\n\022htmlov"
    "erlayContent\030\021 \001(\t\022a\n\023videoTrackingEvent"
    "s\030\022 \003(\0132D.com.rj.protos.mobile.MobileAdR"
    "esponse.VAD.Video.VideoTrackingEvents\032\323\002"
    "\n\023VideoTrackingEvents\022g\n\014trackingType\030\001 "
    "\001(\0162Q.com.rj.protos.mobile.MobileAdRespo"
    "nse.VAD.Video.VideoTrackingEvents.Tracki"
    "ngType\022\023\n\013secondValue\030\002 \001(\t\022\023\n\013trackingU"
    "rl\030\003 \001(\t\"\250\001\n\014TrackingType\022\t\n\005start\020\000\022\014\n\010"
    "complete\020\001\022\014\n\010midpoint\020\002\022\021\n\rfirstquartil"
    "e\020\003\022\021\n\rthirdquartile\020\004\022\t\n\005pause\020\005\022\013\n\007unp"
    "ause\020\006\022\010\n\004mute\020\007\022\n\n\006unmute\020\010\022\n\n\006replay\020\t"
    "\022\010\n\004skip\020\n\022\007\n\003sec\020\013\"b\n\007VadType\022\t\n\005VIDEO\020"
    "\000\022\020\n\014INTERSTITIAL\020\001\022\027\n\023VideoToInterstiti"
    "al\020\002\022\027\n\023InterstitialToVideo\020\003\022\010\n\004NoAd\020\004\""
    "\264\001\n\tAnimation\022\n\n\006FADEIN\020\000\022\013\n\007FADEOUT\020\001\022\021"
    "\n\rSLIDEBOTTOMIN\020\002\022\022\n\016SLIDEBOTTOMOUT\020\003\022\017\n"
    "\013SLIDELEFTIN\020\004\022\020\n\014SLIDELEFTOUT\020\005\022\020\n\014SLID"
    "ERIGHTIN\020\006\022\021\n\rSLIDERIGHTOUT\020\007\022\016\n\nSLIDETO"
    "PIN\020\010\022\017\n\013SLIDETOPOUT\020\t\"*\n\013Orientation\022\r\n"
    "\tLANDSCAPE\020\000\022\014\n\010PORTRAIT\020\001\032\226\005\n\006Native\022\016\n"
    "\006adType\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\022F\n\007content\030\003 \003"
    "(\01325.com.rj.protos.mobile.MobileAdRespon"
    "se.Native.Content\032\247\004\n\007Content\022\023\n\013content"
    "Type\030\001 \001(\t\022\017\n\007appType\030\002 \001(\t\022\017\n\007iconUrl\030\003"
    " \001(\t\022\r\n\005title\030\004 \001(\t\022\020\n\010subTitle\030\005 \001(\t\022\023\n"
    "\013description\030\006 \001(\t\022`\n\020mutipleMediaType\030\007"
    " \001(\0162F.com.rj.protos.mobile.MobileAdResp"
    "onse.Native.Content.MutipleMediaType\022\020\n\010"
    "imageUrl\030\010 \001(\t\022\020\n\010videoUrl\030\t \001(\t\022\022\n\nyout"
    "ubeUrl\030\n \001(\t\022\023\n\013mraidMarkUp\030\013 \001(\t\022\020\n\010cli"
    "ckUrl\030\014 \001(\t\022\023\n\013relatedInfo\030\r \001(\t\022\020\n\010trac"
    "king\030\016 \001(\t\022\022\n\nappPackage\030\017 \001(\t\022\016\n\006telNum"
    "\030\020 \001(\t\022\016\n\006adLink\030\021 \001(\t\022\020\n\010shareUrl\030\022 \001(\t"
    "\022\025\n\rimpressionUrl\030\023 \003(\t\022\030\n\020imageTracking"
    "Url\030\024 \003(\t\022\031\n\021buttonTrackingUrl\030\025 \003(\t\"5\n\020"
    "MutipleMediaType\022\t\n\005Video\020\000\022\013\n\007Youtube\020\001"
    "\022\t\n\005Mraid\020\002B-\n\024com.rj.protos.mobileB\025Mob"
    "ileAdResponseProto", 3658);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AdMobileResponse.proto", &protobuf_RegisterTypes);
  MobileAdResponse::default_instance_ = new MobileAdResponse();
  MobileAdResponse_Banner::default_instance_ = new MobileAdResponse_Banner();
  MobileAdResponse_VAD::default_instance_ = new MobileAdResponse_VAD();
  MobileAdResponse_VAD_Navigation::default_instance_ = new MobileAdResponse_VAD_Navigation();
  MobileAdResponse_VAD_Interstitial::default_instance_ = new MobileAdResponse_VAD_Interstitial();
  MobileAdResponse_VAD_Video::default_instance_ = new MobileAdResponse_VAD_Video();
  MobileAdResponse_VAD_Video_VideoTrackingEvents::default_instance_ = new MobileAdResponse_VAD_Video_VideoTrackingEvents();
  MobileAdResponse_Native::default_instance_ = new MobileAdResponse_Native();
  MobileAdResponse_Native_Content::default_instance_ = new MobileAdResponse_Native_Content();
  MobileAdResponse::default_instance_->InitAsDefaultInstance();
  MobileAdResponse_Banner::default_instance_->InitAsDefaultInstance();
  MobileAdResponse_VAD::default_instance_->InitAsDefaultInstance();
  MobileAdResponse_VAD_Navigation::default_instance_->InitAsDefaultInstance();
  MobileAdResponse_VAD_Interstitial::default_instance_->InitAsDefaultInstance();
  MobileAdResponse_VAD_Video::default_instance_->InitAsDefaultInstance();
  MobileAdResponse_VAD_Video_VideoTrackingEvents::default_instance_->InitAsDefaultInstance();
  MobileAdResponse_Native::default_instance_->InitAsDefaultInstance();
  MobileAdResponse_Native_Content::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_AdMobileResponse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_AdMobileResponse_2eproto {
  StaticDescriptorInitializer_AdMobileResponse_2eproto() {
    protobuf_AddDesc_AdMobileResponse_2eproto();
  }
} static_descriptor_initializer_AdMobileResponse_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* MobileAdResponse_Banner_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_Banner_Type_descriptor_;
}
bool MobileAdResponse_Banner_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MobileAdResponse_Banner_Type MobileAdResponse_Banner::IMAGEURL;
const MobileAdResponse_Banner_Type MobileAdResponse_Banner::MARKUP;
const MobileAdResponse_Banner_Type MobileAdResponse_Banner::ADLINK;
const MobileAdResponse_Banner_Type MobileAdResponse_Banner::Type_MIN;
const MobileAdResponse_Banner_Type MobileAdResponse_Banner::Type_MAX;
const int MobileAdResponse_Banner::Type_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MobileAdResponse_Banner::kTypeFieldNumber;
const int MobileAdResponse_Banner::kHtmlMarkupFieldNumber;
const int MobileAdResponse_Banner::kClickOpenTypeFieldNumber;
const int MobileAdResponse_Banner::kClickUrlFieldNumber;
const int MobileAdResponse_Banner::kImageUrlFieldNumber;
const int MobileAdResponse_Banner::kRefreshFieldNumber;
const int MobileAdResponse_Banner::kReloadFieldNumber;
const int MobileAdResponse_Banner::kAnimationFieldNumber;
const int MobileAdResponse_Banner::kImpressionUrlFieldNumber;
const int MobileAdResponse_Banner::kClickTrackingUrlFieldNumber;
const int MobileAdResponse_Banner::kAdLinkFieldNumber;
#endif  // !_MSC_VER

MobileAdResponse_Banner::MobileAdResponse_Banner()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdResponse_Banner::InitAsDefaultInstance() {
}

MobileAdResponse_Banner::MobileAdResponse_Banner(const MobileAdResponse_Banner& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdResponse_Banner::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  htmlmarkup_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  clickopentype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  clickurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  imageurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  refresh_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  reload_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  animation_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  adlink_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdResponse_Banner::~MobileAdResponse_Banner() {
  SharedDtor();
}

void MobileAdResponse_Banner::SharedDtor() {
  if (htmlmarkup_ != &::google::protobuf::internal::kEmptyString) {
    delete htmlmarkup_;
  }
  if (clickopentype_ != &::google::protobuf::internal::kEmptyString) {
    delete clickopentype_;
  }
  if (clickurl_ != &::google::protobuf::internal::kEmptyString) {
    delete clickurl_;
  }
  if (imageurl_ != &::google::protobuf::internal::kEmptyString) {
    delete imageurl_;
  }
  if (refresh_ != &::google::protobuf::internal::kEmptyString) {
    delete refresh_;
  }
  if (reload_ != &::google::protobuf::internal::kEmptyString) {
    delete reload_;
  }
  if (animation_ != &::google::protobuf::internal::kEmptyString) {
    delete animation_;
  }
  if (adlink_ != &::google::protobuf::internal::kEmptyString) {
    delete adlink_;
  }
  if (this != default_instance_) {
  }
}

void MobileAdResponse_Banner::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdResponse_Banner::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_Banner_descriptor_;
}

const MobileAdResponse_Banner& MobileAdResponse_Banner::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdMobileResponse_2eproto();
  return *default_instance_;
}

MobileAdResponse_Banner* MobileAdResponse_Banner::default_instance_ = NULL;

MobileAdResponse_Banner* MobileAdResponse_Banner::New() const {
  return new MobileAdResponse_Banner;
}

void MobileAdResponse_Banner::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (has_htmlmarkup()) {
      if (htmlmarkup_ != &::google::protobuf::internal::kEmptyString) {
        htmlmarkup_->clear();
      }
    }
    if (has_clickopentype()) {
      if (clickopentype_ != &::google::protobuf::internal::kEmptyString) {
        clickopentype_->clear();
      }
    }
    if (has_clickurl()) {
      if (clickurl_ != &::google::protobuf::internal::kEmptyString) {
        clickurl_->clear();
      }
    }
    if (has_imageurl()) {
      if (imageurl_ != &::google::protobuf::internal::kEmptyString) {
        imageurl_->clear();
      }
    }
    if (has_refresh()) {
      if (refresh_ != &::google::protobuf::internal::kEmptyString) {
        refresh_->clear();
      }
    }
    if (has_reload()) {
      if (reload_ != &::google::protobuf::internal::kEmptyString) {
        reload_->clear();
      }
    }
    if (has_animation()) {
      if (animation_ != &::google::protobuf::internal::kEmptyString) {
        animation_->clear();
      }
    }
  }
  if (_has_bits_[10 / 32] & (0xffu << (10 % 32))) {
    if (has_adlink()) {
      if (adlink_ != &::google::protobuf::internal::kEmptyString) {
        adlink_->clear();
      }
    }
  }
  impressionurl_.Clear();
  clicktrackingurl_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdResponse_Banner::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.rj.protos.mobile.MobileAdResponse.Banner.Type type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::rj::protos::mobile::MobileAdResponse_Banner_Type_IsValid(value)) {
            set_type(static_cast< ::com::rj::protos::mobile::MobileAdResponse_Banner_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_htmlMarkup;
        break;
      }

      // optional string htmlMarkup = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_htmlMarkup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_htmlmarkup()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->htmlmarkup().data(), this->htmlmarkup().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_clickOpenType;
        break;
      }

      // optional string clickOpenType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_clickOpenType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clickopentype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->clickopentype().data(), this->clickopentype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_clickUrl;
        break;
      }

      // optional string clickUrl = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_clickUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clickurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->clickurl().data(), this->clickurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_imageUrl;
        break;
      }

      // optional string imageUrl = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_imageUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imageurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->imageurl().data(), this->imageurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_refresh;
        break;
      }

      // optional string refresh = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_refresh:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_refresh()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->refresh().data(), this->refresh().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_reload;
        break;
      }

      // optional string reload = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_reload:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reload()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->reload().data(), this->reload().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_animation;
        break;
      }

      // optional string animation = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_animation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_animation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->animation().data(), this->animation().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_impressionUrl;
        break;
      }

      // repeated string impressionUrl = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_impressionUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_impressionurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->impressionurl(this->impressionurl_size() - 1).data(),
            this->impressionurl(this->impressionurl_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_impressionUrl;
        if (input->ExpectTag(82)) goto parse_clickTrackingUrl;
        break;
      }

      // repeated string clickTrackingUrl = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_clickTrackingUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_clicktrackingurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->clicktrackingurl(this->clicktrackingurl_size() - 1).data(),
            this->clicktrackingurl(this->clicktrackingurl_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_clickTrackingUrl;
        if (input->ExpectTag(90)) goto parse_adLink;
        break;
      }

      // optional string adLink = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adLink:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adlink()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->adlink().data(), this->adlink().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdResponse_Banner::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .com.rj.protos.mobile.MobileAdResponse.Banner.Type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional string htmlMarkup = 2;
  if (has_htmlmarkup()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->htmlmarkup().data(), this->htmlmarkup().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->htmlmarkup(), output);
  }

  // optional string clickOpenType = 3;
  if (has_clickopentype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clickopentype().data(), this->clickopentype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->clickopentype(), output);
  }

  // optional string clickUrl = 4;
  if (has_clickurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clickurl().data(), this->clickurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->clickurl(), output);
  }

  // optional string imageUrl = 5;
  if (has_imageurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->imageurl().data(), this->imageurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->imageurl(), output);
  }

  // optional string refresh = 6;
  if (has_refresh()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->refresh().data(), this->refresh().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->refresh(), output);
  }

  // optional string reload = 7;
  if (has_reload()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reload().data(), this->reload().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->reload(), output);
  }

  // optional string animation = 8;
  if (has_animation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->animation().data(), this->animation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->animation(), output);
  }

  // repeated string impressionUrl = 9;
  for (int i = 0; i < this->impressionurl_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->impressionurl(i).data(), this->impressionurl(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->impressionurl(i), output);
  }

  // repeated string clickTrackingUrl = 10;
  for (int i = 0; i < this->clicktrackingurl_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->clicktrackingurl(i).data(), this->clicktrackingurl(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->clicktrackingurl(i), output);
  }

  // optional string adLink = 11;
  if (has_adlink()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adlink().data(), this->adlink().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->adlink(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdResponse_Banner::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .com.rj.protos.mobile.MobileAdResponse.Banner.Type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional string htmlMarkup = 2;
  if (has_htmlmarkup()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->htmlmarkup().data(), this->htmlmarkup().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->htmlmarkup(), target);
  }

  // optional string clickOpenType = 3;
  if (has_clickopentype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clickopentype().data(), this->clickopentype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->clickopentype(), target);
  }

  // optional string clickUrl = 4;
  if (has_clickurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clickurl().data(), this->clickurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->clickurl(), target);
  }

  // optional string imageUrl = 5;
  if (has_imageurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->imageurl().data(), this->imageurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->imageurl(), target);
  }

  // optional string refresh = 6;
  if (has_refresh()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->refresh().data(), this->refresh().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->refresh(), target);
  }

  // optional string reload = 7;
  if (has_reload()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reload().data(), this->reload().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->reload(), target);
  }

  // optional string animation = 8;
  if (has_animation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->animation().data(), this->animation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->animation(), target);
  }

  // repeated string impressionUrl = 9;
  for (int i = 0; i < this->impressionurl_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->impressionurl(i).data(), this->impressionurl(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->impressionurl(i), target);
  }

  // repeated string clickTrackingUrl = 10;
  for (int i = 0; i < this->clicktrackingurl_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clicktrackingurl(i).data(), this->clicktrackingurl(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->clicktrackingurl(i), target);
  }

  // optional string adLink = 11;
  if (has_adlink()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adlink().data(), this->adlink().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->adlink(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdResponse_Banner::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .com.rj.protos.mobile.MobileAdResponse.Banner.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional string htmlMarkup = 2;
    if (has_htmlmarkup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->htmlmarkup());
    }

    // optional string clickOpenType = 3;
    if (has_clickopentype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clickopentype());
    }

    // optional string clickUrl = 4;
    if (has_clickurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clickurl());
    }

    // optional string imageUrl = 5;
    if (has_imageurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->imageurl());
    }

    // optional string refresh = 6;
    if (has_refresh()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->refresh());
    }

    // optional string reload = 7;
    if (has_reload()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reload());
    }

    // optional string animation = 8;
    if (has_animation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->animation());
    }

  }
  if (_has_bits_[10 / 32] & (0xffu << (10 % 32))) {
    // optional string adLink = 11;
    if (has_adlink()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->adlink());
    }

  }
  // repeated string impressionUrl = 9;
  total_size += 1 * this->impressionurl_size();
  for (int i = 0; i < this->impressionurl_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->impressionurl(i));
  }

  // repeated string clickTrackingUrl = 10;
  total_size += 1 * this->clicktrackingurl_size();
  for (int i = 0; i < this->clicktrackingurl_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->clicktrackingurl(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdResponse_Banner::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdResponse_Banner* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdResponse_Banner*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdResponse_Banner::MergeFrom(const MobileAdResponse_Banner& from) {
  GOOGLE_CHECK_NE(&from, this);
  impressionurl_.MergeFrom(from.impressionurl_);
  clicktrackingurl_.MergeFrom(from.clicktrackingurl_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_htmlmarkup()) {
      set_htmlmarkup(from.htmlmarkup());
    }
    if (from.has_clickopentype()) {
      set_clickopentype(from.clickopentype());
    }
    if (from.has_clickurl()) {
      set_clickurl(from.clickurl());
    }
    if (from.has_imageurl()) {
      set_imageurl(from.imageurl());
    }
    if (from.has_refresh()) {
      set_refresh(from.refresh());
    }
    if (from.has_reload()) {
      set_reload(from.reload());
    }
    if (from.has_animation()) {
      set_animation(from.animation());
    }
  }
  if (from._has_bits_[10 / 32] & (0xffu << (10 % 32))) {
    if (from.has_adlink()) {
      set_adlink(from.adlink());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdResponse_Banner::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdResponse_Banner::CopyFrom(const MobileAdResponse_Banner& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdResponse_Banner::IsInitialized() const {

  return true;
}

void MobileAdResponse_Banner::Swap(MobileAdResponse_Banner* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(htmlmarkup_, other->htmlmarkup_);
    std::swap(clickopentype_, other->clickopentype_);
    std::swap(clickurl_, other->clickurl_);
    std::swap(imageurl_, other->imageurl_);
    std::swap(refresh_, other->refresh_);
    std::swap(reload_, other->reload_);
    std::swap(animation_, other->animation_);
    impressionurl_.Swap(&other->impressionurl_);
    clicktrackingurl_.Swap(&other->clicktrackingurl_);
    std::swap(adlink_, other->adlink_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdResponse_Banner::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdResponse_Banner_descriptor_;
  metadata.reflection = MobileAdResponse_Banner_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

const ::google::protobuf::EnumDescriptor* MobileAdResponse_VAD_VadType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_VAD_VadType_descriptor_;
}
bool MobileAdResponse_VAD_VadType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MobileAdResponse_VAD_VadType MobileAdResponse_VAD::VIDEO;
const MobileAdResponse_VAD_VadType MobileAdResponse_VAD::INTERSTITIAL;
const MobileAdResponse_VAD_VadType MobileAdResponse_VAD::VideoToInterstitial;
const MobileAdResponse_VAD_VadType MobileAdResponse_VAD::InterstitialToVideo;
const MobileAdResponse_VAD_VadType MobileAdResponse_VAD::NoAd;
const MobileAdResponse_VAD_VadType MobileAdResponse_VAD::VadType_MIN;
const MobileAdResponse_VAD_VadType MobileAdResponse_VAD::VadType_MAX;
const int MobileAdResponse_VAD::VadType_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* MobileAdResponse_VAD_Animation_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_VAD_Animation_descriptor_;
}
bool MobileAdResponse_VAD_Animation_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MobileAdResponse_VAD_Animation MobileAdResponse_VAD::FADEIN;
const MobileAdResponse_VAD_Animation MobileAdResponse_VAD::FADEOUT;
const MobileAdResponse_VAD_Animation MobileAdResponse_VAD::SLIDEBOTTOMIN;
const MobileAdResponse_VAD_Animation MobileAdResponse_VAD::SLIDEBOTTOMOUT;
const MobileAdResponse_VAD_Animation MobileAdResponse_VAD::SLIDELEFTIN;
const MobileAdResponse_VAD_Animation MobileAdResponse_VAD::SLIDELEFTOUT;
const MobileAdResponse_VAD_Animation MobileAdResponse_VAD::SLIDERIGHTIN;
const MobileAdResponse_VAD_Animation MobileAdResponse_VAD::SLIDERIGHTOUT;
const MobileAdResponse_VAD_Animation MobileAdResponse_VAD::SLIDETOPIN;
const MobileAdResponse_VAD_Animation MobileAdResponse_VAD::SLIDETOPOUT;
const MobileAdResponse_VAD_Animation MobileAdResponse_VAD::Animation_MIN;
const MobileAdResponse_VAD_Animation MobileAdResponse_VAD::Animation_MAX;
const int MobileAdResponse_VAD::Animation_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* MobileAdResponse_VAD_Orientation_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_VAD_Orientation_descriptor_;
}
bool MobileAdResponse_VAD_Orientation_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MobileAdResponse_VAD_Orientation MobileAdResponse_VAD::LANDSCAPE;
const MobileAdResponse_VAD_Orientation MobileAdResponse_VAD::PORTRAIT;
const MobileAdResponse_VAD_Orientation MobileAdResponse_VAD::Orientation_MIN;
const MobileAdResponse_VAD_Orientation MobileAdResponse_VAD::Orientation_MAX;
const int MobileAdResponse_VAD::Orientation_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MobileAdResponse_VAD_Navigation::kShowFieldNumber;
const int MobileAdResponse_VAD_Navigation::kTopBackgroundUrlFieldNumber;
const int MobileAdResponse_VAD_Navigation::kTopShowFieldNumber;
const int MobileAdResponse_VAD_Navigation::kTopTitleFieldNumber;
const int MobileAdResponse_VAD_Navigation::kTopTitleContentFieldNumber;
const int MobileAdResponse_VAD_Navigation::kBottomBackgroundUrlFieldNumber;
const int MobileAdResponse_VAD_Navigation::kBottomShowFieldNumber;
const int MobileAdResponse_VAD_Navigation::kBottomBackButtonFieldNumber;
const int MobileAdResponse_VAD_Navigation::kBottomForwardButtonFieldNumber;
const int MobileAdResponse_VAD_Navigation::kBottomReloadButtonFieldNumber;
const int MobileAdResponse_VAD_Navigation::kBottomExternalButtonFieldNumber;
const int MobileAdResponse_VAD_Navigation::kBottomPausebuttonFieldNumber;
const int MobileAdResponse_VAD_Navigation::kBottomReplaybuttonFieldNumber;
const int MobileAdResponse_VAD_Navigation::kBottomTimerFieldNumber;
const int MobileAdResponse_VAD_Navigation::kAllowtapFieldNumber;
#endif  // !_MSC_VER

MobileAdResponse_VAD_Navigation::MobileAdResponse_VAD_Navigation()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdResponse_VAD_Navigation::InitAsDefaultInstance() {
}

MobileAdResponse_VAD_Navigation::MobileAdResponse_VAD_Navigation(const MobileAdResponse_VAD_Navigation& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdResponse_VAD_Navigation::SharedCtor() {
  _cached_size_ = 0;
  show_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  topbackgroundurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  topshow_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  toptitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  toptitlecontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bottombackgroundurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bottomshow_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bottombackbutton_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bottomforwardbutton_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bottomreloadbutton_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bottomexternalbutton_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bottompausebutton_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bottomreplaybutton_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bottomtimer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  allowtap_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdResponse_VAD_Navigation::~MobileAdResponse_VAD_Navigation() {
  SharedDtor();
}

void MobileAdResponse_VAD_Navigation::SharedDtor() {
  if (show_ != &::google::protobuf::internal::kEmptyString) {
    delete show_;
  }
  if (topbackgroundurl_ != &::google::protobuf::internal::kEmptyString) {
    delete topbackgroundurl_;
  }
  if (topshow_ != &::google::protobuf::internal::kEmptyString) {
    delete topshow_;
  }
  if (toptitle_ != &::google::protobuf::internal::kEmptyString) {
    delete toptitle_;
  }
  if (toptitlecontent_ != &::google::protobuf::internal::kEmptyString) {
    delete toptitlecontent_;
  }
  if (bottombackgroundurl_ != &::google::protobuf::internal::kEmptyString) {
    delete bottombackgroundurl_;
  }
  if (bottomshow_ != &::google::protobuf::internal::kEmptyString) {
    delete bottomshow_;
  }
  if (bottombackbutton_ != &::google::protobuf::internal::kEmptyString) {
    delete bottombackbutton_;
  }
  if (bottomforwardbutton_ != &::google::protobuf::internal::kEmptyString) {
    delete bottomforwardbutton_;
  }
  if (bottomreloadbutton_ != &::google::protobuf::internal::kEmptyString) {
    delete bottomreloadbutton_;
  }
  if (bottomexternalbutton_ != &::google::protobuf::internal::kEmptyString) {
    delete bottomexternalbutton_;
  }
  if (bottompausebutton_ != &::google::protobuf::internal::kEmptyString) {
    delete bottompausebutton_;
  }
  if (bottomreplaybutton_ != &::google::protobuf::internal::kEmptyString) {
    delete bottomreplaybutton_;
  }
  if (bottomtimer_ != &::google::protobuf::internal::kEmptyString) {
    delete bottomtimer_;
  }
  if (allowtap_ != &::google::protobuf::internal::kEmptyString) {
    delete allowtap_;
  }
  if (this != default_instance_) {
  }
}

void MobileAdResponse_VAD_Navigation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdResponse_VAD_Navigation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_VAD_Navigation_descriptor_;
}

const MobileAdResponse_VAD_Navigation& MobileAdResponse_VAD_Navigation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdMobileResponse_2eproto();
  return *default_instance_;
}

MobileAdResponse_VAD_Navigation* MobileAdResponse_VAD_Navigation::default_instance_ = NULL;

MobileAdResponse_VAD_Navigation* MobileAdResponse_VAD_Navigation::New() const {
  return new MobileAdResponse_VAD_Navigation;
}

void MobileAdResponse_VAD_Navigation::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_show()) {
      if (show_ != &::google::protobuf::internal::kEmptyString) {
        show_->clear();
      }
    }
    if (has_topbackgroundurl()) {
      if (topbackgroundurl_ != &::google::protobuf::internal::kEmptyString) {
        topbackgroundurl_->clear();
      }
    }
    if (has_topshow()) {
      if (topshow_ != &::google::protobuf::internal::kEmptyString) {
        topshow_->clear();
      }
    }
    if (has_toptitle()) {
      if (toptitle_ != &::google::protobuf::internal::kEmptyString) {
        toptitle_->clear();
      }
    }
    if (has_toptitlecontent()) {
      if (toptitlecontent_ != &::google::protobuf::internal::kEmptyString) {
        toptitlecontent_->clear();
      }
    }
    if (has_bottombackgroundurl()) {
      if (bottombackgroundurl_ != &::google::protobuf::internal::kEmptyString) {
        bottombackgroundurl_->clear();
      }
    }
    if (has_bottomshow()) {
      if (bottomshow_ != &::google::protobuf::internal::kEmptyString) {
        bottomshow_->clear();
      }
    }
    if (has_bottombackbutton()) {
      if (bottombackbutton_ != &::google::protobuf::internal::kEmptyString) {
        bottombackbutton_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_bottomforwardbutton()) {
      if (bottomforwardbutton_ != &::google::protobuf::internal::kEmptyString) {
        bottomforwardbutton_->clear();
      }
    }
    if (has_bottomreloadbutton()) {
      if (bottomreloadbutton_ != &::google::protobuf::internal::kEmptyString) {
        bottomreloadbutton_->clear();
      }
    }
    if (has_bottomexternalbutton()) {
      if (bottomexternalbutton_ != &::google::protobuf::internal::kEmptyString) {
        bottomexternalbutton_->clear();
      }
    }
    if (has_bottompausebutton()) {
      if (bottompausebutton_ != &::google::protobuf::internal::kEmptyString) {
        bottompausebutton_->clear();
      }
    }
    if (has_bottomreplaybutton()) {
      if (bottomreplaybutton_ != &::google::protobuf::internal::kEmptyString) {
        bottomreplaybutton_->clear();
      }
    }
    if (has_bottomtimer()) {
      if (bottomtimer_ != &::google::protobuf::internal::kEmptyString) {
        bottomtimer_->clear();
      }
    }
    if (has_allowtap()) {
      if (allowtap_ != &::google::protobuf::internal::kEmptyString) {
        allowtap_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdResponse_VAD_Navigation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string show = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_show()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->show().data(), this->show().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_topBackgroundUrl;
        break;
      }

      // optional string topBackgroundUrl = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_topBackgroundUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topbackgroundurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->topbackgroundurl().data(), this->topbackgroundurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_topShow;
        break;
      }

      // optional string topShow = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_topShow:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topshow()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->topshow().data(), this->topshow().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_topTitle;
        break;
      }

      // optional string topTitle = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_topTitle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_toptitle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->toptitle().data(), this->toptitle().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_topTitleContent;
        break;
      }

      // optional string topTitleContent = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_topTitleContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_toptitlecontent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->toptitlecontent().data(), this->toptitlecontent().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_bottomBackgroundUrl;
        break;
      }

      // optional string bottomBackgroundUrl = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bottomBackgroundUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bottombackgroundurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bottombackgroundurl().data(), this->bottombackgroundurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_bottomShow;
        break;
      }

      // optional string bottomShow = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bottomShow:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bottomshow()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bottomshow().data(), this->bottomshow().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_bottomBackButton;
        break;
      }

      // optional string bottomBackButton = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bottomBackButton:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bottombackbutton()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bottombackbutton().data(), this->bottombackbutton().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_bottomForwardButton;
        break;
      }

      // optional string bottomForwardButton = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bottomForwardButton:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bottomforwardbutton()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bottomforwardbutton().data(), this->bottomforwardbutton().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_bottomReloadButton;
        break;
      }

      // optional string bottomReloadButton = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bottomReloadButton:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bottomreloadbutton()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bottomreloadbutton().data(), this->bottomreloadbutton().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_bottomExternalButton;
        break;
      }

      // optional string bottomExternalButton = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bottomExternalButton:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bottomexternalbutton()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bottomexternalbutton().data(), this->bottomexternalbutton().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_bottomPausebutton;
        break;
      }

      // optional string bottomPausebutton = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bottomPausebutton:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bottompausebutton()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bottompausebutton().data(), this->bottompausebutton().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_bottomReplaybutton;
        break;
      }

      // optional string bottomReplaybutton = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bottomReplaybutton:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bottomreplaybutton()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bottomreplaybutton().data(), this->bottomreplaybutton().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_bottomTimer;
        break;
      }

      // optional string bottomTimer = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bottomTimer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bottomtimer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bottomtimer().data(), this->bottomtimer().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_allowtap;
        break;
      }

      // optional string allowtap = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_allowtap:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_allowtap()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->allowtap().data(), this->allowtap().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdResponse_VAD_Navigation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string show = 1;
  if (has_show()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->show().data(), this->show().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->show(), output);
  }

  // optional string topBackgroundUrl = 2;
  if (has_topbackgroundurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->topbackgroundurl().data(), this->topbackgroundurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->topbackgroundurl(), output);
  }

  // optional string topShow = 3;
  if (has_topshow()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->topshow().data(), this->topshow().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->topshow(), output);
  }

  // optional string topTitle = 4;
  if (has_toptitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->toptitle().data(), this->toptitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->toptitle(), output);
  }

  // optional string topTitleContent = 5;
  if (has_toptitlecontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->toptitlecontent().data(), this->toptitlecontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->toptitlecontent(), output);
  }

  // optional string bottomBackgroundUrl = 6;
  if (has_bottombackgroundurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bottombackgroundurl().data(), this->bottombackgroundurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->bottombackgroundurl(), output);
  }

  // optional string bottomShow = 7;
  if (has_bottomshow()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bottomshow().data(), this->bottomshow().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->bottomshow(), output);
  }

  // optional string bottomBackButton = 8;
  if (has_bottombackbutton()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bottombackbutton().data(), this->bottombackbutton().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->bottombackbutton(), output);
  }

  // optional string bottomForwardButton = 9;
  if (has_bottomforwardbutton()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bottomforwardbutton().data(), this->bottomforwardbutton().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->bottomforwardbutton(), output);
  }

  // optional string bottomReloadButton = 10;
  if (has_bottomreloadbutton()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bottomreloadbutton().data(), this->bottomreloadbutton().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->bottomreloadbutton(), output);
  }

  // optional string bottomExternalButton = 11;
  if (has_bottomexternalbutton()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bottomexternalbutton().data(), this->bottomexternalbutton().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->bottomexternalbutton(), output);
  }

  // optional string bottomPausebutton = 12;
  if (has_bottompausebutton()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bottompausebutton().data(), this->bottompausebutton().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->bottompausebutton(), output);
  }

  // optional string bottomReplaybutton = 13;
  if (has_bottomreplaybutton()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bottomreplaybutton().data(), this->bottomreplaybutton().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->bottomreplaybutton(), output);
  }

  // optional string bottomTimer = 14;
  if (has_bottomtimer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bottomtimer().data(), this->bottomtimer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->bottomtimer(), output);
  }

  // optional string allowtap = 15;
  if (has_allowtap()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->allowtap().data(), this->allowtap().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->allowtap(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdResponse_VAD_Navigation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string show = 1;
  if (has_show()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->show().data(), this->show().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->show(), target);
  }

  // optional string topBackgroundUrl = 2;
  if (has_topbackgroundurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->topbackgroundurl().data(), this->topbackgroundurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->topbackgroundurl(), target);
  }

  // optional string topShow = 3;
  if (has_topshow()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->topshow().data(), this->topshow().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->topshow(), target);
  }

  // optional string topTitle = 4;
  if (has_toptitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->toptitle().data(), this->toptitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->toptitle(), target);
  }

  // optional string topTitleContent = 5;
  if (has_toptitlecontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->toptitlecontent().data(), this->toptitlecontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->toptitlecontent(), target);
  }

  // optional string bottomBackgroundUrl = 6;
  if (has_bottombackgroundurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bottombackgroundurl().data(), this->bottombackgroundurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->bottombackgroundurl(), target);
  }

  // optional string bottomShow = 7;
  if (has_bottomshow()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bottomshow().data(), this->bottomshow().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->bottomshow(), target);
  }

  // optional string bottomBackButton = 8;
  if (has_bottombackbutton()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bottombackbutton().data(), this->bottombackbutton().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->bottombackbutton(), target);
  }

  // optional string bottomForwardButton = 9;
  if (has_bottomforwardbutton()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bottomforwardbutton().data(), this->bottomforwardbutton().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->bottomforwardbutton(), target);
  }

  // optional string bottomReloadButton = 10;
  if (has_bottomreloadbutton()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bottomreloadbutton().data(), this->bottomreloadbutton().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->bottomreloadbutton(), target);
  }

  // optional string bottomExternalButton = 11;
  if (has_bottomexternalbutton()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bottomexternalbutton().data(), this->bottomexternalbutton().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->bottomexternalbutton(), target);
  }

  // optional string bottomPausebutton = 12;
  if (has_bottompausebutton()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bottompausebutton().data(), this->bottompausebutton().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->bottompausebutton(), target);
  }

  // optional string bottomReplaybutton = 13;
  if (has_bottomreplaybutton()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bottomreplaybutton().data(), this->bottomreplaybutton().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->bottomreplaybutton(), target);
  }

  // optional string bottomTimer = 14;
  if (has_bottomtimer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bottomtimer().data(), this->bottomtimer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->bottomtimer(), target);
  }

  // optional string allowtap = 15;
  if (has_allowtap()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->allowtap().data(), this->allowtap().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->allowtap(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdResponse_VAD_Navigation::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string show = 1;
    if (has_show()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->show());
    }

    // optional string topBackgroundUrl = 2;
    if (has_topbackgroundurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->topbackgroundurl());
    }

    // optional string topShow = 3;
    if (has_topshow()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->topshow());
    }

    // optional string topTitle = 4;
    if (has_toptitle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->toptitle());
    }

    // optional string topTitleContent = 5;
    if (has_toptitlecontent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->toptitlecontent());
    }

    // optional string bottomBackgroundUrl = 6;
    if (has_bottombackgroundurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bottombackgroundurl());
    }

    // optional string bottomShow = 7;
    if (has_bottomshow()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bottomshow());
    }

    // optional string bottomBackButton = 8;
    if (has_bottombackbutton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bottombackbutton());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string bottomForwardButton = 9;
    if (has_bottomforwardbutton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bottomforwardbutton());
    }

    // optional string bottomReloadButton = 10;
    if (has_bottomreloadbutton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bottomreloadbutton());
    }

    // optional string bottomExternalButton = 11;
    if (has_bottomexternalbutton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bottomexternalbutton());
    }

    // optional string bottomPausebutton = 12;
    if (has_bottompausebutton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bottompausebutton());
    }

    // optional string bottomReplaybutton = 13;
    if (has_bottomreplaybutton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bottomreplaybutton());
    }

    // optional string bottomTimer = 14;
    if (has_bottomtimer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bottomtimer());
    }

    // optional string allowtap = 15;
    if (has_allowtap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->allowtap());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdResponse_VAD_Navigation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdResponse_VAD_Navigation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdResponse_VAD_Navigation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdResponse_VAD_Navigation::MergeFrom(const MobileAdResponse_VAD_Navigation& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_show()) {
      set_show(from.show());
    }
    if (from.has_topbackgroundurl()) {
      set_topbackgroundurl(from.topbackgroundurl());
    }
    if (from.has_topshow()) {
      set_topshow(from.topshow());
    }
    if (from.has_toptitle()) {
      set_toptitle(from.toptitle());
    }
    if (from.has_toptitlecontent()) {
      set_toptitlecontent(from.toptitlecontent());
    }
    if (from.has_bottombackgroundurl()) {
      set_bottombackgroundurl(from.bottombackgroundurl());
    }
    if (from.has_bottomshow()) {
      set_bottomshow(from.bottomshow());
    }
    if (from.has_bottombackbutton()) {
      set_bottombackbutton(from.bottombackbutton());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_bottomforwardbutton()) {
      set_bottomforwardbutton(from.bottomforwardbutton());
    }
    if (from.has_bottomreloadbutton()) {
      set_bottomreloadbutton(from.bottomreloadbutton());
    }
    if (from.has_bottomexternalbutton()) {
      set_bottomexternalbutton(from.bottomexternalbutton());
    }
    if (from.has_bottompausebutton()) {
      set_bottompausebutton(from.bottompausebutton());
    }
    if (from.has_bottomreplaybutton()) {
      set_bottomreplaybutton(from.bottomreplaybutton());
    }
    if (from.has_bottomtimer()) {
      set_bottomtimer(from.bottomtimer());
    }
    if (from.has_allowtap()) {
      set_allowtap(from.allowtap());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdResponse_VAD_Navigation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdResponse_VAD_Navigation::CopyFrom(const MobileAdResponse_VAD_Navigation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdResponse_VAD_Navigation::IsInitialized() const {

  return true;
}

void MobileAdResponse_VAD_Navigation::Swap(MobileAdResponse_VAD_Navigation* other) {
  if (other != this) {
    std::swap(show_, other->show_);
    std::swap(topbackgroundurl_, other->topbackgroundurl_);
    std::swap(topshow_, other->topshow_);
    std::swap(toptitle_, other->toptitle_);
    std::swap(toptitlecontent_, other->toptitlecontent_);
    std::swap(bottombackgroundurl_, other->bottombackgroundurl_);
    std::swap(bottomshow_, other->bottomshow_);
    std::swap(bottombackbutton_, other->bottombackbutton_);
    std::swap(bottomforwardbutton_, other->bottomforwardbutton_);
    std::swap(bottomreloadbutton_, other->bottomreloadbutton_);
    std::swap(bottomexternalbutton_, other->bottomexternalbutton_);
    std::swap(bottompausebutton_, other->bottompausebutton_);
    std::swap(bottomreplaybutton_, other->bottomreplaybutton_);
    std::swap(bottomtimer_, other->bottomtimer_);
    std::swap(allowtap_, other->allowtap_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdResponse_VAD_Navigation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdResponse_VAD_Navigation_descriptor_;
  metadata.reflection = MobileAdResponse_VAD_Navigation_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MobileAdResponse_VAD_Interstitial::kPreloadFieldNumber;
const int MobileAdResponse_VAD_Interstitial::kAutoCloseFieldNumber;
const int MobileAdResponse_VAD_Interstitial::kOrientationFieldNumber;
const int MobileAdResponse_VAD_Interstitial::kHtmlMarkupFieldNumber;
const int MobileAdResponse_VAD_Interstitial::kImageUrlFieldNumber;
const int MobileAdResponse_VAD_Interstitial::kClickUrlFieldNumber;
const int MobileAdResponse_VAD_Interstitial::kAdLinkFieldNumber;
const int MobileAdResponse_VAD_Interstitial::kSkipButtonShowFieldNumber;
const int MobileAdResponse_VAD_Interstitial::kSkipBUttonShowAfterFieldNumber;
const int MobileAdResponse_VAD_Interstitial::kNavigationFieldNumber;
const int MobileAdResponse_VAD_Interstitial::kImpressionUrlFieldNumber;
const int MobileAdResponse_VAD_Interstitial::kClickTrackingUrlFieldNumber;
#endif  // !_MSC_VER

MobileAdResponse_VAD_Interstitial::MobileAdResponse_VAD_Interstitial()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdResponse_VAD_Interstitial::InitAsDefaultInstance() {
  navigation_ = const_cast< ::com::rj::protos::mobile::MobileAdResponse_VAD_Navigation*>(&::com::rj::protos::mobile::MobileAdResponse_VAD_Navigation::default_instance());
}

MobileAdResponse_VAD_Interstitial::MobileAdResponse_VAD_Interstitial(const MobileAdResponse_VAD_Interstitial& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdResponse_VAD_Interstitial::SharedCtor() {
  _cached_size_ = 0;
  preload_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  autoclose_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  orientation_ = 0;
  htmlmarkup_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  imageurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  clickurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  adlink_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  skipbuttonshow_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  skipbuttonshowafter_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  navigation_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdResponse_VAD_Interstitial::~MobileAdResponse_VAD_Interstitial() {
  SharedDtor();
}

void MobileAdResponse_VAD_Interstitial::SharedDtor() {
  if (preload_ != &::google::protobuf::internal::kEmptyString) {
    delete preload_;
  }
  if (autoclose_ != &::google::protobuf::internal::kEmptyString) {
    delete autoclose_;
  }
  if (htmlmarkup_ != &::google::protobuf::internal::kEmptyString) {
    delete htmlmarkup_;
  }
  if (imageurl_ != &::google::protobuf::internal::kEmptyString) {
    delete imageurl_;
  }
  if (clickurl_ != &::google::protobuf::internal::kEmptyString) {
    delete clickurl_;
  }
  if (adlink_ != &::google::protobuf::internal::kEmptyString) {
    delete adlink_;
  }
  if (skipbuttonshow_ != &::google::protobuf::internal::kEmptyString) {
    delete skipbuttonshow_;
  }
  if (skipbuttonshowafter_ != &::google::protobuf::internal::kEmptyString) {
    delete skipbuttonshowafter_;
  }
  if (this != default_instance_) {
    delete navigation_;
  }
}

void MobileAdResponse_VAD_Interstitial::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdResponse_VAD_Interstitial::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_VAD_Interstitial_descriptor_;
}

const MobileAdResponse_VAD_Interstitial& MobileAdResponse_VAD_Interstitial::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdMobileResponse_2eproto();
  return *default_instance_;
}

MobileAdResponse_VAD_Interstitial* MobileAdResponse_VAD_Interstitial::default_instance_ = NULL;

MobileAdResponse_VAD_Interstitial* MobileAdResponse_VAD_Interstitial::New() const {
  return new MobileAdResponse_VAD_Interstitial;
}

void MobileAdResponse_VAD_Interstitial::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_preload()) {
      if (preload_ != &::google::protobuf::internal::kEmptyString) {
        preload_->clear();
      }
    }
    if (has_autoclose()) {
      if (autoclose_ != &::google::protobuf::internal::kEmptyString) {
        autoclose_->clear();
      }
    }
    orientation_ = 0;
    if (has_htmlmarkup()) {
      if (htmlmarkup_ != &::google::protobuf::internal::kEmptyString) {
        htmlmarkup_->clear();
      }
    }
    if (has_imageurl()) {
      if (imageurl_ != &::google::protobuf::internal::kEmptyString) {
        imageurl_->clear();
      }
    }
    if (has_clickurl()) {
      if (clickurl_ != &::google::protobuf::internal::kEmptyString) {
        clickurl_->clear();
      }
    }
    if (has_adlink()) {
      if (adlink_ != &::google::protobuf::internal::kEmptyString) {
        adlink_->clear();
      }
    }
    if (has_skipbuttonshow()) {
      if (skipbuttonshow_ != &::google::protobuf::internal::kEmptyString) {
        skipbuttonshow_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_skipbuttonshowafter()) {
      if (skipbuttonshowafter_ != &::google::protobuf::internal::kEmptyString) {
        skipbuttonshowafter_->clear();
      }
    }
    if (has_navigation()) {
      if (navigation_ != NULL) navigation_->::com::rj::protos::mobile::MobileAdResponse_VAD_Navigation::Clear();
    }
  }
  impressionurl_.Clear();
  clicktrackingurl_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdResponse_VAD_Interstitial::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string preload = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_preload()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->preload().data(), this->preload().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_autoClose;
        break;
      }

      // optional string autoClose = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_autoClose:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_autoclose()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->autoclose().data(), this->autoclose().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_orientation;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Orientation orientation = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_orientation:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::rj::protos::mobile::MobileAdResponse_VAD_Orientation_IsValid(value)) {
            set_orientation(static_cast< ::com::rj::protos::mobile::MobileAdResponse_VAD_Orientation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_htmlMarkup;
        break;
      }

      // optional string htmlMarkup = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_htmlMarkup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_htmlmarkup()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->htmlmarkup().data(), this->htmlmarkup().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_imageUrl;
        break;
      }

      // optional string imageUrl = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_imageUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imageurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->imageurl().data(), this->imageurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_clickUrl;
        break;
      }

      // optional string clickUrl = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_clickUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clickurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->clickurl().data(), this->clickurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_adLink;
        break;
      }

      // optional string adLink = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adLink:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adlink()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->adlink().data(), this->adlink().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_skipButtonShow;
        break;
      }

      // optional string skipButtonShow = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skipButtonShow:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skipbuttonshow()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->skipbuttonshow().data(), this->skipbuttonshow().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_skipBUttonShowAfter;
        break;
      }

      // optional string skipBUttonShowAfter = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skipBUttonShowAfter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skipbuttonshowafter()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->skipbuttonshowafter().data(), this->skipbuttonshowafter().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_navigation;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Navigation navigation = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_navigation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_navigation()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_impressionUrl;
        break;
      }

      // repeated string impressionUrl = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_impressionUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_impressionurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->impressionurl(this->impressionurl_size() - 1).data(),
            this->impressionurl(this->impressionurl_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_impressionUrl;
        if (input->ExpectTag(98)) goto parse_clickTrackingUrl;
        break;
      }

      // repeated string clickTrackingUrl = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_clickTrackingUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_clicktrackingurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->clicktrackingurl(this->clicktrackingurl_size() - 1).data(),
            this->clicktrackingurl(this->clicktrackingurl_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_clickTrackingUrl;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdResponse_VAD_Interstitial::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string preload = 1;
  if (has_preload()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->preload().data(), this->preload().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->preload(), output);
  }

  // optional string autoClose = 2;
  if (has_autoclose()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->autoclose().data(), this->autoclose().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->autoclose(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Orientation orientation = 3;
  if (has_orientation()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->orientation(), output);
  }

  // optional string htmlMarkup = 4;
  if (has_htmlmarkup()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->htmlmarkup().data(), this->htmlmarkup().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->htmlmarkup(), output);
  }

  // optional string imageUrl = 5;
  if (has_imageurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->imageurl().data(), this->imageurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->imageurl(), output);
  }

  // optional string clickUrl = 6;
  if (has_clickurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clickurl().data(), this->clickurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->clickurl(), output);
  }

  // optional string adLink = 7;
  if (has_adlink()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adlink().data(), this->adlink().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->adlink(), output);
  }

  // optional string skipButtonShow = 8;
  if (has_skipbuttonshow()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->skipbuttonshow().data(), this->skipbuttonshow().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->skipbuttonshow(), output);
  }

  // optional string skipBUttonShowAfter = 9;
  if (has_skipbuttonshowafter()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->skipbuttonshowafter().data(), this->skipbuttonshowafter().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->skipbuttonshowafter(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Navigation navigation = 10;
  if (has_navigation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->navigation(), output);
  }

  // repeated string impressionUrl = 11;
  for (int i = 0; i < this->impressionurl_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->impressionurl(i).data(), this->impressionurl(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->impressionurl(i), output);
  }

  // repeated string clickTrackingUrl = 12;
  for (int i = 0; i < this->clicktrackingurl_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->clicktrackingurl(i).data(), this->clicktrackingurl(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->clicktrackingurl(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdResponse_VAD_Interstitial::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string preload = 1;
  if (has_preload()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->preload().data(), this->preload().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->preload(), target);
  }

  // optional string autoClose = 2;
  if (has_autoclose()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->autoclose().data(), this->autoclose().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->autoclose(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Orientation orientation = 3;
  if (has_orientation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->orientation(), target);
  }

  // optional string htmlMarkup = 4;
  if (has_htmlmarkup()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->htmlmarkup().data(), this->htmlmarkup().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->htmlmarkup(), target);
  }

  // optional string imageUrl = 5;
  if (has_imageurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->imageurl().data(), this->imageurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->imageurl(), target);
  }

  // optional string clickUrl = 6;
  if (has_clickurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clickurl().data(), this->clickurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->clickurl(), target);
  }

  // optional string adLink = 7;
  if (has_adlink()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adlink().data(), this->adlink().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->adlink(), target);
  }

  // optional string skipButtonShow = 8;
  if (has_skipbuttonshow()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->skipbuttonshow().data(), this->skipbuttonshow().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->skipbuttonshow(), target);
  }

  // optional string skipBUttonShowAfter = 9;
  if (has_skipbuttonshowafter()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->skipbuttonshowafter().data(), this->skipbuttonshowafter().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->skipbuttonshowafter(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Navigation navigation = 10;
  if (has_navigation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->navigation(), target);
  }

  // repeated string impressionUrl = 11;
  for (int i = 0; i < this->impressionurl_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->impressionurl(i).data(), this->impressionurl(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(11, this->impressionurl(i), target);
  }

  // repeated string clickTrackingUrl = 12;
  for (int i = 0; i < this->clicktrackingurl_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clicktrackingurl(i).data(), this->clicktrackingurl(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(12, this->clicktrackingurl(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdResponse_VAD_Interstitial::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string preload = 1;
    if (has_preload()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->preload());
    }

    // optional string autoClose = 2;
    if (has_autoclose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->autoclose());
    }

    // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Orientation orientation = 3;
    if (has_orientation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->orientation());
    }

    // optional string htmlMarkup = 4;
    if (has_htmlmarkup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->htmlmarkup());
    }

    // optional string imageUrl = 5;
    if (has_imageurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->imageurl());
    }

    // optional string clickUrl = 6;
    if (has_clickurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clickurl());
    }

    // optional string adLink = 7;
    if (has_adlink()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->adlink());
    }

    // optional string skipButtonShow = 8;
    if (has_skipbuttonshow()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->skipbuttonshow());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string skipBUttonShowAfter = 9;
    if (has_skipbuttonshowafter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->skipbuttonshowafter());
    }

    // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Navigation navigation = 10;
    if (has_navigation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->navigation());
    }

  }
  // repeated string impressionUrl = 11;
  total_size += 1 * this->impressionurl_size();
  for (int i = 0; i < this->impressionurl_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->impressionurl(i));
  }

  // repeated string clickTrackingUrl = 12;
  total_size += 1 * this->clicktrackingurl_size();
  for (int i = 0; i < this->clicktrackingurl_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->clicktrackingurl(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdResponse_VAD_Interstitial::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdResponse_VAD_Interstitial* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdResponse_VAD_Interstitial*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdResponse_VAD_Interstitial::MergeFrom(const MobileAdResponse_VAD_Interstitial& from) {
  GOOGLE_CHECK_NE(&from, this);
  impressionurl_.MergeFrom(from.impressionurl_);
  clicktrackingurl_.MergeFrom(from.clicktrackingurl_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_preload()) {
      set_preload(from.preload());
    }
    if (from.has_autoclose()) {
      set_autoclose(from.autoclose());
    }
    if (from.has_orientation()) {
      set_orientation(from.orientation());
    }
    if (from.has_htmlmarkup()) {
      set_htmlmarkup(from.htmlmarkup());
    }
    if (from.has_imageurl()) {
      set_imageurl(from.imageurl());
    }
    if (from.has_clickurl()) {
      set_clickurl(from.clickurl());
    }
    if (from.has_adlink()) {
      set_adlink(from.adlink());
    }
    if (from.has_skipbuttonshow()) {
      set_skipbuttonshow(from.skipbuttonshow());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_skipbuttonshowafter()) {
      set_skipbuttonshowafter(from.skipbuttonshowafter());
    }
    if (from.has_navigation()) {
      mutable_navigation()->::com::rj::protos::mobile::MobileAdResponse_VAD_Navigation::MergeFrom(from.navigation());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdResponse_VAD_Interstitial::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdResponse_VAD_Interstitial::CopyFrom(const MobileAdResponse_VAD_Interstitial& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdResponse_VAD_Interstitial::IsInitialized() const {

  return true;
}

void MobileAdResponse_VAD_Interstitial::Swap(MobileAdResponse_VAD_Interstitial* other) {
  if (other != this) {
    std::swap(preload_, other->preload_);
    std::swap(autoclose_, other->autoclose_);
    std::swap(orientation_, other->orientation_);
    std::swap(htmlmarkup_, other->htmlmarkup_);
    std::swap(imageurl_, other->imageurl_);
    std::swap(clickurl_, other->clickurl_);
    std::swap(adlink_, other->adlink_);
    std::swap(skipbuttonshow_, other->skipbuttonshow_);
    std::swap(skipbuttonshowafter_, other->skipbuttonshowafter_);
    std::swap(navigation_, other->navigation_);
    impressionurl_.Swap(&other->impressionurl_);
    clicktrackingurl_.Swap(&other->clicktrackingurl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdResponse_VAD_Interstitial::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdResponse_VAD_Interstitial_descriptor_;
  metadata.reflection = MobileAdResponse_VAD_Interstitial_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

const ::google::protobuf::EnumDescriptor* MobileAdResponse_VAD_Video_VideoTrackingEvents_TrackingType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_VAD_Video_VideoTrackingEvents_TrackingType_descriptor_;
}
bool MobileAdResponse_VAD_Video_VideoTrackingEvents_TrackingType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MobileAdResponse_VAD_Video_VideoTrackingEvents_TrackingType MobileAdResponse_VAD_Video_VideoTrackingEvents::start;
const MobileAdResponse_VAD_Video_VideoTrackingEvents_TrackingType MobileAdResponse_VAD_Video_VideoTrackingEvents::complete;
const MobileAdResponse_VAD_Video_VideoTrackingEvents_TrackingType MobileAdResponse_VAD_Video_VideoTrackingEvents::midpoint;
const MobileAdResponse_VAD_Video_VideoTrackingEvents_TrackingType MobileAdResponse_VAD_Video_VideoTrackingEvents::firstquartile;
const MobileAdResponse_VAD_Video_VideoTrackingEvents_TrackingType MobileAdResponse_VAD_Video_VideoTrackingEvents::thirdquartile;
const MobileAdResponse_VAD_Video_VideoTrackingEvents_TrackingType MobileAdResponse_VAD_Video_VideoTrackingEvents::pause;
const MobileAdResponse_VAD_Video_VideoTrackingEvents_TrackingType MobileAdResponse_VAD_Video_VideoTrackingEvents::unpause;
const MobileAdResponse_VAD_Video_VideoTrackingEvents_TrackingType MobileAdResponse_VAD_Video_VideoTrackingEvents::mute;
const MobileAdResponse_VAD_Video_VideoTrackingEvents_TrackingType MobileAdResponse_VAD_Video_VideoTrackingEvents::unmute;
const MobileAdResponse_VAD_Video_VideoTrackingEvents_TrackingType MobileAdResponse_VAD_Video_VideoTrackingEvents::replay;
const MobileAdResponse_VAD_Video_VideoTrackingEvents_TrackingType MobileAdResponse_VAD_Video_VideoTrackingEvents::skip;
const MobileAdResponse_VAD_Video_VideoTrackingEvents_TrackingType MobileAdResponse_VAD_Video_VideoTrackingEvents::sec;
const MobileAdResponse_VAD_Video_VideoTrackingEvents_TrackingType MobileAdResponse_VAD_Video_VideoTrackingEvents::TrackingType_MIN;
const MobileAdResponse_VAD_Video_VideoTrackingEvents_TrackingType MobileAdResponse_VAD_Video_VideoTrackingEvents::TrackingType_MAX;
const int MobileAdResponse_VAD_Video_VideoTrackingEvents::TrackingType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MobileAdResponse_VAD_Video_VideoTrackingEvents::kTrackingTypeFieldNumber;
const int MobileAdResponse_VAD_Video_VideoTrackingEvents::kSecondValueFieldNumber;
const int MobileAdResponse_VAD_Video_VideoTrackingEvents::kTrackingUrlFieldNumber;
#endif  // !_MSC_VER

MobileAdResponse_VAD_Video_VideoTrackingEvents::MobileAdResponse_VAD_Video_VideoTrackingEvents()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdResponse_VAD_Video_VideoTrackingEvents::InitAsDefaultInstance() {
}

MobileAdResponse_VAD_Video_VideoTrackingEvents::MobileAdResponse_VAD_Video_VideoTrackingEvents(const MobileAdResponse_VAD_Video_VideoTrackingEvents& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdResponse_VAD_Video_VideoTrackingEvents::SharedCtor() {
  _cached_size_ = 0;
  trackingtype_ = 0;
  secondvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  trackingurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdResponse_VAD_Video_VideoTrackingEvents::~MobileAdResponse_VAD_Video_VideoTrackingEvents() {
  SharedDtor();
}

void MobileAdResponse_VAD_Video_VideoTrackingEvents::SharedDtor() {
  if (secondvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete secondvalue_;
  }
  if (trackingurl_ != &::google::protobuf::internal::kEmptyString) {
    delete trackingurl_;
  }
  if (this != default_instance_) {
  }
}

void MobileAdResponse_VAD_Video_VideoTrackingEvents::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdResponse_VAD_Video_VideoTrackingEvents::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_VAD_Video_VideoTrackingEvents_descriptor_;
}

const MobileAdResponse_VAD_Video_VideoTrackingEvents& MobileAdResponse_VAD_Video_VideoTrackingEvents::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdMobileResponse_2eproto();
  return *default_instance_;
}

MobileAdResponse_VAD_Video_VideoTrackingEvents* MobileAdResponse_VAD_Video_VideoTrackingEvents::default_instance_ = NULL;

MobileAdResponse_VAD_Video_VideoTrackingEvents* MobileAdResponse_VAD_Video_VideoTrackingEvents::New() const {
  return new MobileAdResponse_VAD_Video_VideoTrackingEvents;
}

void MobileAdResponse_VAD_Video_VideoTrackingEvents::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    trackingtype_ = 0;
    if (has_secondvalue()) {
      if (secondvalue_ != &::google::protobuf::internal::kEmptyString) {
        secondvalue_->clear();
      }
    }
    if (has_trackingurl()) {
      if (trackingurl_ != &::google::protobuf::internal::kEmptyString) {
        trackingurl_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdResponse_VAD_Video_VideoTrackingEvents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Video.VideoTrackingEvents.TrackingType trackingType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::rj::protos::mobile::MobileAdResponse_VAD_Video_VideoTrackingEvents_TrackingType_IsValid(value)) {
            set_trackingtype(static_cast< ::com::rj::protos::mobile::MobileAdResponse_VAD_Video_VideoTrackingEvents_TrackingType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_secondValue;
        break;
      }

      // optional string secondValue = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_secondValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secondvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->secondvalue().data(), this->secondvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_trackingUrl;
        break;
      }

      // optional string trackingUrl = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_trackingUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trackingurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->trackingurl().data(), this->trackingurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdResponse_VAD_Video_VideoTrackingEvents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Video.VideoTrackingEvents.TrackingType trackingType = 1;
  if (has_trackingtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->trackingtype(), output);
  }

  // optional string secondValue = 2;
  if (has_secondvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secondvalue().data(), this->secondvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->secondvalue(), output);
  }

  // optional string trackingUrl = 3;
  if (has_trackingurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->trackingurl().data(), this->trackingurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->trackingurl(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdResponse_VAD_Video_VideoTrackingEvents::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Video.VideoTrackingEvents.TrackingType trackingType = 1;
  if (has_trackingtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->trackingtype(), target);
  }

  // optional string secondValue = 2;
  if (has_secondvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->secondvalue().data(), this->secondvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->secondvalue(), target);
  }

  // optional string trackingUrl = 3;
  if (has_trackingurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->trackingurl().data(), this->trackingurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->trackingurl(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdResponse_VAD_Video_VideoTrackingEvents::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Video.VideoTrackingEvents.TrackingType trackingType = 1;
    if (has_trackingtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->trackingtype());
    }

    // optional string secondValue = 2;
    if (has_secondvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secondvalue());
    }

    // optional string trackingUrl = 3;
    if (has_trackingurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->trackingurl());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdResponse_VAD_Video_VideoTrackingEvents::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdResponse_VAD_Video_VideoTrackingEvents* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdResponse_VAD_Video_VideoTrackingEvents*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdResponse_VAD_Video_VideoTrackingEvents::MergeFrom(const MobileAdResponse_VAD_Video_VideoTrackingEvents& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_trackingtype()) {
      set_trackingtype(from.trackingtype());
    }
    if (from.has_secondvalue()) {
      set_secondvalue(from.secondvalue());
    }
    if (from.has_trackingurl()) {
      set_trackingurl(from.trackingurl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdResponse_VAD_Video_VideoTrackingEvents::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdResponse_VAD_Video_VideoTrackingEvents::CopyFrom(const MobileAdResponse_VAD_Video_VideoTrackingEvents& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdResponse_VAD_Video_VideoTrackingEvents::IsInitialized() const {

  return true;
}

void MobileAdResponse_VAD_Video_VideoTrackingEvents::Swap(MobileAdResponse_VAD_Video_VideoTrackingEvents* other) {
  if (other != this) {
    std::swap(trackingtype_, other->trackingtype_);
    std::swap(secondvalue_, other->secondvalue_);
    std::swap(trackingurl_, other->trackingurl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdResponse_VAD_Video_VideoTrackingEvents::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdResponse_VAD_Video_VideoTrackingEvents_descriptor_;
  metadata.reflection = MobileAdResponse_VAD_Video_VideoTrackingEvents_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MobileAdResponse_VAD_Video::kOrientationFieldNumber;
const int MobileAdResponse_VAD_Video::kExpirationFieldNumber;
const int MobileAdResponse_VAD_Video::kCreativeDisplayFieldNumber;
const int MobileAdResponse_VAD_Video::kCreativeDeliveryFieldNumber;
const int MobileAdResponse_VAD_Video::kCreativeTypeFieldNumber;
const int MobileAdResponse_VAD_Video::kCreativeBitrateFieldNumber;
const int MobileAdResponse_VAD_Video::kCreativeWidthFieldNumber;
const int MobileAdResponse_VAD_Video::kCreativeHeightFieldNumber;
const int MobileAdResponse_VAD_Video::kCreativeVideoUrlFieldNumber;
const int MobileAdResponse_VAD_Video::kVideoDurationalFieldNumber;
const int MobileAdResponse_VAD_Video::kSkipButtonShowFieldNumber;
const int MobileAdResponse_VAD_Video::kSkipBUttonShowAfterFieldNumber;
const int MobileAdResponse_VAD_Video::kNavigationFieldNumber;
const int MobileAdResponse_VAD_Video::kHtmloverlayShowFieldNumber;
const int MobileAdResponse_VAD_Video::kHtmloverlayShowAfterFieldNumber;
const int MobileAdResponse_VAD_Video::kHtmloverlayUrlFieldNumber;
const int MobileAdResponse_VAD_Video::kHtmloverlayContentFieldNumber;
const int MobileAdResponse_VAD_Video::kVideoTrackingEventsFieldNumber;
#endif  // !_MSC_VER

MobileAdResponse_VAD_Video::MobileAdResponse_VAD_Video()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdResponse_VAD_Video::InitAsDefaultInstance() {
  navigation_ = const_cast< ::com::rj::protos::mobile::MobileAdResponse_VAD_Navigation*>(&::com::rj::protos::mobile::MobileAdResponse_VAD_Navigation::default_instance());
}

MobileAdResponse_VAD_Video::MobileAdResponse_VAD_Video(const MobileAdResponse_VAD_Video& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdResponse_VAD_Video::SharedCtor() {
  _cached_size_ = 0;
  orientation_ = 0;
  expiration_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  creativedisplay_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  creativedelivery_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  creativetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  creativebitrate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  creativewidth_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  creativeheight_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  creativevideourl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  videodurational_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  skipbuttonshow_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  skipbuttonshowafter_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  navigation_ = NULL;
  htmloverlayshow_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  htmloverlayshowafter_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  htmloverlayurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  htmloverlaycontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdResponse_VAD_Video::~MobileAdResponse_VAD_Video() {
  SharedDtor();
}

void MobileAdResponse_VAD_Video::SharedDtor() {
  if (expiration_ != &::google::protobuf::internal::kEmptyString) {
    delete expiration_;
  }
  if (creativedisplay_ != &::google::protobuf::internal::kEmptyString) {
    delete creativedisplay_;
  }
  if (creativedelivery_ != &::google::protobuf::internal::kEmptyString) {
    delete creativedelivery_;
  }
  if (creativetype_ != &::google::protobuf::internal::kEmptyString) {
    delete creativetype_;
  }
  if (creativebitrate_ != &::google::protobuf::internal::kEmptyString) {
    delete creativebitrate_;
  }
  if (creativewidth_ != &::google::protobuf::internal::kEmptyString) {
    delete creativewidth_;
  }
  if (creativeheight_ != &::google::protobuf::internal::kEmptyString) {
    delete creativeheight_;
  }
  if (creativevideourl_ != &::google::protobuf::internal::kEmptyString) {
    delete creativevideourl_;
  }
  if (videodurational_ != &::google::protobuf::internal::kEmptyString) {
    delete videodurational_;
  }
  if (skipbuttonshow_ != &::google::protobuf::internal::kEmptyString) {
    delete skipbuttonshow_;
  }
  if (skipbuttonshowafter_ != &::google::protobuf::internal::kEmptyString) {
    delete skipbuttonshowafter_;
  }
  if (htmloverlayshow_ != &::google::protobuf::internal::kEmptyString) {
    delete htmloverlayshow_;
  }
  if (htmloverlayshowafter_ != &::google::protobuf::internal::kEmptyString) {
    delete htmloverlayshowafter_;
  }
  if (htmloverlayurl_ != &::google::protobuf::internal::kEmptyString) {
    delete htmloverlayurl_;
  }
  if (htmloverlaycontent_ != &::google::protobuf::internal::kEmptyString) {
    delete htmloverlaycontent_;
  }
  if (this != default_instance_) {
    delete navigation_;
  }
}

void MobileAdResponse_VAD_Video::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdResponse_VAD_Video::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_VAD_Video_descriptor_;
}

const MobileAdResponse_VAD_Video& MobileAdResponse_VAD_Video::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdMobileResponse_2eproto();
  return *default_instance_;
}

MobileAdResponse_VAD_Video* MobileAdResponse_VAD_Video::default_instance_ = NULL;

MobileAdResponse_VAD_Video* MobileAdResponse_VAD_Video::New() const {
  return new MobileAdResponse_VAD_Video;
}

void MobileAdResponse_VAD_Video::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    orientation_ = 0;
    if (has_expiration()) {
      if (expiration_ != &::google::protobuf::internal::kEmptyString) {
        expiration_->clear();
      }
    }
    if (has_creativedisplay()) {
      if (creativedisplay_ != &::google::protobuf::internal::kEmptyString) {
        creativedisplay_->clear();
      }
    }
    if (has_creativedelivery()) {
      if (creativedelivery_ != &::google::protobuf::internal::kEmptyString) {
        creativedelivery_->clear();
      }
    }
    if (has_creativetype()) {
      if (creativetype_ != &::google::protobuf::internal::kEmptyString) {
        creativetype_->clear();
      }
    }
    if (has_creativebitrate()) {
      if (creativebitrate_ != &::google::protobuf::internal::kEmptyString) {
        creativebitrate_->clear();
      }
    }
    if (has_creativewidth()) {
      if (creativewidth_ != &::google::protobuf::internal::kEmptyString) {
        creativewidth_->clear();
      }
    }
    if (has_creativeheight()) {
      if (creativeheight_ != &::google::protobuf::internal::kEmptyString) {
        creativeheight_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_creativevideourl()) {
      if (creativevideourl_ != &::google::protobuf::internal::kEmptyString) {
        creativevideourl_->clear();
      }
    }
    if (has_videodurational()) {
      if (videodurational_ != &::google::protobuf::internal::kEmptyString) {
        videodurational_->clear();
      }
    }
    if (has_skipbuttonshow()) {
      if (skipbuttonshow_ != &::google::protobuf::internal::kEmptyString) {
        skipbuttonshow_->clear();
      }
    }
    if (has_skipbuttonshowafter()) {
      if (skipbuttonshowafter_ != &::google::protobuf::internal::kEmptyString) {
        skipbuttonshowafter_->clear();
      }
    }
    if (has_navigation()) {
      if (navigation_ != NULL) navigation_->::com::rj::protos::mobile::MobileAdResponse_VAD_Navigation::Clear();
    }
    if (has_htmloverlayshow()) {
      if (htmloverlayshow_ != &::google::protobuf::internal::kEmptyString) {
        htmloverlayshow_->clear();
      }
    }
    if (has_htmloverlayshowafter()) {
      if (htmloverlayshowafter_ != &::google::protobuf::internal::kEmptyString) {
        htmloverlayshowafter_->clear();
      }
    }
    if (has_htmloverlayurl()) {
      if (htmloverlayurl_ != &::google::protobuf::internal::kEmptyString) {
        htmloverlayurl_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_htmloverlaycontent()) {
      if (htmloverlaycontent_ != &::google::protobuf::internal::kEmptyString) {
        htmloverlaycontent_->clear();
      }
    }
  }
  videotrackingevents_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdResponse_VAD_Video::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Orientation orientation = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::rj::protos::mobile::MobileAdResponse_VAD_Orientation_IsValid(value)) {
            set_orientation(static_cast< ::com::rj::protos::mobile::MobileAdResponse_VAD_Orientation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_expiration;
        break;
      }

      // optional string expiration = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_expiration:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expiration()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->expiration().data(), this->expiration().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_creativeDisplay;
        break;
      }

      // optional string creativeDisplay = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_creativeDisplay:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creativedisplay()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->creativedisplay().data(), this->creativedisplay().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_creativeDelivery;
        break;
      }

      // optional string creativeDelivery = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_creativeDelivery:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creativedelivery()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->creativedelivery().data(), this->creativedelivery().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_creativeType;
        break;
      }

      // optional string creativeType = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_creativeType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creativetype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->creativetype().data(), this->creativetype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_creativeBitrate;
        break;
      }

      // optional string creativeBitrate = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_creativeBitrate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creativebitrate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->creativebitrate().data(), this->creativebitrate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_creativeWidth;
        break;
      }

      // optional string creativeWidth = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_creativeWidth:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creativewidth()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->creativewidth().data(), this->creativewidth().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_creativeHeight;
        break;
      }

      // optional string creativeHeight = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_creativeHeight:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creativeheight()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->creativeheight().data(), this->creativeheight().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_creativeVideoUrl;
        break;
      }

      // optional string creativeVideoUrl = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_creativeVideoUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creativevideourl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->creativevideourl().data(), this->creativevideourl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_videoDurational;
        break;
      }

      // optional string videoDurational = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_videoDurational:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_videodurational()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->videodurational().data(), this->videodurational().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_skipButtonShow;
        break;
      }

      // optional string skipButtonShow = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skipButtonShow:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skipbuttonshow()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->skipbuttonshow().data(), this->skipbuttonshow().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_skipBUttonShowAfter;
        break;
      }

      // optional string skipBUttonShowAfter = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skipBUttonShowAfter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skipbuttonshowafter()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->skipbuttonshowafter().data(), this->skipbuttonshowafter().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_navigation;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Navigation navigation = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_navigation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_navigation()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_htmloverlayShow;
        break;
      }

      // optional string htmloverlayShow = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_htmloverlayShow:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_htmloverlayshow()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->htmloverlayshow().data(), this->htmloverlayshow().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_htmloverlayShowAfter;
        break;
      }

      // optional string htmloverlayShowAfter = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_htmloverlayShowAfter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_htmloverlayshowafter()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->htmloverlayshowafter().data(), this->htmloverlayshowafter().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_htmloverlayUrl;
        break;
      }

      // optional string htmloverlayUrl = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_htmloverlayUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_htmloverlayurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->htmloverlayurl().data(), this->htmloverlayurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_htmloverlayContent;
        break;
      }

      // optional string htmloverlayContent = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_htmloverlayContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_htmloverlaycontent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->htmloverlaycontent().data(), this->htmloverlaycontent().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_videoTrackingEvents;
        break;
      }

      // repeated .com.rj.protos.mobile.MobileAdResponse.VAD.Video.VideoTrackingEvents videoTrackingEvents = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_videoTrackingEvents:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_videotrackingevents()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_videoTrackingEvents;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdResponse_VAD_Video::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Orientation orientation = 1;
  if (has_orientation()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->orientation(), output);
  }

  // optional string expiration = 2;
  if (has_expiration()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->expiration().data(), this->expiration().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->expiration(), output);
  }

  // optional string creativeDisplay = 3;
  if (has_creativedisplay()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativedisplay().data(), this->creativedisplay().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->creativedisplay(), output);
  }

  // optional string creativeDelivery = 4;
  if (has_creativedelivery()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativedelivery().data(), this->creativedelivery().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->creativedelivery(), output);
  }

  // optional string creativeType = 5;
  if (has_creativetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativetype().data(), this->creativetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->creativetype(), output);
  }

  // optional string creativeBitrate = 6;
  if (has_creativebitrate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativebitrate().data(), this->creativebitrate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->creativebitrate(), output);
  }

  // optional string creativeWidth = 7;
  if (has_creativewidth()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativewidth().data(), this->creativewidth().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->creativewidth(), output);
  }

  // optional string creativeHeight = 8;
  if (has_creativeheight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativeheight().data(), this->creativeheight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->creativeheight(), output);
  }

  // optional string creativeVideoUrl = 9;
  if (has_creativevideourl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativevideourl().data(), this->creativevideourl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->creativevideourl(), output);
  }

  // optional string videoDurational = 10;
  if (has_videodurational()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->videodurational().data(), this->videodurational().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->videodurational(), output);
  }

  // optional string skipButtonShow = 11;
  if (has_skipbuttonshow()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->skipbuttonshow().data(), this->skipbuttonshow().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->skipbuttonshow(), output);
  }

  // optional string skipBUttonShowAfter = 12;
  if (has_skipbuttonshowafter()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->skipbuttonshowafter().data(), this->skipbuttonshowafter().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->skipbuttonshowafter(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Navigation navigation = 13;
  if (has_navigation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->navigation(), output);
  }

  // optional string htmloverlayShow = 14;
  if (has_htmloverlayshow()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->htmloverlayshow().data(), this->htmloverlayshow().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->htmloverlayshow(), output);
  }

  // optional string htmloverlayShowAfter = 15;
  if (has_htmloverlayshowafter()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->htmloverlayshowafter().data(), this->htmloverlayshowafter().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->htmloverlayshowafter(), output);
  }

  // optional string htmloverlayUrl = 16;
  if (has_htmloverlayurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->htmloverlayurl().data(), this->htmloverlayurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->htmloverlayurl(), output);
  }

  // optional string htmloverlayContent = 17;
  if (has_htmloverlaycontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->htmloverlaycontent().data(), this->htmloverlaycontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->htmloverlaycontent(), output);
  }

  // repeated .com.rj.protos.mobile.MobileAdResponse.VAD.Video.VideoTrackingEvents videoTrackingEvents = 18;
  for (int i = 0; i < this->videotrackingevents_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->videotrackingevents(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdResponse_VAD_Video::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Orientation orientation = 1;
  if (has_orientation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->orientation(), target);
  }

  // optional string expiration = 2;
  if (has_expiration()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->expiration().data(), this->expiration().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->expiration(), target);
  }

  // optional string creativeDisplay = 3;
  if (has_creativedisplay()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativedisplay().data(), this->creativedisplay().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->creativedisplay(), target);
  }

  // optional string creativeDelivery = 4;
  if (has_creativedelivery()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativedelivery().data(), this->creativedelivery().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->creativedelivery(), target);
  }

  // optional string creativeType = 5;
  if (has_creativetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativetype().data(), this->creativetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->creativetype(), target);
  }

  // optional string creativeBitrate = 6;
  if (has_creativebitrate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativebitrate().data(), this->creativebitrate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->creativebitrate(), target);
  }

  // optional string creativeWidth = 7;
  if (has_creativewidth()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativewidth().data(), this->creativewidth().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->creativewidth(), target);
  }

  // optional string creativeHeight = 8;
  if (has_creativeheight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativeheight().data(), this->creativeheight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->creativeheight(), target);
  }

  // optional string creativeVideoUrl = 9;
  if (has_creativevideourl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativevideourl().data(), this->creativevideourl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->creativevideourl(), target);
  }

  // optional string videoDurational = 10;
  if (has_videodurational()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->videodurational().data(), this->videodurational().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->videodurational(), target);
  }

  // optional string skipButtonShow = 11;
  if (has_skipbuttonshow()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->skipbuttonshow().data(), this->skipbuttonshow().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->skipbuttonshow(), target);
  }

  // optional string skipBUttonShowAfter = 12;
  if (has_skipbuttonshowafter()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->skipbuttonshowafter().data(), this->skipbuttonshowafter().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->skipbuttonshowafter(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Navigation navigation = 13;
  if (has_navigation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->navigation(), target);
  }

  // optional string htmloverlayShow = 14;
  if (has_htmloverlayshow()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->htmloverlayshow().data(), this->htmloverlayshow().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->htmloverlayshow(), target);
  }

  // optional string htmloverlayShowAfter = 15;
  if (has_htmloverlayshowafter()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->htmloverlayshowafter().data(), this->htmloverlayshowafter().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->htmloverlayshowafter(), target);
  }

  // optional string htmloverlayUrl = 16;
  if (has_htmloverlayurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->htmloverlayurl().data(), this->htmloverlayurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->htmloverlayurl(), target);
  }

  // optional string htmloverlayContent = 17;
  if (has_htmloverlaycontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->htmloverlaycontent().data(), this->htmloverlaycontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->htmloverlaycontent(), target);
  }

  // repeated .com.rj.protos.mobile.MobileAdResponse.VAD.Video.VideoTrackingEvents videoTrackingEvents = 18;
  for (int i = 0; i < this->videotrackingevents_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->videotrackingevents(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdResponse_VAD_Video::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Orientation orientation = 1;
    if (has_orientation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->orientation());
    }

    // optional string expiration = 2;
    if (has_expiration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->expiration());
    }

    // optional string creativeDisplay = 3;
    if (has_creativedisplay()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creativedisplay());
    }

    // optional string creativeDelivery = 4;
    if (has_creativedelivery()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creativedelivery());
    }

    // optional string creativeType = 5;
    if (has_creativetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creativetype());
    }

    // optional string creativeBitrate = 6;
    if (has_creativebitrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creativebitrate());
    }

    // optional string creativeWidth = 7;
    if (has_creativewidth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creativewidth());
    }

    // optional string creativeHeight = 8;
    if (has_creativeheight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creativeheight());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string creativeVideoUrl = 9;
    if (has_creativevideourl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creativevideourl());
    }

    // optional string videoDurational = 10;
    if (has_videodurational()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->videodurational());
    }

    // optional string skipButtonShow = 11;
    if (has_skipbuttonshow()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->skipbuttonshow());
    }

    // optional string skipBUttonShowAfter = 12;
    if (has_skipbuttonshowafter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->skipbuttonshowafter());
    }

    // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Navigation navigation = 13;
    if (has_navigation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->navigation());
    }

    // optional string htmloverlayShow = 14;
    if (has_htmloverlayshow()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->htmloverlayshow());
    }

    // optional string htmloverlayShowAfter = 15;
    if (has_htmloverlayshowafter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->htmloverlayshowafter());
    }

    // optional string htmloverlayUrl = 16;
    if (has_htmloverlayurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->htmloverlayurl());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string htmloverlayContent = 17;
    if (has_htmloverlaycontent()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->htmloverlaycontent());
    }

  }
  // repeated .com.rj.protos.mobile.MobileAdResponse.VAD.Video.VideoTrackingEvents videoTrackingEvents = 18;
  total_size += 2 * this->videotrackingevents_size();
  for (int i = 0; i < this->videotrackingevents_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->videotrackingevents(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdResponse_VAD_Video::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdResponse_VAD_Video* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdResponse_VAD_Video*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdResponse_VAD_Video::MergeFrom(const MobileAdResponse_VAD_Video& from) {
  GOOGLE_CHECK_NE(&from, this);
  videotrackingevents_.MergeFrom(from.videotrackingevents_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_orientation()) {
      set_orientation(from.orientation());
    }
    if (from.has_expiration()) {
      set_expiration(from.expiration());
    }
    if (from.has_creativedisplay()) {
      set_creativedisplay(from.creativedisplay());
    }
    if (from.has_creativedelivery()) {
      set_creativedelivery(from.creativedelivery());
    }
    if (from.has_creativetype()) {
      set_creativetype(from.creativetype());
    }
    if (from.has_creativebitrate()) {
      set_creativebitrate(from.creativebitrate());
    }
    if (from.has_creativewidth()) {
      set_creativewidth(from.creativewidth());
    }
    if (from.has_creativeheight()) {
      set_creativeheight(from.creativeheight());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_creativevideourl()) {
      set_creativevideourl(from.creativevideourl());
    }
    if (from.has_videodurational()) {
      set_videodurational(from.videodurational());
    }
    if (from.has_skipbuttonshow()) {
      set_skipbuttonshow(from.skipbuttonshow());
    }
    if (from.has_skipbuttonshowafter()) {
      set_skipbuttonshowafter(from.skipbuttonshowafter());
    }
    if (from.has_navigation()) {
      mutable_navigation()->::com::rj::protos::mobile::MobileAdResponse_VAD_Navigation::MergeFrom(from.navigation());
    }
    if (from.has_htmloverlayshow()) {
      set_htmloverlayshow(from.htmloverlayshow());
    }
    if (from.has_htmloverlayshowafter()) {
      set_htmloverlayshowafter(from.htmloverlayshowafter());
    }
    if (from.has_htmloverlayurl()) {
      set_htmloverlayurl(from.htmloverlayurl());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_htmloverlaycontent()) {
      set_htmloverlaycontent(from.htmloverlaycontent());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdResponse_VAD_Video::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdResponse_VAD_Video::CopyFrom(const MobileAdResponse_VAD_Video& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdResponse_VAD_Video::IsInitialized() const {

  return true;
}

void MobileAdResponse_VAD_Video::Swap(MobileAdResponse_VAD_Video* other) {
  if (other != this) {
    std::swap(orientation_, other->orientation_);
    std::swap(expiration_, other->expiration_);
    std::swap(creativedisplay_, other->creativedisplay_);
    std::swap(creativedelivery_, other->creativedelivery_);
    std::swap(creativetype_, other->creativetype_);
    std::swap(creativebitrate_, other->creativebitrate_);
    std::swap(creativewidth_, other->creativewidth_);
    std::swap(creativeheight_, other->creativeheight_);
    std::swap(creativevideourl_, other->creativevideourl_);
    std::swap(videodurational_, other->videodurational_);
    std::swap(skipbuttonshow_, other->skipbuttonshow_);
    std::swap(skipbuttonshowafter_, other->skipbuttonshowafter_);
    std::swap(navigation_, other->navigation_);
    std::swap(htmloverlayshow_, other->htmloverlayshow_);
    std::swap(htmloverlayshowafter_, other->htmloverlayshowafter_);
    std::swap(htmloverlayurl_, other->htmloverlayurl_);
    std::swap(htmloverlaycontent_, other->htmloverlaycontent_);
    videotrackingevents_.Swap(&other->videotrackingevents_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdResponse_VAD_Video::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdResponse_VAD_Video_descriptor_;
  metadata.reflection = MobileAdResponse_VAD_Video_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MobileAdResponse_VAD::kTypeFieldNumber;
const int MobileAdResponse_VAD::kAnimationFieldNumber;
const int MobileAdResponse_VAD::kInterstitialFieldNumber;
const int MobileAdResponse_VAD::kVideoFieldNumber;
#endif  // !_MSC_VER

MobileAdResponse_VAD::MobileAdResponse_VAD()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdResponse_VAD::InitAsDefaultInstance() {
  interstitial_ = const_cast< ::com::rj::protos::mobile::MobileAdResponse_VAD_Interstitial*>(&::com::rj::protos::mobile::MobileAdResponse_VAD_Interstitial::default_instance());
  video_ = const_cast< ::com::rj::protos::mobile::MobileAdResponse_VAD_Video*>(&::com::rj::protos::mobile::MobileAdResponse_VAD_Video::default_instance());
}

MobileAdResponse_VAD::MobileAdResponse_VAD(const MobileAdResponse_VAD& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdResponse_VAD::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  animation_ = 0;
  interstitial_ = NULL;
  video_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdResponse_VAD::~MobileAdResponse_VAD() {
  SharedDtor();
}

void MobileAdResponse_VAD::SharedDtor() {
  if (this != default_instance_) {
    delete interstitial_;
    delete video_;
  }
}

void MobileAdResponse_VAD::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdResponse_VAD::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_VAD_descriptor_;
}

const MobileAdResponse_VAD& MobileAdResponse_VAD::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdMobileResponse_2eproto();
  return *default_instance_;
}

MobileAdResponse_VAD* MobileAdResponse_VAD::default_instance_ = NULL;

MobileAdResponse_VAD* MobileAdResponse_VAD::New() const {
  return new MobileAdResponse_VAD;
}

void MobileAdResponse_VAD::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    animation_ = 0;
    if (has_interstitial()) {
      if (interstitial_ != NULL) interstitial_->::com::rj::protos::mobile::MobileAdResponse_VAD_Interstitial::Clear();
    }
    if (has_video()) {
      if (video_ != NULL) video_->::com::rj::protos::mobile::MobileAdResponse_VAD_Video::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdResponse_VAD::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.rj.protos.mobile.MobileAdResponse.VAD.VadType type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::rj::protos::mobile::MobileAdResponse_VAD_VadType_IsValid(value)) {
            set_type(static_cast< ::com::rj::protos::mobile::MobileAdResponse_VAD_VadType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_animation;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Animation animation = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_animation:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::rj::protos::mobile::MobileAdResponse_VAD_Animation_IsValid(value)) {
            set_animation(static_cast< ::com::rj::protos::mobile::MobileAdResponse_VAD_Animation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_interstitial;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Interstitial interstitial = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_interstitial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_interstitial()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_video;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Video video = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_video:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_video()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdResponse_VAD::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .com.rj.protos.mobile.MobileAdResponse.VAD.VadType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Animation animation = 2;
  if (has_animation()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->animation(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Interstitial interstitial = 3;
  if (has_interstitial()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->interstitial(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Video video = 4;
  if (has_video()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->video(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdResponse_VAD::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .com.rj.protos.mobile.MobileAdResponse.VAD.VadType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Animation animation = 2;
  if (has_animation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->animation(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Interstitial interstitial = 3;
  if (has_interstitial()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->interstitial(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Video video = 4;
  if (has_video()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->video(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdResponse_VAD::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .com.rj.protos.mobile.MobileAdResponse.VAD.VadType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Animation animation = 2;
    if (has_animation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->animation());
    }

    // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Interstitial interstitial = 3;
    if (has_interstitial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->interstitial());
    }

    // optional .com.rj.protos.mobile.MobileAdResponse.VAD.Video video = 4;
    if (has_video()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->video());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdResponse_VAD::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdResponse_VAD* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdResponse_VAD*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdResponse_VAD::MergeFrom(const MobileAdResponse_VAD& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_animation()) {
      set_animation(from.animation());
    }
    if (from.has_interstitial()) {
      mutable_interstitial()->::com::rj::protos::mobile::MobileAdResponse_VAD_Interstitial::MergeFrom(from.interstitial());
    }
    if (from.has_video()) {
      mutable_video()->::com::rj::protos::mobile::MobileAdResponse_VAD_Video::MergeFrom(from.video());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdResponse_VAD::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdResponse_VAD::CopyFrom(const MobileAdResponse_VAD& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdResponse_VAD::IsInitialized() const {

  return true;
}

void MobileAdResponse_VAD::Swap(MobileAdResponse_VAD* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(animation_, other->animation_);
    std::swap(interstitial_, other->interstitial_);
    std::swap(video_, other->video_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdResponse_VAD::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdResponse_VAD_descriptor_;
  metadata.reflection = MobileAdResponse_VAD_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

const ::google::protobuf::EnumDescriptor* MobileAdResponse_Native_Content_MutipleMediaType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_Native_Content_MutipleMediaType_descriptor_;
}
bool MobileAdResponse_Native_Content_MutipleMediaType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MobileAdResponse_Native_Content_MutipleMediaType MobileAdResponse_Native_Content::Video;
const MobileAdResponse_Native_Content_MutipleMediaType MobileAdResponse_Native_Content::Youtube;
const MobileAdResponse_Native_Content_MutipleMediaType MobileAdResponse_Native_Content::Mraid;
const MobileAdResponse_Native_Content_MutipleMediaType MobileAdResponse_Native_Content::MutipleMediaType_MIN;
const MobileAdResponse_Native_Content_MutipleMediaType MobileAdResponse_Native_Content::MutipleMediaType_MAX;
const int MobileAdResponse_Native_Content::MutipleMediaType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MobileAdResponse_Native_Content::kContentTypeFieldNumber;
const int MobileAdResponse_Native_Content::kAppTypeFieldNumber;
const int MobileAdResponse_Native_Content::kIconUrlFieldNumber;
const int MobileAdResponse_Native_Content::kTitleFieldNumber;
const int MobileAdResponse_Native_Content::kSubTitleFieldNumber;
const int MobileAdResponse_Native_Content::kDescriptionFieldNumber;
const int MobileAdResponse_Native_Content::kMutipleMediaTypeFieldNumber;
const int MobileAdResponse_Native_Content::kImageUrlFieldNumber;
const int MobileAdResponse_Native_Content::kVideoUrlFieldNumber;
const int MobileAdResponse_Native_Content::kYoutubeUrlFieldNumber;
const int MobileAdResponse_Native_Content::kMraidMarkUpFieldNumber;
const int MobileAdResponse_Native_Content::kClickUrlFieldNumber;
const int MobileAdResponse_Native_Content::kRelatedInfoFieldNumber;
const int MobileAdResponse_Native_Content::kTrackingFieldNumber;
const int MobileAdResponse_Native_Content::kAppPackageFieldNumber;
const int MobileAdResponse_Native_Content::kTelNumFieldNumber;
const int MobileAdResponse_Native_Content::kAdLinkFieldNumber;
const int MobileAdResponse_Native_Content::kShareUrlFieldNumber;
const int MobileAdResponse_Native_Content::kImpressionUrlFieldNumber;
const int MobileAdResponse_Native_Content::kImageTrackingUrlFieldNumber;
const int MobileAdResponse_Native_Content::kButtonTrackingUrlFieldNumber;
#endif  // !_MSC_VER

MobileAdResponse_Native_Content::MobileAdResponse_Native_Content()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdResponse_Native_Content::InitAsDefaultInstance() {
}

MobileAdResponse_Native_Content::MobileAdResponse_Native_Content(const MobileAdResponse_Native_Content& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdResponse_Native_Content::SharedCtor() {
  _cached_size_ = 0;
  contenttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  apptype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  iconurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  subtitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  description_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mutiplemediatype_ = 0;
  imageurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  videourl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  youtubeurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mraidmarkup_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  clickurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  relatedinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  tracking_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  apppackage_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  telnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  adlink_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  shareurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdResponse_Native_Content::~MobileAdResponse_Native_Content() {
  SharedDtor();
}

void MobileAdResponse_Native_Content::SharedDtor() {
  if (contenttype_ != &::google::protobuf::internal::kEmptyString) {
    delete contenttype_;
  }
  if (apptype_ != &::google::protobuf::internal::kEmptyString) {
    delete apptype_;
  }
  if (iconurl_ != &::google::protobuf::internal::kEmptyString) {
    delete iconurl_;
  }
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (subtitle_ != &::google::protobuf::internal::kEmptyString) {
    delete subtitle_;
  }
  if (description_ != &::google::protobuf::internal::kEmptyString) {
    delete description_;
  }
  if (imageurl_ != &::google::protobuf::internal::kEmptyString) {
    delete imageurl_;
  }
  if (videourl_ != &::google::protobuf::internal::kEmptyString) {
    delete videourl_;
  }
  if (youtubeurl_ != &::google::protobuf::internal::kEmptyString) {
    delete youtubeurl_;
  }
  if (mraidmarkup_ != &::google::protobuf::internal::kEmptyString) {
    delete mraidmarkup_;
  }
  if (clickurl_ != &::google::protobuf::internal::kEmptyString) {
    delete clickurl_;
  }
  if (relatedinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete relatedinfo_;
  }
  if (tracking_ != &::google::protobuf::internal::kEmptyString) {
    delete tracking_;
  }
  if (apppackage_ != &::google::protobuf::internal::kEmptyString) {
    delete apppackage_;
  }
  if (telnum_ != &::google::protobuf::internal::kEmptyString) {
    delete telnum_;
  }
  if (adlink_ != &::google::protobuf::internal::kEmptyString) {
    delete adlink_;
  }
  if (shareurl_ != &::google::protobuf::internal::kEmptyString) {
    delete shareurl_;
  }
  if (this != default_instance_) {
  }
}

void MobileAdResponse_Native_Content::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdResponse_Native_Content::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_Native_Content_descriptor_;
}

const MobileAdResponse_Native_Content& MobileAdResponse_Native_Content::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdMobileResponse_2eproto();
  return *default_instance_;
}

MobileAdResponse_Native_Content* MobileAdResponse_Native_Content::default_instance_ = NULL;

MobileAdResponse_Native_Content* MobileAdResponse_Native_Content::New() const {
  return new MobileAdResponse_Native_Content;
}

void MobileAdResponse_Native_Content::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_contenttype()) {
      if (contenttype_ != &::google::protobuf::internal::kEmptyString) {
        contenttype_->clear();
      }
    }
    if (has_apptype()) {
      if (apptype_ != &::google::protobuf::internal::kEmptyString) {
        apptype_->clear();
      }
    }
    if (has_iconurl()) {
      if (iconurl_ != &::google::protobuf::internal::kEmptyString) {
        iconurl_->clear();
      }
    }
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::kEmptyString) {
        title_->clear();
      }
    }
    if (has_subtitle()) {
      if (subtitle_ != &::google::protobuf::internal::kEmptyString) {
        subtitle_->clear();
      }
    }
    if (has_description()) {
      if (description_ != &::google::protobuf::internal::kEmptyString) {
        description_->clear();
      }
    }
    mutiplemediatype_ = 0;
    if (has_imageurl()) {
      if (imageurl_ != &::google::protobuf::internal::kEmptyString) {
        imageurl_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_videourl()) {
      if (videourl_ != &::google::protobuf::internal::kEmptyString) {
        videourl_->clear();
      }
    }
    if (has_youtubeurl()) {
      if (youtubeurl_ != &::google::protobuf::internal::kEmptyString) {
        youtubeurl_->clear();
      }
    }
    if (has_mraidmarkup()) {
      if (mraidmarkup_ != &::google::protobuf::internal::kEmptyString) {
        mraidmarkup_->clear();
      }
    }
    if (has_clickurl()) {
      if (clickurl_ != &::google::protobuf::internal::kEmptyString) {
        clickurl_->clear();
      }
    }
    if (has_relatedinfo()) {
      if (relatedinfo_ != &::google::protobuf::internal::kEmptyString) {
        relatedinfo_->clear();
      }
    }
    if (has_tracking()) {
      if (tracking_ != &::google::protobuf::internal::kEmptyString) {
        tracking_->clear();
      }
    }
    if (has_apppackage()) {
      if (apppackage_ != &::google::protobuf::internal::kEmptyString) {
        apppackage_->clear();
      }
    }
    if (has_telnum()) {
      if (telnum_ != &::google::protobuf::internal::kEmptyString) {
        telnum_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_adlink()) {
      if (adlink_ != &::google::protobuf::internal::kEmptyString) {
        adlink_->clear();
      }
    }
    if (has_shareurl()) {
      if (shareurl_ != &::google::protobuf::internal::kEmptyString) {
        shareurl_->clear();
      }
    }
  }
  impressionurl_.Clear();
  imagetrackingurl_.Clear();
  buttontrackingurl_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdResponse_Native_Content::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string contentType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contenttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->contenttype().data(), this->contenttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_appType;
        break;
      }

      // optional string appType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_appType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apptype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->apptype().data(), this->apptype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_iconUrl;
        break;
      }

      // optional string iconUrl = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_iconUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iconurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->iconurl().data(), this->iconurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_title;
        break;
      }

      // optional string title = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_subTitle;
        break;
      }

      // optional string subTitle = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_subTitle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subtitle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->subtitle().data(), this->subtitle().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_description;
        break;
      }

      // optional string description = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_mutipleMediaType;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdResponse.Native.Content.MutipleMediaType mutipleMediaType = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mutipleMediaType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::rj::protos::mobile::MobileAdResponse_Native_Content_MutipleMediaType_IsValid(value)) {
            set_mutiplemediatype(static_cast< ::com::rj::protos::mobile::MobileAdResponse_Native_Content_MutipleMediaType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_imageUrl;
        break;
      }

      // optional string imageUrl = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_imageUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imageurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->imageurl().data(), this->imageurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_videoUrl;
        break;
      }

      // optional string videoUrl = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_videoUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_videourl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->videourl().data(), this->videourl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_youtubeUrl;
        break;
      }

      // optional string youtubeUrl = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_youtubeUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_youtubeurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->youtubeurl().data(), this->youtubeurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_mraidMarkUp;
        break;
      }

      // optional string mraidMarkUp = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mraidMarkUp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mraidmarkup()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mraidmarkup().data(), this->mraidmarkup().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_clickUrl;
        break;
      }

      // optional string clickUrl = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_clickUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clickurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->clickurl().data(), this->clickurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_relatedInfo;
        break;
      }

      // optional string relatedInfo = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_relatedInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_relatedinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->relatedinfo().data(), this->relatedinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_tracking;
        break;
      }

      // optional string tracking = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tracking:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tracking()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->tracking().data(), this->tracking().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_appPackage;
        break;
      }

      // optional string appPackage = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_appPackage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apppackage()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->apppackage().data(), this->apppackage().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_telNum;
        break;
      }

      // optional string telNum = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_telNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_telnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->telnum().data(), this->telnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_adLink;
        break;
      }

      // optional string adLink = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adLink:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adlink()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->adlink().data(), this->adlink().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_shareUrl;
        break;
      }

      // optional string shareUrl = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_shareUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shareurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->shareurl().data(), this->shareurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_impressionUrl;
        break;
      }

      // repeated string impressionUrl = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_impressionUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_impressionurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->impressionurl(this->impressionurl_size() - 1).data(),
            this->impressionurl(this->impressionurl_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_impressionUrl;
        if (input->ExpectTag(162)) goto parse_imageTrackingUrl;
        break;
      }

      // repeated string imageTrackingUrl = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_imageTrackingUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_imagetrackingurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->imagetrackingurl(this->imagetrackingurl_size() - 1).data(),
            this->imagetrackingurl(this->imagetrackingurl_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_imageTrackingUrl;
        if (input->ExpectTag(170)) goto parse_buttonTrackingUrl;
        break;
      }

      // repeated string buttonTrackingUrl = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_buttonTrackingUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_buttontrackingurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->buttontrackingurl(this->buttontrackingurl_size() - 1).data(),
            this->buttontrackingurl(this->buttontrackingurl_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_buttonTrackingUrl;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdResponse_Native_Content::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string contentType = 1;
  if (has_contenttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->contenttype().data(), this->contenttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->contenttype(), output);
  }

  // optional string appType = 2;
  if (has_apptype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->apptype().data(), this->apptype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->apptype(), output);
  }

  // optional string iconUrl = 3;
  if (has_iconurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->iconurl().data(), this->iconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->iconurl(), output);
  }

  // optional string title = 4;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->title(), output);
  }

  // optional string subTitle = 5;
  if (has_subtitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->subtitle().data(), this->subtitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->subtitle(), output);
  }

  // optional string description = 6;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->description(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.Native.Content.MutipleMediaType mutipleMediaType = 7;
  if (has_mutiplemediatype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->mutiplemediatype(), output);
  }

  // optional string imageUrl = 8;
  if (has_imageurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->imageurl().data(), this->imageurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->imageurl(), output);
  }

  // optional string videoUrl = 9;
  if (has_videourl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->videourl().data(), this->videourl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->videourl(), output);
  }

  // optional string youtubeUrl = 10;
  if (has_youtubeurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->youtubeurl().data(), this->youtubeurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->youtubeurl(), output);
  }

  // optional string mraidMarkUp = 11;
  if (has_mraidmarkup()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mraidmarkup().data(), this->mraidmarkup().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->mraidmarkup(), output);
  }

  // optional string clickUrl = 12;
  if (has_clickurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clickurl().data(), this->clickurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->clickurl(), output);
  }

  // optional string relatedInfo = 13;
  if (has_relatedinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->relatedinfo().data(), this->relatedinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->relatedinfo(), output);
  }

  // optional string tracking = 14;
  if (has_tracking()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tracking().data(), this->tracking().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->tracking(), output);
  }

  // optional string appPackage = 15;
  if (has_apppackage()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->apppackage().data(), this->apppackage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->apppackage(), output);
  }

  // optional string telNum = 16;
  if (has_telnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->telnum().data(), this->telnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->telnum(), output);
  }

  // optional string adLink = 17;
  if (has_adlink()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adlink().data(), this->adlink().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->adlink(), output);
  }

  // optional string shareUrl = 18;
  if (has_shareurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->shareurl().data(), this->shareurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->shareurl(), output);
  }

  // repeated string impressionUrl = 19;
  for (int i = 0; i < this->impressionurl_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->impressionurl(i).data(), this->impressionurl(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->impressionurl(i), output);
  }

  // repeated string imageTrackingUrl = 20;
  for (int i = 0; i < this->imagetrackingurl_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->imagetrackingurl(i).data(), this->imagetrackingurl(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->imagetrackingurl(i), output);
  }

  // repeated string buttonTrackingUrl = 21;
  for (int i = 0; i < this->buttontrackingurl_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->buttontrackingurl(i).data(), this->buttontrackingurl(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->buttontrackingurl(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdResponse_Native_Content::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string contentType = 1;
  if (has_contenttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->contenttype().data(), this->contenttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->contenttype(), target);
  }

  // optional string appType = 2;
  if (has_apptype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->apptype().data(), this->apptype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->apptype(), target);
  }

  // optional string iconUrl = 3;
  if (has_iconurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->iconurl().data(), this->iconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->iconurl(), target);
  }

  // optional string title = 4;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->title(), target);
  }

  // optional string subTitle = 5;
  if (has_subtitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->subtitle().data(), this->subtitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->subtitle(), target);
  }

  // optional string description = 6;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->description(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.Native.Content.MutipleMediaType mutipleMediaType = 7;
  if (has_mutiplemediatype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->mutiplemediatype(), target);
  }

  // optional string imageUrl = 8;
  if (has_imageurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->imageurl().data(), this->imageurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->imageurl(), target);
  }

  // optional string videoUrl = 9;
  if (has_videourl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->videourl().data(), this->videourl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->videourl(), target);
  }

  // optional string youtubeUrl = 10;
  if (has_youtubeurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->youtubeurl().data(), this->youtubeurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->youtubeurl(), target);
  }

  // optional string mraidMarkUp = 11;
  if (has_mraidmarkup()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mraidmarkup().data(), this->mraidmarkup().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->mraidmarkup(), target);
  }

  // optional string clickUrl = 12;
  if (has_clickurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clickurl().data(), this->clickurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->clickurl(), target);
  }

  // optional string relatedInfo = 13;
  if (has_relatedinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->relatedinfo().data(), this->relatedinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->relatedinfo(), target);
  }

  // optional string tracking = 14;
  if (has_tracking()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tracking().data(), this->tracking().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->tracking(), target);
  }

  // optional string appPackage = 15;
  if (has_apppackage()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->apppackage().data(), this->apppackage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->apppackage(), target);
  }

  // optional string telNum = 16;
  if (has_telnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->telnum().data(), this->telnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->telnum(), target);
  }

  // optional string adLink = 17;
  if (has_adlink()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adlink().data(), this->adlink().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->adlink(), target);
  }

  // optional string shareUrl = 18;
  if (has_shareurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->shareurl().data(), this->shareurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->shareurl(), target);
  }

  // repeated string impressionUrl = 19;
  for (int i = 0; i < this->impressionurl_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->impressionurl(i).data(), this->impressionurl(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(19, this->impressionurl(i), target);
  }

  // repeated string imageTrackingUrl = 20;
  for (int i = 0; i < this->imagetrackingurl_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->imagetrackingurl(i).data(), this->imagetrackingurl(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(20, this->imagetrackingurl(i), target);
  }

  // repeated string buttonTrackingUrl = 21;
  for (int i = 0; i < this->buttontrackingurl_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->buttontrackingurl(i).data(), this->buttontrackingurl(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(21, this->buttontrackingurl(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdResponse_Native_Content::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string contentType = 1;
    if (has_contenttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->contenttype());
    }

    // optional string appType = 2;
    if (has_apptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->apptype());
    }

    // optional string iconUrl = 3;
    if (has_iconurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->iconurl());
    }

    // optional string title = 4;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string subTitle = 5;
    if (has_subtitle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->subtitle());
    }

    // optional string description = 6;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional .com.rj.protos.mobile.MobileAdResponse.Native.Content.MutipleMediaType mutipleMediaType = 7;
    if (has_mutiplemediatype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->mutiplemediatype());
    }

    // optional string imageUrl = 8;
    if (has_imageurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->imageurl());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string videoUrl = 9;
    if (has_videourl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->videourl());
    }

    // optional string youtubeUrl = 10;
    if (has_youtubeurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->youtubeurl());
    }

    // optional string mraidMarkUp = 11;
    if (has_mraidmarkup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mraidmarkup());
    }

    // optional string clickUrl = 12;
    if (has_clickurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clickurl());
    }

    // optional string relatedInfo = 13;
    if (has_relatedinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->relatedinfo());
    }

    // optional string tracking = 14;
    if (has_tracking()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tracking());
    }

    // optional string appPackage = 15;
    if (has_apppackage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->apppackage());
    }

    // optional string telNum = 16;
    if (has_telnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->telnum());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string adLink = 17;
    if (has_adlink()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->adlink());
    }

    // optional string shareUrl = 18;
    if (has_shareurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->shareurl());
    }

  }
  // repeated string impressionUrl = 19;
  total_size += 2 * this->impressionurl_size();
  for (int i = 0; i < this->impressionurl_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->impressionurl(i));
  }

  // repeated string imageTrackingUrl = 20;
  total_size += 2 * this->imagetrackingurl_size();
  for (int i = 0; i < this->imagetrackingurl_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->imagetrackingurl(i));
  }

  // repeated string buttonTrackingUrl = 21;
  total_size += 2 * this->buttontrackingurl_size();
  for (int i = 0; i < this->buttontrackingurl_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->buttontrackingurl(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdResponse_Native_Content::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdResponse_Native_Content* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdResponse_Native_Content*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdResponse_Native_Content::MergeFrom(const MobileAdResponse_Native_Content& from) {
  GOOGLE_CHECK_NE(&from, this);
  impressionurl_.MergeFrom(from.impressionurl_);
  imagetrackingurl_.MergeFrom(from.imagetrackingurl_);
  buttontrackingurl_.MergeFrom(from.buttontrackingurl_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_contenttype()) {
      set_contenttype(from.contenttype());
    }
    if (from.has_apptype()) {
      set_apptype(from.apptype());
    }
    if (from.has_iconurl()) {
      set_iconurl(from.iconurl());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_subtitle()) {
      set_subtitle(from.subtitle());
    }
    if (from.has_description()) {
      set_description(from.description());
    }
    if (from.has_mutiplemediatype()) {
      set_mutiplemediatype(from.mutiplemediatype());
    }
    if (from.has_imageurl()) {
      set_imageurl(from.imageurl());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_videourl()) {
      set_videourl(from.videourl());
    }
    if (from.has_youtubeurl()) {
      set_youtubeurl(from.youtubeurl());
    }
    if (from.has_mraidmarkup()) {
      set_mraidmarkup(from.mraidmarkup());
    }
    if (from.has_clickurl()) {
      set_clickurl(from.clickurl());
    }
    if (from.has_relatedinfo()) {
      set_relatedinfo(from.relatedinfo());
    }
    if (from.has_tracking()) {
      set_tracking(from.tracking());
    }
    if (from.has_apppackage()) {
      set_apppackage(from.apppackage());
    }
    if (from.has_telnum()) {
      set_telnum(from.telnum());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_adlink()) {
      set_adlink(from.adlink());
    }
    if (from.has_shareurl()) {
      set_shareurl(from.shareurl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdResponse_Native_Content::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdResponse_Native_Content::CopyFrom(const MobileAdResponse_Native_Content& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdResponse_Native_Content::IsInitialized() const {

  return true;
}

void MobileAdResponse_Native_Content::Swap(MobileAdResponse_Native_Content* other) {
  if (other != this) {
    std::swap(contenttype_, other->contenttype_);
    std::swap(apptype_, other->apptype_);
    std::swap(iconurl_, other->iconurl_);
    std::swap(title_, other->title_);
    std::swap(subtitle_, other->subtitle_);
    std::swap(description_, other->description_);
    std::swap(mutiplemediatype_, other->mutiplemediatype_);
    std::swap(imageurl_, other->imageurl_);
    std::swap(videourl_, other->videourl_);
    std::swap(youtubeurl_, other->youtubeurl_);
    std::swap(mraidmarkup_, other->mraidmarkup_);
    std::swap(clickurl_, other->clickurl_);
    std::swap(relatedinfo_, other->relatedinfo_);
    std::swap(tracking_, other->tracking_);
    std::swap(apppackage_, other->apppackage_);
    std::swap(telnum_, other->telnum_);
    std::swap(adlink_, other->adlink_);
    std::swap(shareurl_, other->shareurl_);
    impressionurl_.Swap(&other->impressionurl_);
    imagetrackingurl_.Swap(&other->imagetrackingurl_);
    buttontrackingurl_.Swap(&other->buttontrackingurl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdResponse_Native_Content::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdResponse_Native_Content_descriptor_;
  metadata.reflection = MobileAdResponse_Native_Content_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MobileAdResponse_Native::kAdTypeFieldNumber;
const int MobileAdResponse_Native::kIdFieldNumber;
const int MobileAdResponse_Native::kContentFieldNumber;
#endif  // !_MSC_VER

MobileAdResponse_Native::MobileAdResponse_Native()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdResponse_Native::InitAsDefaultInstance() {
}

MobileAdResponse_Native::MobileAdResponse_Native(const MobileAdResponse_Native& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdResponse_Native::SharedCtor() {
  _cached_size_ = 0;
  adtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdResponse_Native::~MobileAdResponse_Native() {
  SharedDtor();
}

void MobileAdResponse_Native::SharedDtor() {
  if (adtype_ != &::google::protobuf::internal::kEmptyString) {
    delete adtype_;
  }
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (this != default_instance_) {
  }
}

void MobileAdResponse_Native::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdResponse_Native::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_Native_descriptor_;
}

const MobileAdResponse_Native& MobileAdResponse_Native::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdMobileResponse_2eproto();
  return *default_instance_;
}

MobileAdResponse_Native* MobileAdResponse_Native::default_instance_ = NULL;

MobileAdResponse_Native* MobileAdResponse_Native::New() const {
  return new MobileAdResponse_Native;
}

void MobileAdResponse_Native::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_adtype()) {
      if (adtype_ != &::google::protobuf::internal::kEmptyString) {
        adtype_->clear();
      }
    }
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
  }
  content_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdResponse_Native::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string adType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->adtype().data(), this->adtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_id;
        break;
      }

      // optional string id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_content;
        break;
      }

      // repeated .com.rj.protos.mobile.MobileAdResponse.Native.Content content = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_content()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_content;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdResponse_Native::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string adType = 1;
  if (has_adtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adtype().data(), this->adtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->adtype(), output);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->id(), output);
  }

  // repeated .com.rj.protos.mobile.MobileAdResponse.Native.Content content = 3;
  for (int i = 0; i < this->content_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->content(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdResponse_Native::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string adType = 1;
  if (has_adtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adtype().data(), this->adtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->adtype(), target);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // repeated .com.rj.protos.mobile.MobileAdResponse.Native.Content content = 3;
  for (int i = 0; i < this->content_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->content(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdResponse_Native::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string adType = 1;
    if (has_adtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->adtype());
    }

    // optional string id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

  }
  // repeated .com.rj.protos.mobile.MobileAdResponse.Native.Content content = 3;
  total_size += 1 * this->content_size();
  for (int i = 0; i < this->content_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->content(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdResponse_Native::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdResponse_Native* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdResponse_Native*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdResponse_Native::MergeFrom(const MobileAdResponse_Native& from) {
  GOOGLE_CHECK_NE(&from, this);
  content_.MergeFrom(from.content_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_adtype()) {
      set_adtype(from.adtype());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdResponse_Native::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdResponse_Native::CopyFrom(const MobileAdResponse_Native& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdResponse_Native::IsInitialized() const {

  return true;
}

void MobileAdResponse_Native::Swap(MobileAdResponse_Native* other) {
  if (other != this) {
    std::swap(adtype_, other->adtype_);
    std::swap(id_, other->id_);
    content_.Swap(&other->content_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdResponse_Native::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdResponse_Native_descriptor_;
  metadata.reflection = MobileAdResponse_Native_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MobileAdResponse::kIdFieldNumber;
const int MobileAdResponse::kBidderIdFieldNumber;
const int MobileAdResponse::kBannerFieldNumber;
const int MobileAdResponse::kVadFieldNumber;
const int MobileAdResponse::kNativeFieldNumber;
#endif  // !_MSC_VER

MobileAdResponse::MobileAdResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdResponse::InitAsDefaultInstance() {
  banner_ = const_cast< ::com::rj::protos::mobile::MobileAdResponse_Banner*>(&::com::rj::protos::mobile::MobileAdResponse_Banner::default_instance());
  vad_ = const_cast< ::com::rj::protos::mobile::MobileAdResponse_VAD*>(&::com::rj::protos::mobile::MobileAdResponse_VAD::default_instance());
  native_ = const_cast< ::com::rj::protos::mobile::MobileAdResponse_Native*>(&::com::rj::protos::mobile::MobileAdResponse_Native::default_instance());
}

MobileAdResponse::MobileAdResponse(const MobileAdResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdResponse::SharedCtor() {
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bidderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  banner_ = NULL;
  vad_ = NULL;
  native_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdResponse::~MobileAdResponse() {
  SharedDtor();
}

void MobileAdResponse::SharedDtor() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (bidderid_ != &::google::protobuf::internal::kEmptyString) {
    delete bidderid_;
  }
  if (this != default_instance_) {
    delete banner_;
    delete vad_;
    delete native_;
  }
}

void MobileAdResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_descriptor_;
}

const MobileAdResponse& MobileAdResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdMobileResponse_2eproto();
  return *default_instance_;
}

MobileAdResponse* MobileAdResponse::default_instance_ = NULL;

MobileAdResponse* MobileAdResponse::New() const {
  return new MobileAdResponse;
}

void MobileAdResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
    if (has_bidderid()) {
      if (bidderid_ != &::google::protobuf::internal::kEmptyString) {
        bidderid_->clear();
      }
    }
    if (has_banner()) {
      if (banner_ != NULL) banner_->::com::rj::protos::mobile::MobileAdResponse_Banner::Clear();
    }
    if (has_vad()) {
      if (vad_ != NULL) vad_->::com::rj::protos::mobile::MobileAdResponse_VAD::Clear();
    }
    if (has_native()) {
      if (native_ != NULL) native_->::com::rj::protos::mobile::MobileAdResponse_Native::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bidderId;
        break;
      }

      // optional string bidderId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bidderId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bidderid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bidderid().data(), this->bidderid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_banner;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdResponse.Banner banner = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_banner:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_banner()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_vad;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdResponse.VAD vad = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_vad:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vad()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_native;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdResponse.Native native = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_native:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_native()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->id(), output);
  }

  // optional string bidderId = 2;
  if (has_bidderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bidderid().data(), this->bidderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->bidderid(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.Banner banner = 3;
  if (has_banner()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->banner(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.VAD vad = 4;
  if (has_vad()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->vad(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.Native native = 5;
  if (has_native()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->native(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string bidderId = 2;
  if (has_bidderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bidderid().data(), this->bidderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bidderid(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.Banner banner = 3;
  if (has_banner()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->banner(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.VAD vad = 4;
  if (has_vad()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->vad(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.Native native = 5;
  if (has_native()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->native(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string bidderId = 2;
    if (has_bidderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bidderid());
    }

    // optional .com.rj.protos.mobile.MobileAdResponse.Banner banner = 3;
    if (has_banner()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->banner());
    }

    // optional .com.rj.protos.mobile.MobileAdResponse.VAD vad = 4;
    if (has_vad()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->vad());
    }

    // optional .com.rj.protos.mobile.MobileAdResponse.Native native = 5;
    if (has_native()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->native());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdResponse::MergeFrom(const MobileAdResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_bidderid()) {
      set_bidderid(from.bidderid());
    }
    if (from.has_banner()) {
      mutable_banner()->::com::rj::protos::mobile::MobileAdResponse_Banner::MergeFrom(from.banner());
    }
    if (from.has_vad()) {
      mutable_vad()->::com::rj::protos::mobile::MobileAdResponse_VAD::MergeFrom(from.vad());
    }
    if (from.has_native()) {
      mutable_native()->::com::rj::protos::mobile::MobileAdResponse_Native::MergeFrom(from.native());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdResponse::CopyFrom(const MobileAdResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MobileAdResponse::Swap(MobileAdResponse* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(bidderid_, other->bidderid_);
    std::swap(banner_, other->banner_);
    std::swap(vad_, other->vad_);
    std::swap(native_, other->native_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdResponse_descriptor_;
  metadata.reflection = MobileAdResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mobile
}  // namespace protos
}  // namespace rj
}  // namespace com

// @@protoc_insertion_point(global_scope)
