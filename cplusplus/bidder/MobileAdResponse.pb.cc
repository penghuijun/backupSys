// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MobileAdResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MobileAdResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace rj {
namespace protos {
namespace mobile {

namespace {

const ::google::protobuf::Descriptor* MobileAdResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobileAdResponse_Bidder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdResponse_Bidder_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobileAdResponse_mobileBid_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdResponse_mobileBid_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobileAdResponse_Creative_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdResponse_Creative_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobileAdResponse_Action_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdResponse_Action_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobileAdResponse_TrackingEvents_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdResponse_TrackingEvents_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobileAdResponse_UUID_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdResponse_UUID_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MobileAdResponse_UuidType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_MobileAdResponse_2eproto() {
  protobuf_AddDesc_MobileAdResponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MobileAdResponse.proto");
  GOOGLE_CHECK(file != NULL);
  MobileAdResponse_descriptor_ = file->message_type(0);
  static const int MobileAdResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, bidder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, bidid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, bidcontent_),
  };
  MobileAdResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdResponse_descriptor_,
      MobileAdResponse::default_instance_,
      MobileAdResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdResponse));
  MobileAdResponse_Bidder_descriptor_ = MobileAdResponse_descriptor_->nested_type(0);
  static const int MobileAdResponse_Bidder_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Bidder, bidderid_),
  };
  MobileAdResponse_Bidder_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdResponse_Bidder_descriptor_,
      MobileAdResponse_Bidder::default_instance_,
      MobileAdResponse_Bidder_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Bidder, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Bidder, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdResponse_Bidder));
  MobileAdResponse_mobileBid_descriptor_ = MobileAdResponse_descriptor_->nested_type(1);
  static const int MobileAdResponse_mobileBid_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_mobileBid, campaignid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_mobileBid, biddingtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_mobileBid, biddingvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_mobileBid, currency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_mobileBid, creative_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_mobileBid, action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_mobileBid, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_mobileBid, expectcpm_),
  };
  MobileAdResponse_mobileBid_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdResponse_mobileBid_descriptor_,
      MobileAdResponse_mobileBid::default_instance_,
      MobileAdResponse_mobileBid_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_mobileBid, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_mobileBid, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdResponse_mobileBid));
  MobileAdResponse_Creative_descriptor_ = MobileAdResponse_descriptor_->nested_type(2);
  static const int MobileAdResponse_Creative_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Creative, creativeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Creative, admarkup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Creative, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Creative, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Creative, macro_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Creative, events_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Creative, mediatypeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Creative, mediasubtypeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Creative, uuid_),
  };
  MobileAdResponse_Creative_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdResponse_Creative_descriptor_,
      MobileAdResponse_Creative::default_instance_,
      MobileAdResponse_Creative_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Creative, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Creative, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdResponse_Creative));
  MobileAdResponse_Action_descriptor_ = MobileAdResponse_descriptor_->nested_type(3);
  static const int MobileAdResponse_Action_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Action, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Action, inapp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Action, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Action, actiontype_),
  };
  MobileAdResponse_Action_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdResponse_Action_descriptor_,
      MobileAdResponse_Action::default_instance_,
      MobileAdResponse_Action_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Action, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_Action, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdResponse_Action));
  MobileAdResponse_TrackingEvents_descriptor_ = MobileAdResponse_descriptor_->nested_type(4);
  static const int MobileAdResponse_TrackingEvents_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_TrackingEvents, event_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_TrackingEvents, trackurl_),
  };
  MobileAdResponse_TrackingEvents_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdResponse_TrackingEvents_descriptor_,
      MobileAdResponse_TrackingEvents::default_instance_,
      MobileAdResponse_TrackingEvents_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_TrackingEvents, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_TrackingEvents, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdResponse_TrackingEvents));
  MobileAdResponse_UUID_descriptor_ = MobileAdResponse_descriptor_->nested_type(5);
  static const int MobileAdResponse_UUID_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_UUID, uuidtype_),
  };
  MobileAdResponse_UUID_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdResponse_UUID_descriptor_,
      MobileAdResponse_UUID::default_instance_,
      MobileAdResponse_UUID_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_UUID, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_UUID, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdResponse_UUID));
  MobileAdResponse_UuidType_descriptor_ = MobileAdResponse_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MobileAdResponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdResponse_descriptor_, &MobileAdResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdResponse_Bidder_descriptor_, &MobileAdResponse_Bidder::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdResponse_mobileBid_descriptor_, &MobileAdResponse_mobileBid::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdResponse_Creative_descriptor_, &MobileAdResponse_Creative::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdResponse_Action_descriptor_, &MobileAdResponse_Action::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdResponse_TrackingEvents_descriptor_, &MobileAdResponse_TrackingEvents::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdResponse_UUID_descriptor_, &MobileAdResponse_UUID::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MobileAdResponse_2eproto() {
  delete MobileAdResponse::default_instance_;
  delete MobileAdResponse_reflection_;
  delete MobileAdResponse_Bidder::default_instance_;
  delete MobileAdResponse_Bidder_reflection_;
  delete MobileAdResponse_mobileBid::default_instance_;
  delete MobileAdResponse_mobileBid_reflection_;
  delete MobileAdResponse_Creative::default_instance_;
  delete MobileAdResponse_Creative_reflection_;
  delete MobileAdResponse_Action::default_instance_;
  delete MobileAdResponse_Action_reflection_;
  delete MobileAdResponse_TrackingEvents::default_instance_;
  delete MobileAdResponse_TrackingEvents_reflection_;
  delete MobileAdResponse_UUID::default_instance_;
  delete MobileAdResponse_UUID_reflection_;
}

void protobuf_AddDesc_MobileAdResponse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026MobileAdResponse.proto\022\024com.rj.protos."
    "mobile\"\371\007\n\020MobileAdResponse\022\n\n\002id\030\001 \002(\t\022"
    "=\n\006bidder\030\002 \002(\0132-.com.rj.protos.mobile.M"
    "obileAdResponse.Bidder\022\r\n\005bidId\030\003 \002(\t\022D\n"
    "\nbidContent\030\004 \003(\01320.com.rj.protos.mobile"
    ".MobileAdResponse.mobileBid\032\032\n\006Bidder\022\020\n"
    "\010bidderId\030\001 \002(\t\032\254\002\n\tmobileBid\022\022\n\ncampaig"
    "nId\030\001 \002(\t\022\023\n\013biddingType\030\002 \001(\t\022\024\n\014biddin"
    "gValue\030\003 \001(\t\022\020\n\010currency\030\004 \001(\t\022A\n\010creati"
    "ve\030\005 \003(\0132/.com.rj.protos.mobile.MobileAd"
    "Response.Creative\022=\n\006action\030\006 \001(\0132-.com."
    "rj.protos.mobile.MobileAdResponse.Action"
    "\0229\n\004uuid\030\007 \001(\0132+.com.rj.protos.mobile.Mo"
    "bileAdResponse.UUID\022\021\n\texpectCpm\030\010 \001(\t\032\215"
    "\002\n\010Creative\022\022\n\ncreativeId\030\001 \001(\t\022\020\n\010admar"
    "kup\030\002 \001(\t\022\r\n\005width\030\003 \001(\t\022\016\n\006height\030\004 \001(\t"
    "\022\r\n\005macro\030\005 \001(\t\022E\n\006events\030\006 \003(\01325.com.rj"
    ".protos.mobile.MobileAdResponse.Tracking"
    "Events\022\023\n\013mediaTypeId\030\007 \001(\t\022\026\n\016mediaSubT"
    "ypeId\030\010 \001(\t\0229\n\004uuid\030\t \001(\0132+.com.rj.proto"
    "s.mobile.MobileAdResponse.UUID\032J\n\006Action"
    "\022\014\n\004name\030\001 \001(\t\022\r\n\005inApp\030\002 \001(\t\022\017\n\007content"
    "\030\003 \001(\t\022\022\n\nactionType\030\004 \001(\t\0321\n\016TrackingEv"
    "ents\022\r\n\005event\030\001 \001(\t\022\020\n\010trackUrl\030\002 \001(\t\032I\n"
    "\004UUID\022A\n\010uuidType\030\001 \003(\0162/.com.rj.protos."
    "mobile.MobileAdResponse.UuidType\" \n\010Uuid"
    "Type\022\007\n\003FRE\020\000\022\013\n\007SESSION\020\001", 1066);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MobileAdResponse.proto", &protobuf_RegisterTypes);
  MobileAdResponse::default_instance_ = new MobileAdResponse();
  MobileAdResponse_Bidder::default_instance_ = new MobileAdResponse_Bidder();
  MobileAdResponse_mobileBid::default_instance_ = new MobileAdResponse_mobileBid();
  MobileAdResponse_Creative::default_instance_ = new MobileAdResponse_Creative();
  MobileAdResponse_Action::default_instance_ = new MobileAdResponse_Action();
  MobileAdResponse_TrackingEvents::default_instance_ = new MobileAdResponse_TrackingEvents();
  MobileAdResponse_UUID::default_instance_ = new MobileAdResponse_UUID();
  MobileAdResponse::default_instance_->InitAsDefaultInstance();
  MobileAdResponse_Bidder::default_instance_->InitAsDefaultInstance();
  MobileAdResponse_mobileBid::default_instance_->InitAsDefaultInstance();
  MobileAdResponse_Creative::default_instance_->InitAsDefaultInstance();
  MobileAdResponse_Action::default_instance_->InitAsDefaultInstance();
  MobileAdResponse_TrackingEvents::default_instance_->InitAsDefaultInstance();
  MobileAdResponse_UUID::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MobileAdResponse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MobileAdResponse_2eproto {
  StaticDescriptorInitializer_MobileAdResponse_2eproto() {
    protobuf_AddDesc_MobileAdResponse_2eproto();
  }
} static_descriptor_initializer_MobileAdResponse_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* MobileAdResponse_UuidType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_UuidType_descriptor_;
}
bool MobileAdResponse_UuidType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MobileAdResponse_UuidType MobileAdResponse::FRE;
const MobileAdResponse_UuidType MobileAdResponse::SESSION;
const MobileAdResponse_UuidType MobileAdResponse::UuidType_MIN;
const MobileAdResponse_UuidType MobileAdResponse::UuidType_MAX;
const int MobileAdResponse::UuidType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MobileAdResponse_Bidder::kBidderIdFieldNumber;
#endif  // !_MSC_VER

MobileAdResponse_Bidder::MobileAdResponse_Bidder()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdResponse_Bidder::InitAsDefaultInstance() {
}

MobileAdResponse_Bidder::MobileAdResponse_Bidder(const MobileAdResponse_Bidder& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdResponse_Bidder::SharedCtor() {
  _cached_size_ = 0;
  bidderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdResponse_Bidder::~MobileAdResponse_Bidder() {
  SharedDtor();
}

void MobileAdResponse_Bidder::SharedDtor() {
  if (bidderid_ != &::google::protobuf::internal::kEmptyString) {
    delete bidderid_;
  }
  if (this != default_instance_) {
  }
}

void MobileAdResponse_Bidder::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdResponse_Bidder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_Bidder_descriptor_;
}

const MobileAdResponse_Bidder& MobileAdResponse_Bidder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MobileAdResponse_2eproto();
  return *default_instance_;
}

MobileAdResponse_Bidder* MobileAdResponse_Bidder::default_instance_ = NULL;

MobileAdResponse_Bidder* MobileAdResponse_Bidder::New() const {
  return new MobileAdResponse_Bidder;
}

void MobileAdResponse_Bidder::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_bidderid()) {
      if (bidderid_ != &::google::protobuf::internal::kEmptyString) {
        bidderid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdResponse_Bidder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string bidderId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bidderid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bidderid().data(), this->bidderid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdResponse_Bidder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string bidderId = 1;
  if (has_bidderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bidderid().data(), this->bidderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->bidderid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdResponse_Bidder::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string bidderId = 1;
  if (has_bidderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bidderid().data(), this->bidderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bidderid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdResponse_Bidder::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string bidderId = 1;
    if (has_bidderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bidderid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdResponse_Bidder::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdResponse_Bidder* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdResponse_Bidder*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdResponse_Bidder::MergeFrom(const MobileAdResponse_Bidder& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bidderid()) {
      set_bidderid(from.bidderid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdResponse_Bidder::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdResponse_Bidder::CopyFrom(const MobileAdResponse_Bidder& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdResponse_Bidder::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MobileAdResponse_Bidder::Swap(MobileAdResponse_Bidder* other) {
  if (other != this) {
    std::swap(bidderid_, other->bidderid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdResponse_Bidder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdResponse_Bidder_descriptor_;
  metadata.reflection = MobileAdResponse_Bidder_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MobileAdResponse_mobileBid::kCampaignIdFieldNumber;
const int MobileAdResponse_mobileBid::kBiddingTypeFieldNumber;
const int MobileAdResponse_mobileBid::kBiddingValueFieldNumber;
const int MobileAdResponse_mobileBid::kCurrencyFieldNumber;
const int MobileAdResponse_mobileBid::kCreativeFieldNumber;
const int MobileAdResponse_mobileBid::kActionFieldNumber;
const int MobileAdResponse_mobileBid::kUuidFieldNumber;
const int MobileAdResponse_mobileBid::kExpectCpmFieldNumber;
#endif  // !_MSC_VER

MobileAdResponse_mobileBid::MobileAdResponse_mobileBid()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdResponse_mobileBid::InitAsDefaultInstance() {
  action_ = const_cast< ::com::rj::protos::mobile::MobileAdResponse_Action*>(&::com::rj::protos::mobile::MobileAdResponse_Action::default_instance());
  uuid_ = const_cast< ::com::rj::protos::mobile::MobileAdResponse_UUID*>(&::com::rj::protos::mobile::MobileAdResponse_UUID::default_instance());
}

MobileAdResponse_mobileBid::MobileAdResponse_mobileBid(const MobileAdResponse_mobileBid& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdResponse_mobileBid::SharedCtor() {
  _cached_size_ = 0;
  campaignid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  biddingtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  biddingvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  currency_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  action_ = NULL;
  uuid_ = NULL;
  expectcpm_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdResponse_mobileBid::~MobileAdResponse_mobileBid() {
  SharedDtor();
}

void MobileAdResponse_mobileBid::SharedDtor() {
  if (campaignid_ != &::google::protobuf::internal::kEmptyString) {
    delete campaignid_;
  }
  if (biddingtype_ != &::google::protobuf::internal::kEmptyString) {
    delete biddingtype_;
  }
  if (biddingvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete biddingvalue_;
  }
  if (currency_ != &::google::protobuf::internal::kEmptyString) {
    delete currency_;
  }
  if (expectcpm_ != &::google::protobuf::internal::kEmptyString) {
    delete expectcpm_;
  }
  if (this != default_instance_) {
    delete action_;
    delete uuid_;
  }
}

void MobileAdResponse_mobileBid::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdResponse_mobileBid::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_mobileBid_descriptor_;
}

const MobileAdResponse_mobileBid& MobileAdResponse_mobileBid::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MobileAdResponse_2eproto();
  return *default_instance_;
}

MobileAdResponse_mobileBid* MobileAdResponse_mobileBid::default_instance_ = NULL;

MobileAdResponse_mobileBid* MobileAdResponse_mobileBid::New() const {
  return new MobileAdResponse_mobileBid;
}

void MobileAdResponse_mobileBid::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_campaignid()) {
      if (campaignid_ != &::google::protobuf::internal::kEmptyString) {
        campaignid_->clear();
      }
    }
    if (has_biddingtype()) {
      if (biddingtype_ != &::google::protobuf::internal::kEmptyString) {
        biddingtype_->clear();
      }
    }
    if (has_biddingvalue()) {
      if (biddingvalue_ != &::google::protobuf::internal::kEmptyString) {
        biddingvalue_->clear();
      }
    }
    if (has_currency()) {
      if (currency_ != &::google::protobuf::internal::kEmptyString) {
        currency_->clear();
      }
    }
    if (has_action()) {
      if (action_ != NULL) action_->::com::rj::protos::mobile::MobileAdResponse_Action::Clear();
    }
    if (has_uuid()) {
      if (uuid_ != NULL) uuid_->::com::rj::protos::mobile::MobileAdResponse_UUID::Clear();
    }
    if (has_expectcpm()) {
      if (expectcpm_ != &::google::protobuf::internal::kEmptyString) {
        expectcpm_->clear();
      }
    }
  }
  creative_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdResponse_mobileBid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string campaignId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_campaignid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->campaignid().data(), this->campaignid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_biddingType;
        break;
      }

      // optional string biddingType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_biddingType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_biddingtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->biddingtype().data(), this->biddingtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_biddingValue;
        break;
      }

      // optional string biddingValue = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_biddingValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_biddingvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->biddingvalue().data(), this->biddingvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_currency;
        break;
      }

      // optional string currency = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_currency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->currency().data(), this->currency().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_creative;
        break;
      }

      // repeated .com.rj.protos.mobile.MobileAdResponse.Creative creative = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_creative:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_creative()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_creative;
        if (input->ExpectTag(50)) goto parse_action;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdResponse.Action action = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_action:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_action()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_uuid;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdResponse.UUID uuid = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_uuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uuid()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_expectCpm;
        break;
      }

      // optional string expectCpm = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_expectCpm:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expectcpm()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->expectcpm().data(), this->expectcpm().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdResponse_mobileBid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string campaignId = 1;
  if (has_campaignid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->campaignid().data(), this->campaignid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->campaignid(), output);
  }

  // optional string biddingType = 2;
  if (has_biddingtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->biddingtype().data(), this->biddingtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->biddingtype(), output);
  }

  // optional string biddingValue = 3;
  if (has_biddingvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->biddingvalue().data(), this->biddingvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->biddingvalue(), output);
  }

  // optional string currency = 4;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->currency(), output);
  }

  // repeated .com.rj.protos.mobile.MobileAdResponse.Creative creative = 5;
  for (int i = 0; i < this->creative_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->creative(i), output);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.Action action = 6;
  if (has_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->action(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.UUID uuid = 7;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->uuid(), output);
  }

  // optional string expectCpm = 8;
  if (has_expectcpm()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->expectcpm().data(), this->expectcpm().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->expectcpm(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdResponse_mobileBid::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string campaignId = 1;
  if (has_campaignid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->campaignid().data(), this->campaignid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->campaignid(), target);
  }

  // optional string biddingType = 2;
  if (has_biddingtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->biddingtype().data(), this->biddingtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->biddingtype(), target);
  }

  // optional string biddingValue = 3;
  if (has_biddingvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->biddingvalue().data(), this->biddingvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->biddingvalue(), target);
  }

  // optional string currency = 4;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->currency(), target);
  }

  // repeated .com.rj.protos.mobile.MobileAdResponse.Creative creative = 5;
  for (int i = 0; i < this->creative_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->creative(i), target);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.Action action = 6;
  if (has_action()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->action(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.UUID uuid = 7;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->uuid(), target);
  }

  // optional string expectCpm = 8;
  if (has_expectcpm()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->expectcpm().data(), this->expectcpm().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->expectcpm(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdResponse_mobileBid::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string campaignId = 1;
    if (has_campaignid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->campaignid());
    }

    // optional string biddingType = 2;
    if (has_biddingtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->biddingtype());
    }

    // optional string biddingValue = 3;
    if (has_biddingvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->biddingvalue());
    }

    // optional string currency = 4;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->currency());
    }

    // optional .com.rj.protos.mobile.MobileAdResponse.Action action = 6;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->action());
    }

    // optional .com.rj.protos.mobile.MobileAdResponse.UUID uuid = 7;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uuid());
    }

    // optional string expectCpm = 8;
    if (has_expectcpm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->expectcpm());
    }

  }
  // repeated .com.rj.protos.mobile.MobileAdResponse.Creative creative = 5;
  total_size += 1 * this->creative_size();
  for (int i = 0; i < this->creative_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->creative(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdResponse_mobileBid::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdResponse_mobileBid* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdResponse_mobileBid*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdResponse_mobileBid::MergeFrom(const MobileAdResponse_mobileBid& from) {
  GOOGLE_CHECK_NE(&from, this);
  creative_.MergeFrom(from.creative_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_campaignid()) {
      set_campaignid(from.campaignid());
    }
    if (from.has_biddingtype()) {
      set_biddingtype(from.biddingtype());
    }
    if (from.has_biddingvalue()) {
      set_biddingvalue(from.biddingvalue());
    }
    if (from.has_currency()) {
      set_currency(from.currency());
    }
    if (from.has_action()) {
      mutable_action()->::com::rj::protos::mobile::MobileAdResponse_Action::MergeFrom(from.action());
    }
    if (from.has_uuid()) {
      mutable_uuid()->::com::rj::protos::mobile::MobileAdResponse_UUID::MergeFrom(from.uuid());
    }
    if (from.has_expectcpm()) {
      set_expectcpm(from.expectcpm());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdResponse_mobileBid::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdResponse_mobileBid::CopyFrom(const MobileAdResponse_mobileBid& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdResponse_mobileBid::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MobileAdResponse_mobileBid::Swap(MobileAdResponse_mobileBid* other) {
  if (other != this) {
    std::swap(campaignid_, other->campaignid_);
    std::swap(biddingtype_, other->biddingtype_);
    std::swap(biddingvalue_, other->biddingvalue_);
    std::swap(currency_, other->currency_);
    creative_.Swap(&other->creative_);
    std::swap(action_, other->action_);
    std::swap(uuid_, other->uuid_);
    std::swap(expectcpm_, other->expectcpm_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdResponse_mobileBid::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdResponse_mobileBid_descriptor_;
  metadata.reflection = MobileAdResponse_mobileBid_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MobileAdResponse_Creative::kCreativeIdFieldNumber;
const int MobileAdResponse_Creative::kAdmarkupFieldNumber;
const int MobileAdResponse_Creative::kWidthFieldNumber;
const int MobileAdResponse_Creative::kHeightFieldNumber;
const int MobileAdResponse_Creative::kMacroFieldNumber;
const int MobileAdResponse_Creative::kEventsFieldNumber;
const int MobileAdResponse_Creative::kMediaTypeIdFieldNumber;
const int MobileAdResponse_Creative::kMediaSubTypeIdFieldNumber;
const int MobileAdResponse_Creative::kUuidFieldNumber;
#endif  // !_MSC_VER

MobileAdResponse_Creative::MobileAdResponse_Creative()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdResponse_Creative::InitAsDefaultInstance() {
  uuid_ = const_cast< ::com::rj::protos::mobile::MobileAdResponse_UUID*>(&::com::rj::protos::mobile::MobileAdResponse_UUID::default_instance());
}

MobileAdResponse_Creative::MobileAdResponse_Creative(const MobileAdResponse_Creative& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdResponse_Creative::SharedCtor() {
  _cached_size_ = 0;
  creativeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  admarkup_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  width_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  height_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  macro_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mediatypeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mediasubtypeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  uuid_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdResponse_Creative::~MobileAdResponse_Creative() {
  SharedDtor();
}

void MobileAdResponse_Creative::SharedDtor() {
  if (creativeid_ != &::google::protobuf::internal::kEmptyString) {
    delete creativeid_;
  }
  if (admarkup_ != &::google::protobuf::internal::kEmptyString) {
    delete admarkup_;
  }
  if (width_ != &::google::protobuf::internal::kEmptyString) {
    delete width_;
  }
  if (height_ != &::google::protobuf::internal::kEmptyString) {
    delete height_;
  }
  if (macro_ != &::google::protobuf::internal::kEmptyString) {
    delete macro_;
  }
  if (mediatypeid_ != &::google::protobuf::internal::kEmptyString) {
    delete mediatypeid_;
  }
  if (mediasubtypeid_ != &::google::protobuf::internal::kEmptyString) {
    delete mediasubtypeid_;
  }
  if (this != default_instance_) {
    delete uuid_;
  }
}

void MobileAdResponse_Creative::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdResponse_Creative::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_Creative_descriptor_;
}

const MobileAdResponse_Creative& MobileAdResponse_Creative::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MobileAdResponse_2eproto();
  return *default_instance_;
}

MobileAdResponse_Creative* MobileAdResponse_Creative::default_instance_ = NULL;

MobileAdResponse_Creative* MobileAdResponse_Creative::New() const {
  return new MobileAdResponse_Creative;
}

void MobileAdResponse_Creative::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_creativeid()) {
      if (creativeid_ != &::google::protobuf::internal::kEmptyString) {
        creativeid_->clear();
      }
    }
    if (has_admarkup()) {
      if (admarkup_ != &::google::protobuf::internal::kEmptyString) {
        admarkup_->clear();
      }
    }
    if (has_width()) {
      if (width_ != &::google::protobuf::internal::kEmptyString) {
        width_->clear();
      }
    }
    if (has_height()) {
      if (height_ != &::google::protobuf::internal::kEmptyString) {
        height_->clear();
      }
    }
    if (has_macro()) {
      if (macro_ != &::google::protobuf::internal::kEmptyString) {
        macro_->clear();
      }
    }
    if (has_mediatypeid()) {
      if (mediatypeid_ != &::google::protobuf::internal::kEmptyString) {
        mediatypeid_->clear();
      }
    }
    if (has_mediasubtypeid()) {
      if (mediasubtypeid_ != &::google::protobuf::internal::kEmptyString) {
        mediasubtypeid_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_uuid()) {
      if (uuid_ != NULL) uuid_->::com::rj::protos::mobile::MobileAdResponse_UUID::Clear();
    }
  }
  events_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdResponse_Creative::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string creativeId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creativeid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->creativeid().data(), this->creativeid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_admarkup;
        break;
      }

      // optional string admarkup = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_admarkup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_admarkup()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->admarkup().data(), this->admarkup().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_width;
        break;
      }

      // optional string width = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_width:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_width()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->width().data(), this->width().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_height;
        break;
      }

      // optional string height = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_height:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_height()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->height().data(), this->height().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_macro;
        break;
      }

      // optional string macro = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_macro:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_macro()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->macro().data(), this->macro().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_events;
        break;
      }

      // repeated .com.rj.protos.mobile.MobileAdResponse.TrackingEvents events = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_events:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_events()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_events;
        if (input->ExpectTag(58)) goto parse_mediaTypeId;
        break;
      }

      // optional string mediaTypeId = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mediaTypeId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mediatypeid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mediatypeid().data(), this->mediatypeid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_mediaSubTypeId;
        break;
      }

      // optional string mediaSubTypeId = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mediaSubTypeId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mediasubtypeid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mediasubtypeid().data(), this->mediasubtypeid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_uuid;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdResponse.UUID uuid = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_uuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uuid()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdResponse_Creative::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string creativeId = 1;
  if (has_creativeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativeid().data(), this->creativeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->creativeid(), output);
  }

  // optional string admarkup = 2;
  if (has_admarkup()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->admarkup().data(), this->admarkup().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->admarkup(), output);
  }

  // optional string width = 3;
  if (has_width()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->width().data(), this->width().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->width(), output);
  }

  // optional string height = 4;
  if (has_height()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->height().data(), this->height().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->height(), output);
  }

  // optional string macro = 5;
  if (has_macro()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->macro().data(), this->macro().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->macro(), output);
  }

  // repeated .com.rj.protos.mobile.MobileAdResponse.TrackingEvents events = 6;
  for (int i = 0; i < this->events_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->events(i), output);
  }

  // optional string mediaTypeId = 7;
  if (has_mediatypeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mediatypeid().data(), this->mediatypeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->mediatypeid(), output);
  }

  // optional string mediaSubTypeId = 8;
  if (has_mediasubtypeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mediasubtypeid().data(), this->mediasubtypeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->mediasubtypeid(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.UUID uuid = 9;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdResponse_Creative::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string creativeId = 1;
  if (has_creativeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativeid().data(), this->creativeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->creativeid(), target);
  }

  // optional string admarkup = 2;
  if (has_admarkup()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->admarkup().data(), this->admarkup().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->admarkup(), target);
  }

  // optional string width = 3;
  if (has_width()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->width().data(), this->width().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->width(), target);
  }

  // optional string height = 4;
  if (has_height()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->height().data(), this->height().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->height(), target);
  }

  // optional string macro = 5;
  if (has_macro()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->macro().data(), this->macro().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->macro(), target);
  }

  // repeated .com.rj.protos.mobile.MobileAdResponse.TrackingEvents events = 6;
  for (int i = 0; i < this->events_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->events(i), target);
  }

  // optional string mediaTypeId = 7;
  if (has_mediatypeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mediatypeid().data(), this->mediatypeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->mediatypeid(), target);
  }

  // optional string mediaSubTypeId = 8;
  if (has_mediasubtypeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mediasubtypeid().data(), this->mediasubtypeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->mediasubtypeid(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.UUID uuid = 9;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdResponse_Creative::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string creativeId = 1;
    if (has_creativeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creativeid());
    }

    // optional string admarkup = 2;
    if (has_admarkup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->admarkup());
    }

    // optional string width = 3;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->width());
    }

    // optional string height = 4;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->height());
    }

    // optional string macro = 5;
    if (has_macro()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->macro());
    }

    // optional string mediaTypeId = 7;
    if (has_mediatypeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mediatypeid());
    }

    // optional string mediaSubTypeId = 8;
    if (has_mediasubtypeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mediasubtypeid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .com.rj.protos.mobile.MobileAdResponse.UUID uuid = 9;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uuid());
    }

  }
  // repeated .com.rj.protos.mobile.MobileAdResponse.TrackingEvents events = 6;
  total_size += 1 * this->events_size();
  for (int i = 0; i < this->events_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->events(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdResponse_Creative::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdResponse_Creative* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdResponse_Creative*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdResponse_Creative::MergeFrom(const MobileAdResponse_Creative& from) {
  GOOGLE_CHECK_NE(&from, this);
  events_.MergeFrom(from.events_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_creativeid()) {
      set_creativeid(from.creativeid());
    }
    if (from.has_admarkup()) {
      set_admarkup(from.admarkup());
    }
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_macro()) {
      set_macro(from.macro());
    }
    if (from.has_mediatypeid()) {
      set_mediatypeid(from.mediatypeid());
    }
    if (from.has_mediasubtypeid()) {
      set_mediasubtypeid(from.mediasubtypeid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_uuid()) {
      mutable_uuid()->::com::rj::protos::mobile::MobileAdResponse_UUID::MergeFrom(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdResponse_Creative::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdResponse_Creative::CopyFrom(const MobileAdResponse_Creative& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdResponse_Creative::IsInitialized() const {

  return true;
}

void MobileAdResponse_Creative::Swap(MobileAdResponse_Creative* other) {
  if (other != this) {
    std::swap(creativeid_, other->creativeid_);
    std::swap(admarkup_, other->admarkup_);
    std::swap(width_, other->width_);
    std::swap(height_, other->height_);
    std::swap(macro_, other->macro_);
    events_.Swap(&other->events_);
    std::swap(mediatypeid_, other->mediatypeid_);
    std::swap(mediasubtypeid_, other->mediasubtypeid_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdResponse_Creative::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdResponse_Creative_descriptor_;
  metadata.reflection = MobileAdResponse_Creative_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MobileAdResponse_Action::kNameFieldNumber;
const int MobileAdResponse_Action::kInAppFieldNumber;
const int MobileAdResponse_Action::kContentFieldNumber;
const int MobileAdResponse_Action::kActionTypeFieldNumber;
#endif  // !_MSC_VER

MobileAdResponse_Action::MobileAdResponse_Action()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdResponse_Action::InitAsDefaultInstance() {
}

MobileAdResponse_Action::MobileAdResponse_Action(const MobileAdResponse_Action& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdResponse_Action::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  inapp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  actiontype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdResponse_Action::~MobileAdResponse_Action() {
  SharedDtor();
}

void MobileAdResponse_Action::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (inapp_ != &::google::protobuf::internal::kEmptyString) {
    delete inapp_;
  }
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (actiontype_ != &::google::protobuf::internal::kEmptyString) {
    delete actiontype_;
  }
  if (this != default_instance_) {
  }
}

void MobileAdResponse_Action::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdResponse_Action::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_Action_descriptor_;
}

const MobileAdResponse_Action& MobileAdResponse_Action::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MobileAdResponse_2eproto();
  return *default_instance_;
}

MobileAdResponse_Action* MobileAdResponse_Action::default_instance_ = NULL;

MobileAdResponse_Action* MobileAdResponse_Action::New() const {
  return new MobileAdResponse_Action;
}

void MobileAdResponse_Action::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_inapp()) {
      if (inapp_ != &::google::protobuf::internal::kEmptyString) {
        inapp_->clear();
      }
    }
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::kEmptyString) {
        content_->clear();
      }
    }
    if (has_actiontype()) {
      if (actiontype_ != &::google::protobuf::internal::kEmptyString) {
        actiontype_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdResponse_Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_inApp;
        break;
      }

      // optional string inApp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_inApp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inapp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->inapp().data(), this->inapp().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_content;
        break;
      }

      // optional string content = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_actionType;
        break;
      }

      // optional string actionType = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_actionType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actiontype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->actiontype().data(), this->actiontype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdResponse_Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // optional string inApp = 2;
  if (has_inapp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->inapp().data(), this->inapp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->inapp(), output);
  }

  // optional string content = 3;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->content(), output);
  }

  // optional string actionType = 4;
  if (has_actiontype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->actiontype().data(), this->actiontype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->actiontype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdResponse_Action::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string inApp = 2;
  if (has_inapp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->inapp().data(), this->inapp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->inapp(), target);
  }

  // optional string content = 3;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->content(), target);
  }

  // optional string actionType = 4;
  if (has_actiontype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->actiontype().data(), this->actiontype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->actiontype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdResponse_Action::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string inApp = 2;
    if (has_inapp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->inapp());
    }

    // optional string content = 3;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // optional string actionType = 4;
    if (has_actiontype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->actiontype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdResponse_Action::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdResponse_Action* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdResponse_Action*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdResponse_Action::MergeFrom(const MobileAdResponse_Action& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_inapp()) {
      set_inapp(from.inapp());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
    if (from.has_actiontype()) {
      set_actiontype(from.actiontype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdResponse_Action::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdResponse_Action::CopyFrom(const MobileAdResponse_Action& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdResponse_Action::IsInitialized() const {

  return true;
}

void MobileAdResponse_Action::Swap(MobileAdResponse_Action* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(inapp_, other->inapp_);
    std::swap(content_, other->content_);
    std::swap(actiontype_, other->actiontype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdResponse_Action::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdResponse_Action_descriptor_;
  metadata.reflection = MobileAdResponse_Action_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MobileAdResponse_TrackingEvents::kEventFieldNumber;
const int MobileAdResponse_TrackingEvents::kTrackUrlFieldNumber;
#endif  // !_MSC_VER

MobileAdResponse_TrackingEvents::MobileAdResponse_TrackingEvents()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdResponse_TrackingEvents::InitAsDefaultInstance() {
}

MobileAdResponse_TrackingEvents::MobileAdResponse_TrackingEvents(const MobileAdResponse_TrackingEvents& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdResponse_TrackingEvents::SharedCtor() {
  _cached_size_ = 0;
  event_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  trackurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdResponse_TrackingEvents::~MobileAdResponse_TrackingEvents() {
  SharedDtor();
}

void MobileAdResponse_TrackingEvents::SharedDtor() {
  if (event_ != &::google::protobuf::internal::kEmptyString) {
    delete event_;
  }
  if (trackurl_ != &::google::protobuf::internal::kEmptyString) {
    delete trackurl_;
  }
  if (this != default_instance_) {
  }
}

void MobileAdResponse_TrackingEvents::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdResponse_TrackingEvents::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_TrackingEvents_descriptor_;
}

const MobileAdResponse_TrackingEvents& MobileAdResponse_TrackingEvents::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MobileAdResponse_2eproto();
  return *default_instance_;
}

MobileAdResponse_TrackingEvents* MobileAdResponse_TrackingEvents::default_instance_ = NULL;

MobileAdResponse_TrackingEvents* MobileAdResponse_TrackingEvents::New() const {
  return new MobileAdResponse_TrackingEvents;
}

void MobileAdResponse_TrackingEvents::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_event()) {
      if (event_ != &::google::protobuf::internal::kEmptyString) {
        event_->clear();
      }
    }
    if (has_trackurl()) {
      if (trackurl_ != &::google::protobuf::internal::kEmptyString) {
        trackurl_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdResponse_TrackingEvents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string event = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->event().data(), this->event().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_trackUrl;
        break;
      }

      // optional string trackUrl = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_trackUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trackurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->trackurl().data(), this->trackurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdResponse_TrackingEvents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string event = 1;
  if (has_event()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event().data(), this->event().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->event(), output);
  }

  // optional string trackUrl = 2;
  if (has_trackurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->trackurl().data(), this->trackurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->trackurl(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdResponse_TrackingEvents::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string event = 1;
  if (has_event()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event().data(), this->event().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->event(), target);
  }

  // optional string trackUrl = 2;
  if (has_trackurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->trackurl().data(), this->trackurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->trackurl(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdResponse_TrackingEvents::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string event = 1;
    if (has_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->event());
    }

    // optional string trackUrl = 2;
    if (has_trackurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->trackurl());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdResponse_TrackingEvents::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdResponse_TrackingEvents* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdResponse_TrackingEvents*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdResponse_TrackingEvents::MergeFrom(const MobileAdResponse_TrackingEvents& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_event()) {
      set_event(from.event());
    }
    if (from.has_trackurl()) {
      set_trackurl(from.trackurl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdResponse_TrackingEvents::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdResponse_TrackingEvents::CopyFrom(const MobileAdResponse_TrackingEvents& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdResponse_TrackingEvents::IsInitialized() const {

  return true;
}

void MobileAdResponse_TrackingEvents::Swap(MobileAdResponse_TrackingEvents* other) {
  if (other != this) {
    std::swap(event_, other->event_);
    std::swap(trackurl_, other->trackurl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdResponse_TrackingEvents::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdResponse_TrackingEvents_descriptor_;
  metadata.reflection = MobileAdResponse_TrackingEvents_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MobileAdResponse_UUID::kUuidTypeFieldNumber;
#endif  // !_MSC_VER

MobileAdResponse_UUID::MobileAdResponse_UUID()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdResponse_UUID::InitAsDefaultInstance() {
}

MobileAdResponse_UUID::MobileAdResponse_UUID(const MobileAdResponse_UUID& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdResponse_UUID::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdResponse_UUID::~MobileAdResponse_UUID() {
  SharedDtor();
}

void MobileAdResponse_UUID::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MobileAdResponse_UUID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdResponse_UUID::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_UUID_descriptor_;
}

const MobileAdResponse_UUID& MobileAdResponse_UUID::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MobileAdResponse_2eproto();
  return *default_instance_;
}

MobileAdResponse_UUID* MobileAdResponse_UUID::default_instance_ = NULL;

MobileAdResponse_UUID* MobileAdResponse_UUID::New() const {
  return new MobileAdResponse_UUID;
}

void MobileAdResponse_UUID::Clear() {
  uuidtype_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdResponse_UUID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.rj.protos.mobile.MobileAdResponse.UuidType uuidType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_uuidType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::rj::protos::mobile::MobileAdResponse_UuidType_IsValid(value)) {
            add_uuidtype(static_cast< ::com::rj::protos::mobile::MobileAdResponse_UuidType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(
                 input,
                 &::com::rj::protos::mobile::MobileAdResponse_UuidType_IsValid,
                 this->mutable_uuidtype())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_uuidType;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdResponse_UUID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .com.rj.protos.mobile.MobileAdResponse.UuidType uuidType = 1;
  for (int i = 0; i < this->uuidtype_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->uuidtype(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdResponse_UUID::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .com.rj.protos.mobile.MobileAdResponse.UuidType uuidType = 1;
  for (int i = 0; i < this->uuidtype_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->uuidtype(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdResponse_UUID::ByteSize() const {
  int total_size = 0;

  // repeated .com.rj.protos.mobile.MobileAdResponse.UuidType uuidType = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->uuidtype_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->uuidtype(i));
    }
    total_size += 1 * this->uuidtype_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdResponse_UUID::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdResponse_UUID* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdResponse_UUID*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdResponse_UUID::MergeFrom(const MobileAdResponse_UUID& from) {
  GOOGLE_CHECK_NE(&from, this);
  uuidtype_.MergeFrom(from.uuidtype_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdResponse_UUID::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdResponse_UUID::CopyFrom(const MobileAdResponse_UUID& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdResponse_UUID::IsInitialized() const {

  return true;
}

void MobileAdResponse_UUID::Swap(MobileAdResponse_UUID* other) {
  if (other != this) {
    uuidtype_.Swap(&other->uuidtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdResponse_UUID::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdResponse_UUID_descriptor_;
  metadata.reflection = MobileAdResponse_UUID_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MobileAdResponse::kIdFieldNumber;
const int MobileAdResponse::kBidderFieldNumber;
const int MobileAdResponse::kBidIdFieldNumber;
const int MobileAdResponse::kBidContentFieldNumber;
#endif  // !_MSC_VER

MobileAdResponse::MobileAdResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdResponse::InitAsDefaultInstance() {
  bidder_ = const_cast< ::com::rj::protos::mobile::MobileAdResponse_Bidder*>(&::com::rj::protos::mobile::MobileAdResponse_Bidder::default_instance());
}

MobileAdResponse::MobileAdResponse(const MobileAdResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdResponse::SharedCtor() {
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bidder_ = NULL;
  bidid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdResponse::~MobileAdResponse() {
  SharedDtor();
}

void MobileAdResponse::SharedDtor() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (bidid_ != &::google::protobuf::internal::kEmptyString) {
    delete bidid_;
  }
  if (this != default_instance_) {
    delete bidder_;
  }
}

void MobileAdResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_descriptor_;
}

const MobileAdResponse& MobileAdResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MobileAdResponse_2eproto();
  return *default_instance_;
}

MobileAdResponse* MobileAdResponse::default_instance_ = NULL;

MobileAdResponse* MobileAdResponse::New() const {
  return new MobileAdResponse;
}

void MobileAdResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
    if (has_bidder()) {
      if (bidder_ != NULL) bidder_->::com::rj::protos::mobile::MobileAdResponse_Bidder::Clear();
    }
    if (has_bidid()) {
      if (bidid_ != &::google::protobuf::internal::kEmptyString) {
        bidid_->clear();
      }
    }
  }
  bidcontent_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bidder;
        break;
      }

      // required .com.rj.protos.mobile.MobileAdResponse.Bidder bidder = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bidder:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bidder()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_bidId;
        break;
      }

      // required string bidId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bidId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bidid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bidid().data(), this->bidid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_bidContent;
        break;
      }

      // repeated .com.rj.protos.mobile.MobileAdResponse.mobileBid bidContent = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bidContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bidcontent()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_bidContent;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->id(), output);
  }

  // required .com.rj.protos.mobile.MobileAdResponse.Bidder bidder = 2;
  if (has_bidder()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bidder(), output);
  }

  // required string bidId = 3;
  if (has_bidid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bidid().data(), this->bidid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->bidid(), output);
  }

  // repeated .com.rj.protos.mobile.MobileAdResponse.mobileBid bidContent = 4;
  for (int i = 0; i < this->bidcontent_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->bidcontent(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required .com.rj.protos.mobile.MobileAdResponse.Bidder bidder = 2;
  if (has_bidder()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bidder(), target);
  }

  // required string bidId = 3;
  if (has_bidid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bidid().data(), this->bidid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->bidid(), target);
  }

  // repeated .com.rj.protos.mobile.MobileAdResponse.mobileBid bidContent = 4;
  for (int i = 0; i < this->bidcontent_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->bidcontent(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // required .com.rj.protos.mobile.MobileAdResponse.Bidder bidder = 2;
    if (has_bidder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bidder());
    }

    // required string bidId = 3;
    if (has_bidid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bidid());
    }

  }
  // repeated .com.rj.protos.mobile.MobileAdResponse.mobileBid bidContent = 4;
  total_size += 1 * this->bidcontent_size();
  for (int i = 0; i < this->bidcontent_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bidcontent(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdResponse::MergeFrom(const MobileAdResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  bidcontent_.MergeFrom(from.bidcontent_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_bidder()) {
      mutable_bidder()->::com::rj::protos::mobile::MobileAdResponse_Bidder::MergeFrom(from.bidder());
    }
    if (from.has_bidid()) {
      set_bidid(from.bidid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdResponse::CopyFrom(const MobileAdResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_bidder()) {
    if (!this->bidder().IsInitialized()) return false;
  }
  for (int i = 0; i < bidcontent_size(); i++) {
    if (!this->bidcontent(i).IsInitialized()) return false;
  }
  return true;
}

void MobileAdResponse::Swap(MobileAdResponse* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(bidder_, other->bidder_);
    std::swap(bidid_, other->bidid_);
    bidcontent_.Swap(&other->bidcontent_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdResponse_descriptor_;
  metadata.reflection = MobileAdResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mobile
}  // namespace protos
}  // namespace rj
}  // namespace com

// @@protoc_insertion_point(global_scope)
