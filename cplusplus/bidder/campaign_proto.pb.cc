// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: campaign_proto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "campaign_proto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace rj {
namespace targeting {
namespace protos {

namespace {

const ::google::protobuf::Descriptor* CampaignProtoEntity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CampaignProtoEntity_reflection_ = NULL;
const ::google::protobuf::Descriptor* CampaignProtoEntity_Action_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CampaignProtoEntity_Action_reflection_ = NULL;
const ::google::protobuf::Descriptor* CampaignProtoEntity_Creatives_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CampaignProtoEntity_Creatives_reflection_ = NULL;
const ::google::protobuf::Descriptor* CampaignProtoEntity_Creatives_Datas_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CampaignProtoEntity_Creatives_Datas_reflection_ = NULL;
const ::google::protobuf::Descriptor* CampaignProtoEntity_Targeting_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CampaignProtoEntity_Targeting_reflection_ = NULL;
const ::google::protobuf::Descriptor* CampaignProtoEntity_Targeting_Frequency_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CampaignProtoEntity_Targeting_Frequency_reflection_ = NULL;
const ::google::protobuf::Descriptor* CampaignProtoEntity_Targeting_AppCriteria_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CampaignProtoEntity_Targeting_AppCriteria_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_campaign_5fproto_2eproto() {
  protobuf_AddDesc_campaign_5fproto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "campaign_proto.proto");
  GOOGLE_CHECK(file != NULL);
  CampaignProtoEntity_descriptor_ = file->message_type(0);
  static const int CampaignProtoEntity_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity, currency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity, biddingtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity, biddingvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity, advertiserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity, pacingrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity, action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity, creatives_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity, targeting_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity, externalbuying_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity, expectcpm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity, thirdpartyexpectcpm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity, thirdpartybiddingtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity, thirdpartybiddingvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity, networkid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity, publishersource_),
  };
  CampaignProtoEntity_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CampaignProtoEntity_descriptor_,
      CampaignProtoEntity::default_instance_,
      CampaignProtoEntity_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CampaignProtoEntity));
  CampaignProtoEntity_Action_descriptor_ = CampaignProtoEntity_descriptor_->nested_type(0);
  static const int CampaignProtoEntity_Action_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Action, actiontypename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Action, inapp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Action, content_),
  };
  CampaignProtoEntity_Action_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CampaignProtoEntity_Action_descriptor_,
      CampaignProtoEntity_Action::default_instance_,
      CampaignProtoEntity_Action_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Action, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Action, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CampaignProtoEntity_Action));
  CampaignProtoEntity_Creatives_descriptor_ = CampaignProtoEntity_descriptor_->nested_type(1);
  static const int CampaignProtoEntity_Creatives_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Creatives, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Creatives, datas_),
  };
  CampaignProtoEntity_Creatives_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CampaignProtoEntity_Creatives_descriptor_,
      CampaignProtoEntity_Creatives::default_instance_,
      CampaignProtoEntity_Creatives_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Creatives, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Creatives, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CampaignProtoEntity_Creatives));
  CampaignProtoEntity_Creatives_Datas_descriptor_ = CampaignProtoEntity_Creatives_descriptor_->nested_type(0);
  static const int CampaignProtoEntity_Creatives_Datas_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Creatives_Datas, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Creatives_Datas, categoryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Creatives_Datas, channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Creatives_Datas, mediatypeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Creatives_Datas, mediasubtypeid_),
  };
  CampaignProtoEntity_Creatives_Datas_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CampaignProtoEntity_Creatives_Datas_descriptor_,
      CampaignProtoEntity_Creatives_Datas::default_instance_,
      CampaignProtoEntity_Creatives_Datas_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Creatives_Datas, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Creatives_Datas, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CampaignProtoEntity_Creatives_Datas));
  CampaignProtoEntity_Targeting_descriptor_ = CampaignProtoEntity_descriptor_->nested_type(2);
  static const int CampaignProtoEntity_Targeting_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting, supplytypemobileweb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting, supplytypemobileapp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting, devicetypetablet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting, devicetypephone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting, trafficquality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting, inventoryquality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting, frequency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting, directapps_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting, indirectapps_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting, session_),
  };
  CampaignProtoEntity_Targeting_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CampaignProtoEntity_Targeting_descriptor_,
      CampaignProtoEntity_Targeting::default_instance_,
      CampaignProtoEntity_Targeting_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CampaignProtoEntity_Targeting));
  CampaignProtoEntity_Targeting_Frequency_descriptor_ = CampaignProtoEntity_Targeting_descriptor_->nested_type(0);
  static const int CampaignProtoEntity_Targeting_Frequency_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting_Frequency, no_track_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting_Frequency, five_minutes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting_Frequency, day_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting_Frequency, week_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting_Frequency, month_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting_Frequency, lifetime_),
  };
  CampaignProtoEntity_Targeting_Frequency_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CampaignProtoEntity_Targeting_Frequency_descriptor_,
      CampaignProtoEntity_Targeting_Frequency::default_instance_,
      CampaignProtoEntity_Targeting_Frequency_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting_Frequency, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting_Frequency, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CampaignProtoEntity_Targeting_Frequency));
  CampaignProtoEntity_Targeting_AppCriteria_descriptor_ = CampaignProtoEntity_Targeting_descriptor_->nested_type(1);
  static const int CampaignProtoEntity_Targeting_AppCriteria_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting_AppCriteria, in_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting_AppCriteria, ids_),
  };
  CampaignProtoEntity_Targeting_AppCriteria_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CampaignProtoEntity_Targeting_AppCriteria_descriptor_,
      CampaignProtoEntity_Targeting_AppCriteria::default_instance_,
      CampaignProtoEntity_Targeting_AppCriteria_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting_AppCriteria, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampaignProtoEntity_Targeting_AppCriteria, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CampaignProtoEntity_Targeting_AppCriteria));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_campaign_5fproto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CampaignProtoEntity_descriptor_, &CampaignProtoEntity::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CampaignProtoEntity_Action_descriptor_, &CampaignProtoEntity_Action::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CampaignProtoEntity_Creatives_descriptor_, &CampaignProtoEntity_Creatives::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CampaignProtoEntity_Creatives_Datas_descriptor_, &CampaignProtoEntity_Creatives_Datas::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CampaignProtoEntity_Targeting_descriptor_, &CampaignProtoEntity_Targeting::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CampaignProtoEntity_Targeting_Frequency_descriptor_, &CampaignProtoEntity_Targeting_Frequency::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CampaignProtoEntity_Targeting_AppCriteria_descriptor_, &CampaignProtoEntity_Targeting_AppCriteria::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_campaign_5fproto_2eproto() {
  delete CampaignProtoEntity::default_instance_;
  delete CampaignProtoEntity_reflection_;
  delete CampaignProtoEntity_Action::default_instance_;
  delete CampaignProtoEntity_Action_reflection_;
  delete CampaignProtoEntity_Creatives::default_instance_;
  delete CampaignProtoEntity_Creatives_reflection_;
  delete CampaignProtoEntity_Creatives_Datas::default_instance_;
  delete CampaignProtoEntity_Creatives_Datas_reflection_;
  delete CampaignProtoEntity_Targeting::default_instance_;
  delete CampaignProtoEntity_Targeting_reflection_;
  delete CampaignProtoEntity_Targeting_Frequency::default_instance_;
  delete CampaignProtoEntity_Targeting_Frequency_reflection_;
  delete CampaignProtoEntity_Targeting_AppCriteria::default_instance_;
  delete CampaignProtoEntity_Targeting_AppCriteria_reflection_;
}

void protobuf_AddDesc_campaign_5fproto_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024campaign_proto.proto\022\027com.rj.targeting"
    ".protos\"\225\013\n\023CampaignProtoEntity\022\n\n\002id\030\001 "
    "\001(\t\022\020\n\010currency\030\002 \001(\t\022\r\n\005state\030\003 \001(\t\022\023\n\013"
    "biddingType\030\004 \001(\t\022\024\n\014biddingValue\030\005 \001(\t\022"
    "\024\n\014advertiserId\030\006 \001(\t\022\022\n\npacingRate\030\007 \001("
    "\001\022C\n\006action\030\010 \001(\01323.com.rj.targeting.pro"
    "tos.CampaignProtoEntity.Action\022I\n\tcreati"
    "ves\030\t \003(\01326.com.rj.targeting.protos.Camp"
    "aignProtoEntity.Creatives\022I\n\ttargeting\030\n"
    " \001(\01326.com.rj.targeting.protos.CampaignP"
    "rotoEntity.Targeting\022\026\n\016externalBuying\030\013"
    " \001(\010\022\021\n\texpectCpm\030\014 \001(\t\022\033\n\023thirdPartyExp"
    "ectCpm\030\r \001(\t\022\035\n\025thirdPartyBiddingType\030\016 "
    "\001(\t\022\036\n\026thirdPartyBiddingValue\030\017 \001(\t\022\021\n\tn"
    "etworkId\030\020 \001(\r\022\027\n\017publisherSource\030\021 \001(\t\032"
    "@\n\006Action\022\026\n\016actionTypeName\030\001 \001(\t\022\r\n\005inA"
    "pp\030\002 \001(\t\022\017\n\007content\030\003 \001(\t\032\315\001\n\tCreatives\022"
    "\014\n\004size\030\001 \001(\t\022K\n\005datas\030\002 \003(\0132<.com.rj.ta"
    "rgeting.protos.CampaignProtoEntity.Creat"
    "ives.Datas\032e\n\005Datas\022\n\n\002id\030\001 \001(\t\022\022\n\ncateg"
    "oryId\030\002 \001(\t\022\017\n\007channel\030\003 \001(\t\022\023\n\013mediaTyp"
    "eId\030\004 \001(\t\022\026\n\016mediaSubTypeId\030\005 \001(\t\032\333\004\n\tTa"
    "rgeting\022\033\n\023supplyTypeMobileWeb\030\001 \001(\t\022\033\n\023"
    "supplyTypeMobileApp\030\002 \001(\t\022\030\n\020deviceTypeT"
    "ablet\030\003 \001(\t\022\027\n\017deviceTypePhone\030\004 \001(\t\022\026\n\016"
    "trafficQuality\030\005 \001(\r\022\030\n\020inventoryQuality"
    "\030\006 \001(\t\022S\n\tfrequency\030\007 \001(\0132@.com.rj.targe"
    "ting.protos.CampaignProtoEntity.Targetin"
    "g.Frequency\022V\n\ndirectApps\030\010 \001(\0132B.com.rj"
    ".targeting.protos.CampaignProtoEntity.Ta"
    "rgeting.AppCriteria\022X\n\014inDirectApps\030\t \001("
    "\0132B.com.rj.targeting.protos.CampaignProt"
    "oEntity.Targeting.AppCriteria\022\017\n\007session"
    "\030\n \001(\r\032o\n\tFrequency\022\020\n\010no_track\030\001 \001(\r\022\024\n"
    "\014five_minutes\030\002 \001(\r\022\013\n\003day\030\003 \001(\r\022\014\n\004week"
    "\030\004 \001(\r\022\r\n\005month\030\005 \001(\r\022\020\n\010lifetime\030\006 \001(\r\032"
    "&\n\013AppCriteria\022\n\n\002in\030\001 \001(\010\022\013\n\003ids\030\002 \003(\r", 1479);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "campaign_proto.proto", &protobuf_RegisterTypes);
  CampaignProtoEntity::default_instance_ = new CampaignProtoEntity();
  CampaignProtoEntity_Action::default_instance_ = new CampaignProtoEntity_Action();
  CampaignProtoEntity_Creatives::default_instance_ = new CampaignProtoEntity_Creatives();
  CampaignProtoEntity_Creatives_Datas::default_instance_ = new CampaignProtoEntity_Creatives_Datas();
  CampaignProtoEntity_Targeting::default_instance_ = new CampaignProtoEntity_Targeting();
  CampaignProtoEntity_Targeting_Frequency::default_instance_ = new CampaignProtoEntity_Targeting_Frequency();
  CampaignProtoEntity_Targeting_AppCriteria::default_instance_ = new CampaignProtoEntity_Targeting_AppCriteria();
  CampaignProtoEntity::default_instance_->InitAsDefaultInstance();
  CampaignProtoEntity_Action::default_instance_->InitAsDefaultInstance();
  CampaignProtoEntity_Creatives::default_instance_->InitAsDefaultInstance();
  CampaignProtoEntity_Creatives_Datas::default_instance_->InitAsDefaultInstance();
  CampaignProtoEntity_Targeting::default_instance_->InitAsDefaultInstance();
  CampaignProtoEntity_Targeting_Frequency::default_instance_->InitAsDefaultInstance();
  CampaignProtoEntity_Targeting_AppCriteria::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_campaign_5fproto_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_campaign_5fproto_2eproto {
  StaticDescriptorInitializer_campaign_5fproto_2eproto() {
    protobuf_AddDesc_campaign_5fproto_2eproto();
  }
} static_descriptor_initializer_campaign_5fproto_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int CampaignProtoEntity_Action::kActionTypeNameFieldNumber;
const int CampaignProtoEntity_Action::kInAppFieldNumber;
const int CampaignProtoEntity_Action::kContentFieldNumber;
#endif  // !_MSC_VER

CampaignProtoEntity_Action::CampaignProtoEntity_Action()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CampaignProtoEntity_Action::InitAsDefaultInstance() {
}

CampaignProtoEntity_Action::CampaignProtoEntity_Action(const CampaignProtoEntity_Action& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CampaignProtoEntity_Action::SharedCtor() {
  _cached_size_ = 0;
  actiontypename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  inapp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CampaignProtoEntity_Action::~CampaignProtoEntity_Action() {
  SharedDtor();
}

void CampaignProtoEntity_Action::SharedDtor() {
  if (actiontypename_ != &::google::protobuf::internal::kEmptyString) {
    delete actiontypename_;
  }
  if (inapp_ != &::google::protobuf::internal::kEmptyString) {
    delete inapp_;
  }
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void CampaignProtoEntity_Action::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CampaignProtoEntity_Action::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CampaignProtoEntity_Action_descriptor_;
}

const CampaignProtoEntity_Action& CampaignProtoEntity_Action::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_campaign_5fproto_2eproto();
  return *default_instance_;
}

CampaignProtoEntity_Action* CampaignProtoEntity_Action::default_instance_ = NULL;

CampaignProtoEntity_Action* CampaignProtoEntity_Action::New() const {
  return new CampaignProtoEntity_Action;
}

void CampaignProtoEntity_Action::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_actiontypename()) {
      if (actiontypename_ != &::google::protobuf::internal::kEmptyString) {
        actiontypename_->clear();
      }
    }
    if (has_inapp()) {
      if (inapp_ != &::google::protobuf::internal::kEmptyString) {
        inapp_->clear();
      }
    }
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::kEmptyString) {
        content_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CampaignProtoEntity_Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string actionTypeName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actiontypename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->actiontypename().data(), this->actiontypename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_inApp;
        break;
      }

      // optional string inApp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_inApp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inapp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->inapp().data(), this->inapp().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_content;
        break;
      }

      // optional string content = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CampaignProtoEntity_Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string actionTypeName = 1;
  if (has_actiontypename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->actiontypename().data(), this->actiontypename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->actiontypename(), output);
  }

  // optional string inApp = 2;
  if (has_inapp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->inapp().data(), this->inapp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->inapp(), output);
  }

  // optional string content = 3;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->content(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CampaignProtoEntity_Action::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string actionTypeName = 1;
  if (has_actiontypename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->actiontypename().data(), this->actiontypename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->actiontypename(), target);
  }

  // optional string inApp = 2;
  if (has_inapp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->inapp().data(), this->inapp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->inapp(), target);
  }

  // optional string content = 3;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->content(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CampaignProtoEntity_Action::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string actionTypeName = 1;
    if (has_actiontypename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->actiontypename());
    }

    // optional string inApp = 2;
    if (has_inapp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->inapp());
    }

    // optional string content = 3;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CampaignProtoEntity_Action::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CampaignProtoEntity_Action* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CampaignProtoEntity_Action*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CampaignProtoEntity_Action::MergeFrom(const CampaignProtoEntity_Action& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_actiontypename()) {
      set_actiontypename(from.actiontypename());
    }
    if (from.has_inapp()) {
      set_inapp(from.inapp());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CampaignProtoEntity_Action::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CampaignProtoEntity_Action::CopyFrom(const CampaignProtoEntity_Action& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CampaignProtoEntity_Action::IsInitialized() const {

  return true;
}

void CampaignProtoEntity_Action::Swap(CampaignProtoEntity_Action* other) {
  if (other != this) {
    std::swap(actiontypename_, other->actiontypename_);
    std::swap(inapp_, other->inapp_);
    std::swap(content_, other->content_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CampaignProtoEntity_Action::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CampaignProtoEntity_Action_descriptor_;
  metadata.reflection = CampaignProtoEntity_Action_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CampaignProtoEntity_Creatives_Datas::kIdFieldNumber;
const int CampaignProtoEntity_Creatives_Datas::kCategoryIdFieldNumber;
const int CampaignProtoEntity_Creatives_Datas::kChannelFieldNumber;
const int CampaignProtoEntity_Creatives_Datas::kMediaTypeIdFieldNumber;
const int CampaignProtoEntity_Creatives_Datas::kMediaSubTypeIdFieldNumber;
#endif  // !_MSC_VER

CampaignProtoEntity_Creatives_Datas::CampaignProtoEntity_Creatives_Datas()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CampaignProtoEntity_Creatives_Datas::InitAsDefaultInstance() {
}

CampaignProtoEntity_Creatives_Datas::CampaignProtoEntity_Creatives_Datas(const CampaignProtoEntity_Creatives_Datas& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CampaignProtoEntity_Creatives_Datas::SharedCtor() {
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  categoryid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  channel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mediatypeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mediasubtypeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CampaignProtoEntity_Creatives_Datas::~CampaignProtoEntity_Creatives_Datas() {
  SharedDtor();
}

void CampaignProtoEntity_Creatives_Datas::SharedDtor() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (categoryid_ != &::google::protobuf::internal::kEmptyString) {
    delete categoryid_;
  }
  if (channel_ != &::google::protobuf::internal::kEmptyString) {
    delete channel_;
  }
  if (mediatypeid_ != &::google::protobuf::internal::kEmptyString) {
    delete mediatypeid_;
  }
  if (mediasubtypeid_ != &::google::protobuf::internal::kEmptyString) {
    delete mediasubtypeid_;
  }
  if (this != default_instance_) {
  }
}

void CampaignProtoEntity_Creatives_Datas::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CampaignProtoEntity_Creatives_Datas::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CampaignProtoEntity_Creatives_Datas_descriptor_;
}

const CampaignProtoEntity_Creatives_Datas& CampaignProtoEntity_Creatives_Datas::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_campaign_5fproto_2eproto();
  return *default_instance_;
}

CampaignProtoEntity_Creatives_Datas* CampaignProtoEntity_Creatives_Datas::default_instance_ = NULL;

CampaignProtoEntity_Creatives_Datas* CampaignProtoEntity_Creatives_Datas::New() const {
  return new CampaignProtoEntity_Creatives_Datas;
}

void CampaignProtoEntity_Creatives_Datas::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
    if (has_categoryid()) {
      if (categoryid_ != &::google::protobuf::internal::kEmptyString) {
        categoryid_->clear();
      }
    }
    if (has_channel()) {
      if (channel_ != &::google::protobuf::internal::kEmptyString) {
        channel_->clear();
      }
    }
    if (has_mediatypeid()) {
      if (mediatypeid_ != &::google::protobuf::internal::kEmptyString) {
        mediatypeid_->clear();
      }
    }
    if (has_mediasubtypeid()) {
      if (mediasubtypeid_ != &::google::protobuf::internal::kEmptyString) {
        mediasubtypeid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CampaignProtoEntity_Creatives_Datas::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_categoryId;
        break;
      }

      // optional string categoryId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_categoryId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_categoryid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->categoryid().data(), this->categoryid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_channel;
        break;
      }

      // optional string channel = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_channel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->channel().data(), this->channel().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_mediaTypeId;
        break;
      }

      // optional string mediaTypeId = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mediaTypeId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mediatypeid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mediatypeid().data(), this->mediatypeid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_mediaSubTypeId;
        break;
      }

      // optional string mediaSubTypeId = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mediaSubTypeId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mediasubtypeid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mediasubtypeid().data(), this->mediasubtypeid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CampaignProtoEntity_Creatives_Datas::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->id(), output);
  }

  // optional string categoryId = 2;
  if (has_categoryid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->categoryid().data(), this->categoryid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->categoryid(), output);
  }

  // optional string channel = 3;
  if (has_channel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->channel().data(), this->channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->channel(), output);
  }

  // optional string mediaTypeId = 4;
  if (has_mediatypeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mediatypeid().data(), this->mediatypeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->mediatypeid(), output);
  }

  // optional string mediaSubTypeId = 5;
  if (has_mediasubtypeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mediasubtypeid().data(), this->mediasubtypeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->mediasubtypeid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CampaignProtoEntity_Creatives_Datas::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string categoryId = 2;
  if (has_categoryid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->categoryid().data(), this->categoryid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->categoryid(), target);
  }

  // optional string channel = 3;
  if (has_channel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->channel().data(), this->channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->channel(), target);
  }

  // optional string mediaTypeId = 4;
  if (has_mediatypeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mediatypeid().data(), this->mediatypeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mediatypeid(), target);
  }

  // optional string mediaSubTypeId = 5;
  if (has_mediasubtypeid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mediasubtypeid().data(), this->mediasubtypeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->mediasubtypeid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CampaignProtoEntity_Creatives_Datas::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string categoryId = 2;
    if (has_categoryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->categoryid());
    }

    // optional string channel = 3;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel());
    }

    // optional string mediaTypeId = 4;
    if (has_mediatypeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mediatypeid());
    }

    // optional string mediaSubTypeId = 5;
    if (has_mediasubtypeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mediasubtypeid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CampaignProtoEntity_Creatives_Datas::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CampaignProtoEntity_Creatives_Datas* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CampaignProtoEntity_Creatives_Datas*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CampaignProtoEntity_Creatives_Datas::MergeFrom(const CampaignProtoEntity_Creatives_Datas& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_categoryid()) {
      set_categoryid(from.categoryid());
    }
    if (from.has_channel()) {
      set_channel(from.channel());
    }
    if (from.has_mediatypeid()) {
      set_mediatypeid(from.mediatypeid());
    }
    if (from.has_mediasubtypeid()) {
      set_mediasubtypeid(from.mediasubtypeid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CampaignProtoEntity_Creatives_Datas::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CampaignProtoEntity_Creatives_Datas::CopyFrom(const CampaignProtoEntity_Creatives_Datas& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CampaignProtoEntity_Creatives_Datas::IsInitialized() const {

  return true;
}

void CampaignProtoEntity_Creatives_Datas::Swap(CampaignProtoEntity_Creatives_Datas* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(categoryid_, other->categoryid_);
    std::swap(channel_, other->channel_);
    std::swap(mediatypeid_, other->mediatypeid_);
    std::swap(mediasubtypeid_, other->mediasubtypeid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CampaignProtoEntity_Creatives_Datas::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CampaignProtoEntity_Creatives_Datas_descriptor_;
  metadata.reflection = CampaignProtoEntity_Creatives_Datas_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CampaignProtoEntity_Creatives::kSizeFieldNumber;
const int CampaignProtoEntity_Creatives::kDatasFieldNumber;
#endif  // !_MSC_VER

CampaignProtoEntity_Creatives::CampaignProtoEntity_Creatives()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CampaignProtoEntity_Creatives::InitAsDefaultInstance() {
}

CampaignProtoEntity_Creatives::CampaignProtoEntity_Creatives(const CampaignProtoEntity_Creatives& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CampaignProtoEntity_Creatives::SharedCtor() {
  _cached_size_ = 0;
  size_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CampaignProtoEntity_Creatives::~CampaignProtoEntity_Creatives() {
  SharedDtor();
}

void CampaignProtoEntity_Creatives::SharedDtor() {
  if (size_ != &::google::protobuf::internal::kEmptyString) {
    delete size_;
  }
  if (this != default_instance_) {
  }
}

void CampaignProtoEntity_Creatives::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CampaignProtoEntity_Creatives::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CampaignProtoEntity_Creatives_descriptor_;
}

const CampaignProtoEntity_Creatives& CampaignProtoEntity_Creatives::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_campaign_5fproto_2eproto();
  return *default_instance_;
}

CampaignProtoEntity_Creatives* CampaignProtoEntity_Creatives::default_instance_ = NULL;

CampaignProtoEntity_Creatives* CampaignProtoEntity_Creatives::New() const {
  return new CampaignProtoEntity_Creatives;
}

void CampaignProtoEntity_Creatives::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_size()) {
      if (size_ != &::google::protobuf::internal::kEmptyString) {
        size_->clear();
      }
    }
  }
  datas_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CampaignProtoEntity_Creatives::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string size = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_size()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->size().data(), this->size().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_datas;
        break;
      }

      // repeated .com.rj.targeting.protos.CampaignProtoEntity.Creatives.Datas datas = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_datas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datas()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_datas;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CampaignProtoEntity_Creatives::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string size = 1;
  if (has_size()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->size().data(), this->size().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->size(), output);
  }

  // repeated .com.rj.targeting.protos.CampaignProtoEntity.Creatives.Datas datas = 2;
  for (int i = 0; i < this->datas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->datas(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CampaignProtoEntity_Creatives::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string size = 1;
  if (has_size()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->size().data(), this->size().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->size(), target);
  }

  // repeated .com.rj.targeting.protos.CampaignProtoEntity.Creatives.Datas datas = 2;
  for (int i = 0; i < this->datas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->datas(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CampaignProtoEntity_Creatives::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string size = 1;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->size());
    }

  }
  // repeated .com.rj.targeting.protos.CampaignProtoEntity.Creatives.Datas datas = 2;
  total_size += 1 * this->datas_size();
  for (int i = 0; i < this->datas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datas(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CampaignProtoEntity_Creatives::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CampaignProtoEntity_Creatives* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CampaignProtoEntity_Creatives*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CampaignProtoEntity_Creatives::MergeFrom(const CampaignProtoEntity_Creatives& from) {
  GOOGLE_CHECK_NE(&from, this);
  datas_.MergeFrom(from.datas_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_size()) {
      set_size(from.size());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CampaignProtoEntity_Creatives::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CampaignProtoEntity_Creatives::CopyFrom(const CampaignProtoEntity_Creatives& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CampaignProtoEntity_Creatives::IsInitialized() const {

  return true;
}

void CampaignProtoEntity_Creatives::Swap(CampaignProtoEntity_Creatives* other) {
  if (other != this) {
    std::swap(size_, other->size_);
    datas_.Swap(&other->datas_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CampaignProtoEntity_Creatives::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CampaignProtoEntity_Creatives_descriptor_;
  metadata.reflection = CampaignProtoEntity_Creatives_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CampaignProtoEntity_Targeting_Frequency::kNoTrackFieldNumber;
const int CampaignProtoEntity_Targeting_Frequency::kFiveMinutesFieldNumber;
const int CampaignProtoEntity_Targeting_Frequency::kDayFieldNumber;
const int CampaignProtoEntity_Targeting_Frequency::kWeekFieldNumber;
const int CampaignProtoEntity_Targeting_Frequency::kMonthFieldNumber;
const int CampaignProtoEntity_Targeting_Frequency::kLifetimeFieldNumber;
#endif  // !_MSC_VER

CampaignProtoEntity_Targeting_Frequency::CampaignProtoEntity_Targeting_Frequency()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CampaignProtoEntity_Targeting_Frequency::InitAsDefaultInstance() {
}

CampaignProtoEntity_Targeting_Frequency::CampaignProtoEntity_Targeting_Frequency(const CampaignProtoEntity_Targeting_Frequency& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CampaignProtoEntity_Targeting_Frequency::SharedCtor() {
  _cached_size_ = 0;
  no_track_ = 0u;
  five_minutes_ = 0u;
  day_ = 0u;
  week_ = 0u;
  month_ = 0u;
  lifetime_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CampaignProtoEntity_Targeting_Frequency::~CampaignProtoEntity_Targeting_Frequency() {
  SharedDtor();
}

void CampaignProtoEntity_Targeting_Frequency::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CampaignProtoEntity_Targeting_Frequency::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CampaignProtoEntity_Targeting_Frequency::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CampaignProtoEntity_Targeting_Frequency_descriptor_;
}

const CampaignProtoEntity_Targeting_Frequency& CampaignProtoEntity_Targeting_Frequency::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_campaign_5fproto_2eproto();
  return *default_instance_;
}

CampaignProtoEntity_Targeting_Frequency* CampaignProtoEntity_Targeting_Frequency::default_instance_ = NULL;

CampaignProtoEntity_Targeting_Frequency* CampaignProtoEntity_Targeting_Frequency::New() const {
  return new CampaignProtoEntity_Targeting_Frequency;
}

void CampaignProtoEntity_Targeting_Frequency::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    no_track_ = 0u;
    five_minutes_ = 0u;
    day_ = 0u;
    week_ = 0u;
    month_ = 0u;
    lifetime_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CampaignProtoEntity_Targeting_Frequency::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 no_track = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &no_track_)));
          set_has_no_track();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_five_minutes;
        break;
      }

      // optional uint32 five_minutes = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_five_minutes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &five_minutes_)));
          set_has_five_minutes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_day;
        break;
      }

      // optional uint32 day = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_day:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &day_)));
          set_has_day();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_week;
        break;
      }

      // optional uint32 week = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_week:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &week_)));
          set_has_week();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_month;
        break;
      }

      // optional uint32 month = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_month:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &month_)));
          set_has_month();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_lifetime;
        break;
      }

      // optional uint32 lifetime = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lifetime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lifetime_)));
          set_has_lifetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CampaignProtoEntity_Targeting_Frequency::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 no_track = 1;
  if (has_no_track()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->no_track(), output);
  }

  // optional uint32 five_minutes = 2;
  if (has_five_minutes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->five_minutes(), output);
  }

  // optional uint32 day = 3;
  if (has_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->day(), output);
  }

  // optional uint32 week = 4;
  if (has_week()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->week(), output);
  }

  // optional uint32 month = 5;
  if (has_month()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->month(), output);
  }

  // optional uint32 lifetime = 6;
  if (has_lifetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->lifetime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CampaignProtoEntity_Targeting_Frequency::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 no_track = 1;
  if (has_no_track()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->no_track(), target);
  }

  // optional uint32 five_minutes = 2;
  if (has_five_minutes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->five_minutes(), target);
  }

  // optional uint32 day = 3;
  if (has_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->day(), target);
  }

  // optional uint32 week = 4;
  if (has_week()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->week(), target);
  }

  // optional uint32 month = 5;
  if (has_month()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->month(), target);
  }

  // optional uint32 lifetime = 6;
  if (has_lifetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->lifetime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CampaignProtoEntity_Targeting_Frequency::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 no_track = 1;
    if (has_no_track()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->no_track());
    }

    // optional uint32 five_minutes = 2;
    if (has_five_minutes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->five_minutes());
    }

    // optional uint32 day = 3;
    if (has_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->day());
    }

    // optional uint32 week = 4;
    if (has_week()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->week());
    }

    // optional uint32 month = 5;
    if (has_month()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->month());
    }

    // optional uint32 lifetime = 6;
    if (has_lifetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lifetime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CampaignProtoEntity_Targeting_Frequency::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CampaignProtoEntity_Targeting_Frequency* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CampaignProtoEntity_Targeting_Frequency*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CampaignProtoEntity_Targeting_Frequency::MergeFrom(const CampaignProtoEntity_Targeting_Frequency& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_no_track()) {
      set_no_track(from.no_track());
    }
    if (from.has_five_minutes()) {
      set_five_minutes(from.five_minutes());
    }
    if (from.has_day()) {
      set_day(from.day());
    }
    if (from.has_week()) {
      set_week(from.week());
    }
    if (from.has_month()) {
      set_month(from.month());
    }
    if (from.has_lifetime()) {
      set_lifetime(from.lifetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CampaignProtoEntity_Targeting_Frequency::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CampaignProtoEntity_Targeting_Frequency::CopyFrom(const CampaignProtoEntity_Targeting_Frequency& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CampaignProtoEntity_Targeting_Frequency::IsInitialized() const {

  return true;
}

void CampaignProtoEntity_Targeting_Frequency::Swap(CampaignProtoEntity_Targeting_Frequency* other) {
  if (other != this) {
    std::swap(no_track_, other->no_track_);
    std::swap(five_minutes_, other->five_minutes_);
    std::swap(day_, other->day_);
    std::swap(week_, other->week_);
    std::swap(month_, other->month_);
    std::swap(lifetime_, other->lifetime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CampaignProtoEntity_Targeting_Frequency::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CampaignProtoEntity_Targeting_Frequency_descriptor_;
  metadata.reflection = CampaignProtoEntity_Targeting_Frequency_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CampaignProtoEntity_Targeting_AppCriteria::kInFieldNumber;
const int CampaignProtoEntity_Targeting_AppCriteria::kIdsFieldNumber;
#endif  // !_MSC_VER

CampaignProtoEntity_Targeting_AppCriteria::CampaignProtoEntity_Targeting_AppCriteria()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CampaignProtoEntity_Targeting_AppCriteria::InitAsDefaultInstance() {
}

CampaignProtoEntity_Targeting_AppCriteria::CampaignProtoEntity_Targeting_AppCriteria(const CampaignProtoEntity_Targeting_AppCriteria& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CampaignProtoEntity_Targeting_AppCriteria::SharedCtor() {
  _cached_size_ = 0;
  in_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CampaignProtoEntity_Targeting_AppCriteria::~CampaignProtoEntity_Targeting_AppCriteria() {
  SharedDtor();
}

void CampaignProtoEntity_Targeting_AppCriteria::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CampaignProtoEntity_Targeting_AppCriteria::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CampaignProtoEntity_Targeting_AppCriteria::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CampaignProtoEntity_Targeting_AppCriteria_descriptor_;
}

const CampaignProtoEntity_Targeting_AppCriteria& CampaignProtoEntity_Targeting_AppCriteria::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_campaign_5fproto_2eproto();
  return *default_instance_;
}

CampaignProtoEntity_Targeting_AppCriteria* CampaignProtoEntity_Targeting_AppCriteria::default_instance_ = NULL;

CampaignProtoEntity_Targeting_AppCriteria* CampaignProtoEntity_Targeting_AppCriteria::New() const {
  return new CampaignProtoEntity_Targeting_AppCriteria;
}

void CampaignProtoEntity_Targeting_AppCriteria::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    in_ = false;
  }
  ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CampaignProtoEntity_Targeting_AppCriteria::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool in = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &in_)));
          set_has_in();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ids;
        break;
      }

      // repeated uint32 ids = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_ids())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ids())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ids;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CampaignProtoEntity_Targeting_AppCriteria::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bool in = 1;
  if (has_in()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->in(), output);
  }

  // repeated uint32 ids = 2;
  for (int i = 0; i < this->ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->ids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CampaignProtoEntity_Targeting_AppCriteria::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool in = 1;
  if (has_in()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->in(), target);
  }

  // repeated uint32 ids = 2;
  for (int i = 0; i < this->ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->ids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CampaignProtoEntity_Targeting_AppCriteria::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool in = 1;
    if (has_in()) {
      total_size += 1 + 1;
    }

  }
  // repeated uint32 ids = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->ids(i));
    }
    total_size += 1 * this->ids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CampaignProtoEntity_Targeting_AppCriteria::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CampaignProtoEntity_Targeting_AppCriteria* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CampaignProtoEntity_Targeting_AppCriteria*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CampaignProtoEntity_Targeting_AppCriteria::MergeFrom(const CampaignProtoEntity_Targeting_AppCriteria& from) {
  GOOGLE_CHECK_NE(&from, this);
  ids_.MergeFrom(from.ids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_in()) {
      set_in(from.in());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CampaignProtoEntity_Targeting_AppCriteria::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CampaignProtoEntity_Targeting_AppCriteria::CopyFrom(const CampaignProtoEntity_Targeting_AppCriteria& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CampaignProtoEntity_Targeting_AppCriteria::IsInitialized() const {

  return true;
}

void CampaignProtoEntity_Targeting_AppCriteria::Swap(CampaignProtoEntity_Targeting_AppCriteria* other) {
  if (other != this) {
    std::swap(in_, other->in_);
    ids_.Swap(&other->ids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CampaignProtoEntity_Targeting_AppCriteria::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CampaignProtoEntity_Targeting_AppCriteria_descriptor_;
  metadata.reflection = CampaignProtoEntity_Targeting_AppCriteria_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CampaignProtoEntity_Targeting::kSupplyTypeMobileWebFieldNumber;
const int CampaignProtoEntity_Targeting::kSupplyTypeMobileAppFieldNumber;
const int CampaignProtoEntity_Targeting::kDeviceTypeTabletFieldNumber;
const int CampaignProtoEntity_Targeting::kDeviceTypePhoneFieldNumber;
const int CampaignProtoEntity_Targeting::kTrafficQualityFieldNumber;
const int CampaignProtoEntity_Targeting::kInventoryQualityFieldNumber;
const int CampaignProtoEntity_Targeting::kFrequencyFieldNumber;
const int CampaignProtoEntity_Targeting::kDirectAppsFieldNumber;
const int CampaignProtoEntity_Targeting::kInDirectAppsFieldNumber;
const int CampaignProtoEntity_Targeting::kSessionFieldNumber;
#endif  // !_MSC_VER

CampaignProtoEntity_Targeting::CampaignProtoEntity_Targeting()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CampaignProtoEntity_Targeting::InitAsDefaultInstance() {
  frequency_ = const_cast< ::com::rj::targeting::protos::CampaignProtoEntity_Targeting_Frequency*>(&::com::rj::targeting::protos::CampaignProtoEntity_Targeting_Frequency::default_instance());
  directapps_ = const_cast< ::com::rj::targeting::protos::CampaignProtoEntity_Targeting_AppCriteria*>(&::com::rj::targeting::protos::CampaignProtoEntity_Targeting_AppCriteria::default_instance());
  indirectapps_ = const_cast< ::com::rj::targeting::protos::CampaignProtoEntity_Targeting_AppCriteria*>(&::com::rj::targeting::protos::CampaignProtoEntity_Targeting_AppCriteria::default_instance());
}

CampaignProtoEntity_Targeting::CampaignProtoEntity_Targeting(const CampaignProtoEntity_Targeting& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CampaignProtoEntity_Targeting::SharedCtor() {
  _cached_size_ = 0;
  supplytypemobileweb_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  supplytypemobileapp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  devicetypetablet_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  devicetypephone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  trafficquality_ = 0u;
  inventoryquality_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  frequency_ = NULL;
  directapps_ = NULL;
  indirectapps_ = NULL;
  session_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CampaignProtoEntity_Targeting::~CampaignProtoEntity_Targeting() {
  SharedDtor();
}

void CampaignProtoEntity_Targeting::SharedDtor() {
  if (supplytypemobileweb_ != &::google::protobuf::internal::kEmptyString) {
    delete supplytypemobileweb_;
  }
  if (supplytypemobileapp_ != &::google::protobuf::internal::kEmptyString) {
    delete supplytypemobileapp_;
  }
  if (devicetypetablet_ != &::google::protobuf::internal::kEmptyString) {
    delete devicetypetablet_;
  }
  if (devicetypephone_ != &::google::protobuf::internal::kEmptyString) {
    delete devicetypephone_;
  }
  if (inventoryquality_ != &::google::protobuf::internal::kEmptyString) {
    delete inventoryquality_;
  }
  if (this != default_instance_) {
    delete frequency_;
    delete directapps_;
    delete indirectapps_;
  }
}

void CampaignProtoEntity_Targeting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CampaignProtoEntity_Targeting::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CampaignProtoEntity_Targeting_descriptor_;
}

const CampaignProtoEntity_Targeting& CampaignProtoEntity_Targeting::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_campaign_5fproto_2eproto();
  return *default_instance_;
}

CampaignProtoEntity_Targeting* CampaignProtoEntity_Targeting::default_instance_ = NULL;

CampaignProtoEntity_Targeting* CampaignProtoEntity_Targeting::New() const {
  return new CampaignProtoEntity_Targeting;
}

void CampaignProtoEntity_Targeting::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_supplytypemobileweb()) {
      if (supplytypemobileweb_ != &::google::protobuf::internal::kEmptyString) {
        supplytypemobileweb_->clear();
      }
    }
    if (has_supplytypemobileapp()) {
      if (supplytypemobileapp_ != &::google::protobuf::internal::kEmptyString) {
        supplytypemobileapp_->clear();
      }
    }
    if (has_devicetypetablet()) {
      if (devicetypetablet_ != &::google::protobuf::internal::kEmptyString) {
        devicetypetablet_->clear();
      }
    }
    if (has_devicetypephone()) {
      if (devicetypephone_ != &::google::protobuf::internal::kEmptyString) {
        devicetypephone_->clear();
      }
    }
    trafficquality_ = 0u;
    if (has_inventoryquality()) {
      if (inventoryquality_ != &::google::protobuf::internal::kEmptyString) {
        inventoryquality_->clear();
      }
    }
    if (has_frequency()) {
      if (frequency_ != NULL) frequency_->::com::rj::targeting::protos::CampaignProtoEntity_Targeting_Frequency::Clear();
    }
    if (has_directapps()) {
      if (directapps_ != NULL) directapps_->::com::rj::targeting::protos::CampaignProtoEntity_Targeting_AppCriteria::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_indirectapps()) {
      if (indirectapps_ != NULL) indirectapps_->::com::rj::targeting::protos::CampaignProtoEntity_Targeting_AppCriteria::Clear();
    }
    session_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CampaignProtoEntity_Targeting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string supplyTypeMobileWeb = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_supplytypemobileweb()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->supplytypemobileweb().data(), this->supplytypemobileweb().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_supplyTypeMobileApp;
        break;
      }

      // optional string supplyTypeMobileApp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_supplyTypeMobileApp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_supplytypemobileapp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->supplytypemobileapp().data(), this->supplytypemobileapp().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_deviceTypeTablet;
        break;
      }

      // optional string deviceTypeTablet = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_deviceTypeTablet:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devicetypetablet()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->devicetypetablet().data(), this->devicetypetablet().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_deviceTypePhone;
        break;
      }

      // optional string deviceTypePhone = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_deviceTypePhone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devicetypephone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->devicetypephone().data(), this->devicetypephone().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_trafficQuality;
        break;
      }

      // optional uint32 trafficQuality = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_trafficQuality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trafficquality_)));
          set_has_trafficquality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_inventoryQuality;
        break;
      }

      // optional string inventoryQuality = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_inventoryQuality:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inventoryquality()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->inventoryquality().data(), this->inventoryquality().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_frequency;
        break;
      }

      // optional .com.rj.targeting.protos.CampaignProtoEntity.Targeting.Frequency frequency = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_frequency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_frequency()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_directApps;
        break;
      }

      // optional .com.rj.targeting.protos.CampaignProtoEntity.Targeting.AppCriteria directApps = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_directApps:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_directapps()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_inDirectApps;
        break;
      }

      // optional .com.rj.targeting.protos.CampaignProtoEntity.Targeting.AppCriteria inDirectApps = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_inDirectApps:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_indirectapps()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_session;
        break;
      }

      // optional uint32 session = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_session:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &session_)));
          set_has_session();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CampaignProtoEntity_Targeting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string supplyTypeMobileWeb = 1;
  if (has_supplytypemobileweb()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->supplytypemobileweb().data(), this->supplytypemobileweb().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->supplytypemobileweb(), output);
  }

  // optional string supplyTypeMobileApp = 2;
  if (has_supplytypemobileapp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->supplytypemobileapp().data(), this->supplytypemobileapp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->supplytypemobileapp(), output);
  }

  // optional string deviceTypeTablet = 3;
  if (has_devicetypetablet()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->devicetypetablet().data(), this->devicetypetablet().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->devicetypetablet(), output);
  }

  // optional string deviceTypePhone = 4;
  if (has_devicetypephone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->devicetypephone().data(), this->devicetypephone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->devicetypephone(), output);
  }

  // optional uint32 trafficQuality = 5;
  if (has_trafficquality()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->trafficquality(), output);
  }

  // optional string inventoryQuality = 6;
  if (has_inventoryquality()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->inventoryquality().data(), this->inventoryquality().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->inventoryquality(), output);
  }

  // optional .com.rj.targeting.protos.CampaignProtoEntity.Targeting.Frequency frequency = 7;
  if (has_frequency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->frequency(), output);
  }

  // optional .com.rj.targeting.protos.CampaignProtoEntity.Targeting.AppCriteria directApps = 8;
  if (has_directapps()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->directapps(), output);
  }

  // optional .com.rj.targeting.protos.CampaignProtoEntity.Targeting.AppCriteria inDirectApps = 9;
  if (has_indirectapps()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->indirectapps(), output);
  }

  // optional uint32 session = 10;
  if (has_session()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->session(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CampaignProtoEntity_Targeting::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string supplyTypeMobileWeb = 1;
  if (has_supplytypemobileweb()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->supplytypemobileweb().data(), this->supplytypemobileweb().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->supplytypemobileweb(), target);
  }

  // optional string supplyTypeMobileApp = 2;
  if (has_supplytypemobileapp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->supplytypemobileapp().data(), this->supplytypemobileapp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->supplytypemobileapp(), target);
  }

  // optional string deviceTypeTablet = 3;
  if (has_devicetypetablet()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->devicetypetablet().data(), this->devicetypetablet().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->devicetypetablet(), target);
  }

  // optional string deviceTypePhone = 4;
  if (has_devicetypephone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->devicetypephone().data(), this->devicetypephone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->devicetypephone(), target);
  }

  // optional uint32 trafficQuality = 5;
  if (has_trafficquality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->trafficquality(), target);
  }

  // optional string inventoryQuality = 6;
  if (has_inventoryquality()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->inventoryquality().data(), this->inventoryquality().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->inventoryquality(), target);
  }

  // optional .com.rj.targeting.protos.CampaignProtoEntity.Targeting.Frequency frequency = 7;
  if (has_frequency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->frequency(), target);
  }

  // optional .com.rj.targeting.protos.CampaignProtoEntity.Targeting.AppCriteria directApps = 8;
  if (has_directapps()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->directapps(), target);
  }

  // optional .com.rj.targeting.protos.CampaignProtoEntity.Targeting.AppCriteria inDirectApps = 9;
  if (has_indirectapps()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->indirectapps(), target);
  }

  // optional uint32 session = 10;
  if (has_session()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->session(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CampaignProtoEntity_Targeting::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string supplyTypeMobileWeb = 1;
    if (has_supplytypemobileweb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->supplytypemobileweb());
    }

    // optional string supplyTypeMobileApp = 2;
    if (has_supplytypemobileapp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->supplytypemobileapp());
    }

    // optional string deviceTypeTablet = 3;
    if (has_devicetypetablet()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devicetypetablet());
    }

    // optional string deviceTypePhone = 4;
    if (has_devicetypephone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devicetypephone());
    }

    // optional uint32 trafficQuality = 5;
    if (has_trafficquality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->trafficquality());
    }

    // optional string inventoryQuality = 6;
    if (has_inventoryquality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->inventoryquality());
    }

    // optional .com.rj.targeting.protos.CampaignProtoEntity.Targeting.Frequency frequency = 7;
    if (has_frequency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->frequency());
    }

    // optional .com.rj.targeting.protos.CampaignProtoEntity.Targeting.AppCriteria directApps = 8;
    if (has_directapps()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->directapps());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .com.rj.targeting.protos.CampaignProtoEntity.Targeting.AppCriteria inDirectApps = 9;
    if (has_indirectapps()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->indirectapps());
    }

    // optional uint32 session = 10;
    if (has_session()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->session());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CampaignProtoEntity_Targeting::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CampaignProtoEntity_Targeting* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CampaignProtoEntity_Targeting*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CampaignProtoEntity_Targeting::MergeFrom(const CampaignProtoEntity_Targeting& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_supplytypemobileweb()) {
      set_supplytypemobileweb(from.supplytypemobileweb());
    }
    if (from.has_supplytypemobileapp()) {
      set_supplytypemobileapp(from.supplytypemobileapp());
    }
    if (from.has_devicetypetablet()) {
      set_devicetypetablet(from.devicetypetablet());
    }
    if (from.has_devicetypephone()) {
      set_devicetypephone(from.devicetypephone());
    }
    if (from.has_trafficquality()) {
      set_trafficquality(from.trafficquality());
    }
    if (from.has_inventoryquality()) {
      set_inventoryquality(from.inventoryquality());
    }
    if (from.has_frequency()) {
      mutable_frequency()->::com::rj::targeting::protos::CampaignProtoEntity_Targeting_Frequency::MergeFrom(from.frequency());
    }
    if (from.has_directapps()) {
      mutable_directapps()->::com::rj::targeting::protos::CampaignProtoEntity_Targeting_AppCriteria::MergeFrom(from.directapps());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_indirectapps()) {
      mutable_indirectapps()->::com::rj::targeting::protos::CampaignProtoEntity_Targeting_AppCriteria::MergeFrom(from.indirectapps());
    }
    if (from.has_session()) {
      set_session(from.session());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CampaignProtoEntity_Targeting::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CampaignProtoEntity_Targeting::CopyFrom(const CampaignProtoEntity_Targeting& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CampaignProtoEntity_Targeting::IsInitialized() const {

  return true;
}

void CampaignProtoEntity_Targeting::Swap(CampaignProtoEntity_Targeting* other) {
  if (other != this) {
    std::swap(supplytypemobileweb_, other->supplytypemobileweb_);
    std::swap(supplytypemobileapp_, other->supplytypemobileapp_);
    std::swap(devicetypetablet_, other->devicetypetablet_);
    std::swap(devicetypephone_, other->devicetypephone_);
    std::swap(trafficquality_, other->trafficquality_);
    std::swap(inventoryquality_, other->inventoryquality_);
    std::swap(frequency_, other->frequency_);
    std::swap(directapps_, other->directapps_);
    std::swap(indirectapps_, other->indirectapps_);
    std::swap(session_, other->session_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CampaignProtoEntity_Targeting::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CampaignProtoEntity_Targeting_descriptor_;
  metadata.reflection = CampaignProtoEntity_Targeting_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int CampaignProtoEntity::kIdFieldNumber;
const int CampaignProtoEntity::kCurrencyFieldNumber;
const int CampaignProtoEntity::kStateFieldNumber;
const int CampaignProtoEntity::kBiddingTypeFieldNumber;
const int CampaignProtoEntity::kBiddingValueFieldNumber;
const int CampaignProtoEntity::kAdvertiserIdFieldNumber;
const int CampaignProtoEntity::kPacingRateFieldNumber;
const int CampaignProtoEntity::kActionFieldNumber;
const int CampaignProtoEntity::kCreativesFieldNumber;
const int CampaignProtoEntity::kTargetingFieldNumber;
const int CampaignProtoEntity::kExternalBuyingFieldNumber;
const int CampaignProtoEntity::kExpectCpmFieldNumber;
const int CampaignProtoEntity::kThirdPartyExpectCpmFieldNumber;
const int CampaignProtoEntity::kThirdPartyBiddingTypeFieldNumber;
const int CampaignProtoEntity::kThirdPartyBiddingValueFieldNumber;
const int CampaignProtoEntity::kNetworkIdFieldNumber;
const int CampaignProtoEntity::kPublisherSourceFieldNumber;
#endif  // !_MSC_VER

CampaignProtoEntity::CampaignProtoEntity()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CampaignProtoEntity::InitAsDefaultInstance() {
  action_ = const_cast< ::com::rj::targeting::protos::CampaignProtoEntity_Action*>(&::com::rj::targeting::protos::CampaignProtoEntity_Action::default_instance());
  targeting_ = const_cast< ::com::rj::targeting::protos::CampaignProtoEntity_Targeting*>(&::com::rj::targeting::protos::CampaignProtoEntity_Targeting::default_instance());
}

CampaignProtoEntity::CampaignProtoEntity(const CampaignProtoEntity& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CampaignProtoEntity::SharedCtor() {
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  currency_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  state_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  biddingtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  biddingvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  advertiserid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  pacingrate_ = 0;
  action_ = NULL;
  targeting_ = NULL;
  externalbuying_ = false;
  expectcpm_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  thirdpartyexpectcpm_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  thirdpartybiddingtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  thirdpartybiddingvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  networkid_ = 0u;
  publishersource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CampaignProtoEntity::~CampaignProtoEntity() {
  SharedDtor();
}

void CampaignProtoEntity::SharedDtor() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (currency_ != &::google::protobuf::internal::kEmptyString) {
    delete currency_;
  }
  if (state_ != &::google::protobuf::internal::kEmptyString) {
    delete state_;
  }
  if (biddingtype_ != &::google::protobuf::internal::kEmptyString) {
    delete biddingtype_;
  }
  if (biddingvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete biddingvalue_;
  }
  if (advertiserid_ != &::google::protobuf::internal::kEmptyString) {
    delete advertiserid_;
  }
  if (expectcpm_ != &::google::protobuf::internal::kEmptyString) {
    delete expectcpm_;
  }
  if (thirdpartyexpectcpm_ != &::google::protobuf::internal::kEmptyString) {
    delete thirdpartyexpectcpm_;
  }
  if (thirdpartybiddingtype_ != &::google::protobuf::internal::kEmptyString) {
    delete thirdpartybiddingtype_;
  }
  if (thirdpartybiddingvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete thirdpartybiddingvalue_;
  }
  if (publishersource_ != &::google::protobuf::internal::kEmptyString) {
    delete publishersource_;
  }
  if (this != default_instance_) {
    delete action_;
    delete targeting_;
  }
}

void CampaignProtoEntity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CampaignProtoEntity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CampaignProtoEntity_descriptor_;
}

const CampaignProtoEntity& CampaignProtoEntity::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_campaign_5fproto_2eproto();
  return *default_instance_;
}

CampaignProtoEntity* CampaignProtoEntity::default_instance_ = NULL;

CampaignProtoEntity* CampaignProtoEntity::New() const {
  return new CampaignProtoEntity;
}

void CampaignProtoEntity::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
    if (has_currency()) {
      if (currency_ != &::google::protobuf::internal::kEmptyString) {
        currency_->clear();
      }
    }
    if (has_state()) {
      if (state_ != &::google::protobuf::internal::kEmptyString) {
        state_->clear();
      }
    }
    if (has_biddingtype()) {
      if (biddingtype_ != &::google::protobuf::internal::kEmptyString) {
        biddingtype_->clear();
      }
    }
    if (has_biddingvalue()) {
      if (biddingvalue_ != &::google::protobuf::internal::kEmptyString) {
        biddingvalue_->clear();
      }
    }
    if (has_advertiserid()) {
      if (advertiserid_ != &::google::protobuf::internal::kEmptyString) {
        advertiserid_->clear();
      }
    }
    pacingrate_ = 0;
    if (has_action()) {
      if (action_ != NULL) action_->::com::rj::targeting::protos::CampaignProtoEntity_Action::Clear();
    }
  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (has_targeting()) {
      if (targeting_ != NULL) targeting_->::com::rj::targeting::protos::CampaignProtoEntity_Targeting::Clear();
    }
    externalbuying_ = false;
    if (has_expectcpm()) {
      if (expectcpm_ != &::google::protobuf::internal::kEmptyString) {
        expectcpm_->clear();
      }
    }
    if (has_thirdpartyexpectcpm()) {
      if (thirdpartyexpectcpm_ != &::google::protobuf::internal::kEmptyString) {
        thirdpartyexpectcpm_->clear();
      }
    }
    if (has_thirdpartybiddingtype()) {
      if (thirdpartybiddingtype_ != &::google::protobuf::internal::kEmptyString) {
        thirdpartybiddingtype_->clear();
      }
    }
    if (has_thirdpartybiddingvalue()) {
      if (thirdpartybiddingvalue_ != &::google::protobuf::internal::kEmptyString) {
        thirdpartybiddingvalue_->clear();
      }
    }
    networkid_ = 0u;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_publishersource()) {
      if (publishersource_ != &::google::protobuf::internal::kEmptyString) {
        publishersource_->clear();
      }
    }
  }
  creatives_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CampaignProtoEntity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_currency;
        break;
      }

      // optional string currency = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_currency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->currency().data(), this->currency().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_state;
        break;
      }

      // optional string state = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->state().data(), this->state().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_biddingType;
        break;
      }

      // optional string biddingType = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_biddingType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_biddingtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->biddingtype().data(), this->biddingtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_biddingValue;
        break;
      }

      // optional string biddingValue = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_biddingValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_biddingvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->biddingvalue().data(), this->biddingvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_advertiserId;
        break;
      }

      // optional string advertiserId = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_advertiserId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_advertiserid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->advertiserid().data(), this->advertiserid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(57)) goto parse_pacingRate;
        break;
      }

      // optional double pacingRate = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_pacingRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pacingrate_)));
          set_has_pacingrate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_action;
        break;
      }

      // optional .com.rj.targeting.protos.CampaignProtoEntity.Action action = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_action:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_action()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_creatives;
        break;
      }

      // repeated .com.rj.targeting.protos.CampaignProtoEntity.Creatives creatives = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_creatives:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_creatives()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_creatives;
        if (input->ExpectTag(82)) goto parse_targeting;
        break;
      }

      // optional .com.rj.targeting.protos.CampaignProtoEntity.Targeting targeting = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_targeting:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_targeting()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_externalBuying;
        break;
      }

      // optional bool externalBuying = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_externalBuying:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &externalbuying_)));
          set_has_externalbuying();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_expectCpm;
        break;
      }

      // optional string expectCpm = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_expectCpm:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expectcpm()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->expectcpm().data(), this->expectcpm().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_thirdPartyExpectCpm;
        break;
      }

      // optional string thirdPartyExpectCpm = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_thirdPartyExpectCpm:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thirdpartyexpectcpm()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->thirdpartyexpectcpm().data(), this->thirdpartyexpectcpm().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_thirdPartyBiddingType;
        break;
      }

      // optional string thirdPartyBiddingType = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_thirdPartyBiddingType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thirdpartybiddingtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->thirdpartybiddingtype().data(), this->thirdpartybiddingtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_thirdPartyBiddingValue;
        break;
      }

      // optional string thirdPartyBiddingValue = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_thirdPartyBiddingValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thirdpartybiddingvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->thirdpartybiddingvalue().data(), this->thirdpartybiddingvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_networkId;
        break;
      }

      // optional uint32 networkId = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_networkId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &networkid_)));
          set_has_networkid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_publisherSource;
        break;
      }

      // optional string publisherSource = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_publisherSource:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_publishersource()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->publishersource().data(), this->publishersource().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CampaignProtoEntity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->id(), output);
  }

  // optional string currency = 2;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->currency(), output);
  }

  // optional string state = 3;
  if (has_state()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->state(), output);
  }

  // optional string biddingType = 4;
  if (has_biddingtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->biddingtype().data(), this->biddingtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->biddingtype(), output);
  }

  // optional string biddingValue = 5;
  if (has_biddingvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->biddingvalue().data(), this->biddingvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->biddingvalue(), output);
  }

  // optional string advertiserId = 6;
  if (has_advertiserid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->advertiserid().data(), this->advertiserid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->advertiserid(), output);
  }

  // optional double pacingRate = 7;
  if (has_pacingrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->pacingrate(), output);
  }

  // optional .com.rj.targeting.protos.CampaignProtoEntity.Action action = 8;
  if (has_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->action(), output);
  }

  // repeated .com.rj.targeting.protos.CampaignProtoEntity.Creatives creatives = 9;
  for (int i = 0; i < this->creatives_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->creatives(i), output);
  }

  // optional .com.rj.targeting.protos.CampaignProtoEntity.Targeting targeting = 10;
  if (has_targeting()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->targeting(), output);
  }

  // optional bool externalBuying = 11;
  if (has_externalbuying()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->externalbuying(), output);
  }

  // optional string expectCpm = 12;
  if (has_expectcpm()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->expectcpm().data(), this->expectcpm().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->expectcpm(), output);
  }

  // optional string thirdPartyExpectCpm = 13;
  if (has_thirdpartyexpectcpm()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->thirdpartyexpectcpm().data(), this->thirdpartyexpectcpm().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->thirdpartyexpectcpm(), output);
  }

  // optional string thirdPartyBiddingType = 14;
  if (has_thirdpartybiddingtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->thirdpartybiddingtype().data(), this->thirdpartybiddingtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->thirdpartybiddingtype(), output);
  }

  // optional string thirdPartyBiddingValue = 15;
  if (has_thirdpartybiddingvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->thirdpartybiddingvalue().data(), this->thirdpartybiddingvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->thirdpartybiddingvalue(), output);
  }

  // optional uint32 networkId = 16;
  if (has_networkid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->networkid(), output);
  }

  // optional string publisherSource = 17;
  if (has_publishersource()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->publishersource().data(), this->publishersource().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->publishersource(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CampaignProtoEntity::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string currency = 2;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->currency(), target);
  }

  // optional string state = 3;
  if (has_state()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->state(), target);
  }

  // optional string biddingType = 4;
  if (has_biddingtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->biddingtype().data(), this->biddingtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->biddingtype(), target);
  }

  // optional string biddingValue = 5;
  if (has_biddingvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->biddingvalue().data(), this->biddingvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->biddingvalue(), target);
  }

  // optional string advertiserId = 6;
  if (has_advertiserid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->advertiserid().data(), this->advertiserid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->advertiserid(), target);
  }

  // optional double pacingRate = 7;
  if (has_pacingrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->pacingrate(), target);
  }

  // optional .com.rj.targeting.protos.CampaignProtoEntity.Action action = 8;
  if (has_action()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->action(), target);
  }

  // repeated .com.rj.targeting.protos.CampaignProtoEntity.Creatives creatives = 9;
  for (int i = 0; i < this->creatives_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->creatives(i), target);
  }

  // optional .com.rj.targeting.protos.CampaignProtoEntity.Targeting targeting = 10;
  if (has_targeting()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->targeting(), target);
  }

  // optional bool externalBuying = 11;
  if (has_externalbuying()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->externalbuying(), target);
  }

  // optional string expectCpm = 12;
  if (has_expectcpm()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->expectcpm().data(), this->expectcpm().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->expectcpm(), target);
  }

  // optional string thirdPartyExpectCpm = 13;
  if (has_thirdpartyexpectcpm()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->thirdpartyexpectcpm().data(), this->thirdpartyexpectcpm().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->thirdpartyexpectcpm(), target);
  }

  // optional string thirdPartyBiddingType = 14;
  if (has_thirdpartybiddingtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->thirdpartybiddingtype().data(), this->thirdpartybiddingtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->thirdpartybiddingtype(), target);
  }

  // optional string thirdPartyBiddingValue = 15;
  if (has_thirdpartybiddingvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->thirdpartybiddingvalue().data(), this->thirdpartybiddingvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->thirdpartybiddingvalue(), target);
  }

  // optional uint32 networkId = 16;
  if (has_networkid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->networkid(), target);
  }

  // optional string publisherSource = 17;
  if (has_publishersource()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->publishersource().data(), this->publishersource().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->publishersource(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CampaignProtoEntity::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string currency = 2;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->currency());
    }

    // optional string state = 3;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->state());
    }

    // optional string biddingType = 4;
    if (has_biddingtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->biddingtype());
    }

    // optional string biddingValue = 5;
    if (has_biddingvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->biddingvalue());
    }

    // optional string advertiserId = 6;
    if (has_advertiserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->advertiserid());
    }

    // optional double pacingRate = 7;
    if (has_pacingrate()) {
      total_size += 1 + 8;
    }

    // optional .com.rj.targeting.protos.CampaignProtoEntity.Action action = 8;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->action());
    }

  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    // optional .com.rj.targeting.protos.CampaignProtoEntity.Targeting targeting = 10;
    if (has_targeting()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->targeting());
    }

    // optional bool externalBuying = 11;
    if (has_externalbuying()) {
      total_size += 1 + 1;
    }

    // optional string expectCpm = 12;
    if (has_expectcpm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->expectcpm());
    }

    // optional string thirdPartyExpectCpm = 13;
    if (has_thirdpartyexpectcpm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->thirdpartyexpectcpm());
    }

    // optional string thirdPartyBiddingType = 14;
    if (has_thirdpartybiddingtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->thirdpartybiddingtype());
    }

    // optional string thirdPartyBiddingValue = 15;
    if (has_thirdpartybiddingvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->thirdpartybiddingvalue());
    }

    // optional uint32 networkId = 16;
    if (has_networkid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->networkid());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string publisherSource = 17;
    if (has_publishersource()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->publishersource());
    }

  }
  // repeated .com.rj.targeting.protos.CampaignProtoEntity.Creatives creatives = 9;
  total_size += 1 * this->creatives_size();
  for (int i = 0; i < this->creatives_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->creatives(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CampaignProtoEntity::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CampaignProtoEntity* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CampaignProtoEntity*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CampaignProtoEntity::MergeFrom(const CampaignProtoEntity& from) {
  GOOGLE_CHECK_NE(&from, this);
  creatives_.MergeFrom(from.creatives_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_currency()) {
      set_currency(from.currency());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_biddingtype()) {
      set_biddingtype(from.biddingtype());
    }
    if (from.has_biddingvalue()) {
      set_biddingvalue(from.biddingvalue());
    }
    if (from.has_advertiserid()) {
      set_advertiserid(from.advertiserid());
    }
    if (from.has_pacingrate()) {
      set_pacingrate(from.pacingrate());
    }
    if (from.has_action()) {
      mutable_action()->::com::rj::targeting::protos::CampaignProtoEntity_Action::MergeFrom(from.action());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_targeting()) {
      mutable_targeting()->::com::rj::targeting::protos::CampaignProtoEntity_Targeting::MergeFrom(from.targeting());
    }
    if (from.has_externalbuying()) {
      set_externalbuying(from.externalbuying());
    }
    if (from.has_expectcpm()) {
      set_expectcpm(from.expectcpm());
    }
    if (from.has_thirdpartyexpectcpm()) {
      set_thirdpartyexpectcpm(from.thirdpartyexpectcpm());
    }
    if (from.has_thirdpartybiddingtype()) {
      set_thirdpartybiddingtype(from.thirdpartybiddingtype());
    }
    if (from.has_thirdpartybiddingvalue()) {
      set_thirdpartybiddingvalue(from.thirdpartybiddingvalue());
    }
    if (from.has_networkid()) {
      set_networkid(from.networkid());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_publishersource()) {
      set_publishersource(from.publishersource());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CampaignProtoEntity::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CampaignProtoEntity::CopyFrom(const CampaignProtoEntity& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CampaignProtoEntity::IsInitialized() const {

  return true;
}

void CampaignProtoEntity::Swap(CampaignProtoEntity* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(currency_, other->currency_);
    std::swap(state_, other->state_);
    std::swap(biddingtype_, other->biddingtype_);
    std::swap(biddingvalue_, other->biddingvalue_);
    std::swap(advertiserid_, other->advertiserid_);
    std::swap(pacingrate_, other->pacingrate_);
    std::swap(action_, other->action_);
    creatives_.Swap(&other->creatives_);
    std::swap(targeting_, other->targeting_);
    std::swap(externalbuying_, other->externalbuying_);
    std::swap(expectcpm_, other->expectcpm_);
    std::swap(thirdpartyexpectcpm_, other->thirdpartyexpectcpm_);
    std::swap(thirdpartybiddingtype_, other->thirdpartybiddingtype_);
    std::swap(thirdpartybiddingvalue_, other->thirdpartybiddingvalue_);
    std::swap(networkid_, other->networkid_);
    std::swap(publishersource_, other->publishersource_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CampaignProtoEntity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CampaignProtoEntity_descriptor_;
  metadata.reflection = CampaignProtoEntity_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace targeting
}  // namespace rj
}  // namespace com

// @@protoc_insertion_point(global_scope)
