// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: innerProto.proto

#ifndef PROTOBUF_innerProto_2eproto__INCLUDED
#define PROTOBUF_innerProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace rj {
namespace targeting {
namespace protos {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_innerProto_2eproto();
void protobuf_AssignDesc_innerProto_2eproto();
void protobuf_ShutdownFile_innerProto_2eproto();

class innerProtoEntity;

enum innerProtoEntity_msgType {
  innerProtoEntity_msgType_msg_redisAddr = 0
};
bool innerProtoEntity_msgType_IsValid(int value);
const innerProtoEntity_msgType innerProtoEntity_msgType_msgType_MIN = innerProtoEntity_msgType_msg_redisAddr;
const innerProtoEntity_msgType innerProtoEntity_msgType_msgType_MAX = innerProtoEntity_msgType_msg_redisAddr;
const int innerProtoEntity_msgType_msgType_ARRAYSIZE = innerProtoEntity_msgType_msgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* innerProtoEntity_msgType_descriptor();
inline const ::std::string& innerProtoEntity_msgType_Name(innerProtoEntity_msgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    innerProtoEntity_msgType_descriptor(), value);
}
inline bool innerProtoEntity_msgType_Parse(
    const ::std::string& name, innerProtoEntity_msgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<innerProtoEntity_msgType>(
    innerProtoEntity_msgType_descriptor(), name, value);
}
// ===================================================================

class innerProtoEntity : public ::google::protobuf::Message {
 public:
  innerProtoEntity();
  virtual ~innerProtoEntity();

  innerProtoEntity(const innerProtoEntity& from);

  inline innerProtoEntity& operator=(const innerProtoEntity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const innerProtoEntity& default_instance();

  void Swap(innerProtoEntity* other);

  // implements Message ----------------------------------------------

  innerProtoEntity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const innerProtoEntity& from);
  void MergeFrom(const innerProtoEntity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef innerProtoEntity_msgType msgType;
  static const msgType msg_redisAddr = innerProtoEntity_msgType_msg_redisAddr;
  static inline bool msgType_IsValid(int value) {
    return innerProtoEntity_msgType_IsValid(value);
  }
  static const msgType msgType_MIN =
    innerProtoEntity_msgType_msgType_MIN;
  static const msgType msgType_MAX =
    innerProtoEntity_msgType_msgType_MAX;
  static const int msgType_ARRAYSIZE =
    innerProtoEntity_msgType_msgType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  msgType_descriptor() {
    return innerProtoEntity_msgType_descriptor();
  }
  static inline const ::std::string& msgType_Name(msgType value) {
    return innerProtoEntity_msgType_Name(value);
  }
  static inline bool msgType_Parse(const ::std::string& name,
      msgType* value) {
    return innerProtoEntity_msgType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .com.rj.targeting.protos.innerProtoEntity.msgType msgtype = 1;
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgtypeFieldNumber = 1;
  inline ::com::rj::targeting::protos::innerProtoEntity_msgType msgtype() const;
  inline void set_msgtype(::com::rj::targeting::protos::innerProtoEntity_msgType value);

  // optional string buf = 2;
  inline bool has_buf() const;
  inline void clear_buf();
  static const int kBufFieldNumber = 2;
  inline const ::std::string& buf() const;
  inline void set_buf(const ::std::string& value);
  inline void set_buf(const char* value);
  inline void set_buf(const char* value, size_t size);
  inline ::std::string* mutable_buf();
  inline ::std::string* release_buf();
  inline void set_allocated_buf(::std::string* buf);

  // @@protoc_insertion_point(class_scope:com.rj.targeting.protos.innerProtoEntity)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_buf();
  inline void clear_has_buf();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* buf_;
  int msgtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_innerProto_2eproto();
  friend void protobuf_AssignDesc_innerProto_2eproto();
  friend void protobuf_ShutdownFile_innerProto_2eproto();

  void InitAsDefaultInstance();
  static innerProtoEntity* default_instance_;
};
// ===================================================================


// ===================================================================

// innerProtoEntity

// required .com.rj.targeting.protos.innerProtoEntity.msgType msgtype = 1;
inline bool innerProtoEntity::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void innerProtoEntity::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void innerProtoEntity::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void innerProtoEntity::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
inline ::com::rj::targeting::protos::innerProtoEntity_msgType innerProtoEntity::msgtype() const {
  return static_cast< ::com::rj::targeting::protos::innerProtoEntity_msgType >(msgtype_);
}
inline void innerProtoEntity::set_msgtype(::com::rj::targeting::protos::innerProtoEntity_msgType value) {
  assert(::com::rj::targeting::protos::innerProtoEntity_msgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
}

// optional string buf = 2;
inline bool innerProtoEntity::has_buf() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void innerProtoEntity::set_has_buf() {
  _has_bits_[0] |= 0x00000002u;
}
inline void innerProtoEntity::clear_has_buf() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void innerProtoEntity::clear_buf() {
  if (buf_ != &::google::protobuf::internal::kEmptyString) {
    buf_->clear();
  }
  clear_has_buf();
}
inline const ::std::string& innerProtoEntity::buf() const {
  return *buf_;
}
inline void innerProtoEntity::set_buf(const ::std::string& value) {
  set_has_buf();
  if (buf_ == &::google::protobuf::internal::kEmptyString) {
    buf_ = new ::std::string;
  }
  buf_->assign(value);
}
inline void innerProtoEntity::set_buf(const char* value) {
  set_has_buf();
  if (buf_ == &::google::protobuf::internal::kEmptyString) {
    buf_ = new ::std::string;
  }
  buf_->assign(value);
}
inline void innerProtoEntity::set_buf(const char* value, size_t size) {
  set_has_buf();
  if (buf_ == &::google::protobuf::internal::kEmptyString) {
    buf_ = new ::std::string;
  }
  buf_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* innerProtoEntity::mutable_buf() {
  set_has_buf();
  if (buf_ == &::google::protobuf::internal::kEmptyString) {
    buf_ = new ::std::string;
  }
  return buf_;
}
inline ::std::string* innerProtoEntity::release_buf() {
  clear_has_buf();
  if (buf_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = buf_;
    buf_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void innerProtoEntity::set_allocated_buf(::std::string* buf) {
  if (buf_ != &::google::protobuf::internal::kEmptyString) {
    delete buf_;
  }
  if (buf) {
    set_has_buf();
    buf_ = buf;
  } else {
    clear_has_buf();
    buf_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace targeting
}  // namespace rj
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::rj::targeting::protos::innerProtoEntity_msgType>() {
  return ::com::rj::targeting::protos::innerProtoEntity_msgType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_innerProto_2eproto__INCLUDED
