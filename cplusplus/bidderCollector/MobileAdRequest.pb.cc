// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MobileAdRequest.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MobileAdRequest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace rj {
namespace protos {
namespace mobile {

namespace {

const ::google::protobuf::Descriptor* MobileAdRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobileAdRequest_Frequency_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdRequest_Frequency_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobileAdRequest_Frequency_FrequencyValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdRequest_Frequency_FrequencyValue_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobileAdRequest_User_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdRequest_User_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobileAdRequest_Device_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdRequest_Device_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobileAdRequest_GeoInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdRequest_GeoInfo_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MobileAdRequest_TestFlag_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MobileAdRequest_Gender_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MobileAdRequest_Orientation_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MobileAdRequest_AdType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MobileAdRequest_ConnectionType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_MobileAdRequest_2eproto() {
  protobuf_AddDesc_MobileAdRequest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MobileAdRequest.proto");
  GOOGLE_CHECK(file != NULL);
  MobileAdRequest_descriptor_ = file->message_type(0);
  static const int MobileAdRequest_offsets_[21] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, aid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, adspacewidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, adspaceheight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, orientation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, packagename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, schema_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, section_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, session_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, dnsip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, device_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, user_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, geoinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, frequency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, apptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, trafficquality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, inventoryquality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, test_),
  };
  MobileAdRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdRequest_descriptor_,
      MobileAdRequest::default_instance_,
      MobileAdRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdRequest));
  MobileAdRequest_Frequency_descriptor_ = MobileAdRequest_descriptor_->nested_type(0);
  static const int MobileAdRequest_Frequency_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Frequency, property_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Frequency, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Frequency, frequencyvalue_),
  };
  MobileAdRequest_Frequency_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdRequest_Frequency_descriptor_,
      MobileAdRequest_Frequency::default_instance_,
      MobileAdRequest_Frequency_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Frequency, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Frequency, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdRequest_Frequency));
  MobileAdRequest_Frequency_FrequencyValue_descriptor_ = MobileAdRequest_Frequency_descriptor_->nested_type(0);
  static const int MobileAdRequest_Frequency_FrequencyValue_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Frequency_FrequencyValue, frequencytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Frequency_FrequencyValue, times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Frequency_FrequencyValue, duedate_),
  };
  MobileAdRequest_Frequency_FrequencyValue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdRequest_Frequency_FrequencyValue_descriptor_,
      MobileAdRequest_Frequency_FrequencyValue::default_instance_,
      MobileAdRequest_Frequency_FrequencyValue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Frequency_FrequencyValue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Frequency_FrequencyValue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdRequest_Frequency_FrequencyValue));
  MobileAdRequest_User_descriptor_ = MobileAdRequest_descriptor_->nested_type(1);
  static const int MobileAdRequest_User_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_User, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_User, gender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_User, age_),
  };
  MobileAdRequest_User_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdRequest_User_descriptor_,
      MobileAdRequest_User::default_instance_,
      MobileAdRequest_User_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_User, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_User, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdRequest_User));
  MobileAdRequest_Device_descriptor_ = MobileAdRequest_descriptor_->nested_type(2);
  static const int MobileAdRequest_Device_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, ipaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, connectiontype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, ua_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, udid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, hidmd5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, hidsha1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, devicetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, platform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, platformversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, language_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, vender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, modelname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, marketingname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, screenwidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, screenheight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, density_),
  };
  MobileAdRequest_Device_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdRequest_Device_descriptor_,
      MobileAdRequest_Device::default_instance_,
      MobileAdRequest_Device_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_Device, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdRequest_Device));
  MobileAdRequest_GeoInfo_descriptor_ = MobileAdRequest_descriptor_->nested_type(3);
  static const int MobileAdRequest_GeoInfo_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_GeoInfo, country_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_GeoInfo, region_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_GeoInfo, city_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_GeoInfo, latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_GeoInfo, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_GeoInfo, isp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_GeoInfo, domain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_GeoInfo, mcc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_GeoInfo, mnc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_GeoInfo, usage_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_GeoInfo, carrier_),
  };
  MobileAdRequest_GeoInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdRequest_GeoInfo_descriptor_,
      MobileAdRequest_GeoInfo::default_instance_,
      MobileAdRequest_GeoInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_GeoInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdRequest_GeoInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdRequest_GeoInfo));
  MobileAdRequest_TestFlag_descriptor_ = MobileAdRequest_descriptor_->enum_type(0);
  MobileAdRequest_Gender_descriptor_ = MobileAdRequest_descriptor_->enum_type(1);
  MobileAdRequest_Orientation_descriptor_ = MobileAdRequest_descriptor_->enum_type(2);
  MobileAdRequest_AdType_descriptor_ = MobileAdRequest_descriptor_->enum_type(3);
  MobileAdRequest_ConnectionType_descriptor_ = MobileAdRequest_descriptor_->enum_type(4);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MobileAdRequest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdRequest_descriptor_, &MobileAdRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdRequest_Frequency_descriptor_, &MobileAdRequest_Frequency::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdRequest_Frequency_FrequencyValue_descriptor_, &MobileAdRequest_Frequency_FrequencyValue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdRequest_User_descriptor_, &MobileAdRequest_User::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdRequest_Device_descriptor_, &MobileAdRequest_Device::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdRequest_GeoInfo_descriptor_, &MobileAdRequest_GeoInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MobileAdRequest_2eproto() {
  delete MobileAdRequest::default_instance_;
  delete MobileAdRequest_reflection_;
  delete MobileAdRequest_Frequency::default_instance_;
  delete MobileAdRequest_Frequency_reflection_;
  delete MobileAdRequest_Frequency_FrequencyValue::default_instance_;
  delete MobileAdRequest_Frequency_FrequencyValue_reflection_;
  delete MobileAdRequest_User::default_instance_;
  delete MobileAdRequest_User_reflection_;
  delete MobileAdRequest_Device::default_instance_;
  delete MobileAdRequest_Device_reflection_;
  delete MobileAdRequest_GeoInfo::default_instance_;
  delete MobileAdRequest_GeoInfo_reflection_;
}

void protobuf_AddDesc_MobileAdRequest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025MobileAdRequest.proto\022\024com.rj.protos.m"
    "obile\"\237\016\n\017MobileAdRequest\022\n\n\002id\030\001 \001(\t\022\013\n"
    "\003aid\030\002 \002(\t\022\017\n\007version\030\003 \001(\t\022:\n\004type\030\004 \001("
    "\0162,.com.rj.protos.mobile.MobileAdRequest"
    ".AdType\022\021\n\ttimestamp\030\005 \001(\t\022\024\n\014adspaceWid"
    "th\030\006 \001(\t\022\025\n\radspaceHeight\030\007 \001(\t\022F\n\013orien"
    "tation\030\010 \001(\01621.com.rj.protos.mobile.Mobi"
    "leAdRequest.Orientation\022\023\n\013packageName\030\t"
    " \001(\t\022\016\n\006schema\030\n \001(\t\022\017\n\007section\030\013 \001(\t\022\017\n"
    "\007session\030\014 \001(\t\022\r\n\005dnsIp\030\r \001(\t\022<\n\006device\030"
    "\016 \001(\0132,.com.rj.protos.mobile.MobileAdReq"
    "uest.Device\0228\n\004user\030\017 \001(\0132*.com.rj.proto"
    "s.mobile.MobileAdRequest.User\022>\n\007geoInfo"
    "\030\020 \001(\0132-.com.rj.protos.mobile.MobileAdRe"
    "quest.GeoInfo\022B\n\tfrequency\030\021 \003(\0132/.com.r"
    "j.protos.mobile.MobileAdRequest.Frequenc"
    "y\022\017\n\007appType\030\022 \001(\t\022\026\n\016trafficQuality\030\023 \001"
    "(\t\022\030\n\020inventoryQuality\030\024 \001(\t\022<\n\004test\030\025 \001"
    "(\0162..com.rj.protos.mobile.MobileAdReques"
    "t.TestFlag\032\312\001\n\tFrequency\022\020\n\010property\030\001 \001"
    "(\t\022\n\n\002id\030\002 \001(\t\022V\n\016frequencyValue\030\003 \003(\0132>"
    ".com.rj.protos.mobile.MobileAdRequest.Fr"
    "equency.FrequencyValue\032G\n\016FrequencyValue"
    "\022\025\n\rfrequencyType\030\001 \001(\t\022\r\n\005times\030\002 \001(\t\022\017"
    "\n\007dueDate\030\003 \001(\t\032^\n\004User\022\013\n\003uid\030\001 \001(\t\022<\n\006"
    "gender\030\002 \001(\0162,.com.rj.protos.mobile.Mobi"
    "leAdRequest.Gender\022\013\n\003Age\030\003 \001(\t\032\353\002\n\006Devi"
    "ce\022\021\n\tipAddress\030\001 \001(\t\022L\n\016connectionType\030"
    "\002 \001(\01624.com.rj.protos.mobile.MobileAdReq"
    "uest.ConnectionType\022\n\n\002ua\030\003 \001(\t\022\014\n\004udid\030"
    "\004 \001(\t\022\016\n\006hidMd5\030\005 \001(\t\022\017\n\007hidSha1\030\006 \001(\t\022\022"
    "\n\ndeviceType\030\007 \001(\t\022\020\n\010platform\030\010 \001(\t\022\027\n\017"
    "platformVersion\030\t \001(\t\022\020\n\010language\030\n \001(\t\022"
    "\016\n\006vender\030\013 \001(\t\022\021\n\tmodelName\030\014 \001(\t\022\025\n\rma"
    "rketingName\030\r \001(\t\022\023\n\013screenWidth\030\016 \001(\t\022\024"
    "\n\014screenHeight\030\017 \001(\t\022\017\n\007density\030\020 \001(\t\032\271\001"
    "\n\007GeoInfo\022\017\n\007country\030\001 \001(\t\022\016\n\006region\030\002 \001"
    "(\t\022\014\n\004city\030\003 \001(\t\022\020\n\010latitude\030\004 \001(\t\022\021\n\tlo"
    "ngitude\030\005 \001(\t\022\013\n\003isp\030\006 \001(\t\022\016\n\006domain\030\007 \001"
    "(\t\022\013\n\003mcc\030\010 \001(\t\022\013\n\003mnc\030\t \001(\t\022\022\n\nusage_ty"
    "pe\030\n \001(\t\022\017\n\007carrier\030\013 \001(\t\"\037\n\010TestFlag\022\010\n"
    "\004TRUE\020\000\022\t\n\005FALSE\020\001\"2\n\006Gender\022\022\n\016UNKNOWN_"
    "GENDER\020\000\022\010\n\004MALE\020\001\022\n\n\006FEMALE\020\002\"*\n\013Orient"
    "ation\022\r\n\tLANDSCAPE\020\000\022\014\n\010PORTRAIT\020\001\"2\n\006Ad"
    "Type\022\n\n\006BANNER\020\000\022\020\n\014INTERSTITIAL\020\001\022\n\n\006NA"
    "TIVE\020\002\"\?\n\016ConnectionType\022\013\n\007UNKNOWN\020\000\022\010\n"
    "\004WIFI\020\001\022\006\n\002G2\020\002\022\006\n\002G3\020\003\022\006\n\002G4\020\004", 1871);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MobileAdRequest.proto", &protobuf_RegisterTypes);
  MobileAdRequest::default_instance_ = new MobileAdRequest();
  MobileAdRequest_Frequency::default_instance_ = new MobileAdRequest_Frequency();
  MobileAdRequest_Frequency_FrequencyValue::default_instance_ = new MobileAdRequest_Frequency_FrequencyValue();
  MobileAdRequest_User::default_instance_ = new MobileAdRequest_User();
  MobileAdRequest_Device::default_instance_ = new MobileAdRequest_Device();
  MobileAdRequest_GeoInfo::default_instance_ = new MobileAdRequest_GeoInfo();
  MobileAdRequest::default_instance_->InitAsDefaultInstance();
  MobileAdRequest_Frequency::default_instance_->InitAsDefaultInstance();
  MobileAdRequest_Frequency_FrequencyValue::default_instance_->InitAsDefaultInstance();
  MobileAdRequest_User::default_instance_->InitAsDefaultInstance();
  MobileAdRequest_Device::default_instance_->InitAsDefaultInstance();
  MobileAdRequest_GeoInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MobileAdRequest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MobileAdRequest_2eproto {
  StaticDescriptorInitializer_MobileAdRequest_2eproto() {
    protobuf_AddDesc_MobileAdRequest_2eproto();
  }
} static_descriptor_initializer_MobileAdRequest_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* MobileAdRequest_TestFlag_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdRequest_TestFlag_descriptor_;
}
bool MobileAdRequest_TestFlag_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MobileAdRequest_TestFlag MobileAdRequest::TRUE;
const MobileAdRequest_TestFlag MobileAdRequest::FALSE;
const MobileAdRequest_TestFlag MobileAdRequest::TestFlag_MIN;
const MobileAdRequest_TestFlag MobileAdRequest::TestFlag_MAX;
const int MobileAdRequest::TestFlag_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* MobileAdRequest_Gender_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdRequest_Gender_descriptor_;
}
bool MobileAdRequest_Gender_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MobileAdRequest_Gender MobileAdRequest::UNKNOWN_GENDER;
const MobileAdRequest_Gender MobileAdRequest::MALE;
const MobileAdRequest_Gender MobileAdRequest::FEMALE;
const MobileAdRequest_Gender MobileAdRequest::Gender_MIN;
const MobileAdRequest_Gender MobileAdRequest::Gender_MAX;
const int MobileAdRequest::Gender_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* MobileAdRequest_Orientation_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdRequest_Orientation_descriptor_;
}
bool MobileAdRequest_Orientation_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MobileAdRequest_Orientation MobileAdRequest::LANDSCAPE;
const MobileAdRequest_Orientation MobileAdRequest::PORTRAIT;
const MobileAdRequest_Orientation MobileAdRequest::Orientation_MIN;
const MobileAdRequest_Orientation MobileAdRequest::Orientation_MAX;
const int MobileAdRequest::Orientation_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* MobileAdRequest_AdType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdRequest_AdType_descriptor_;
}
bool MobileAdRequest_AdType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MobileAdRequest_AdType MobileAdRequest::BANNER;
const MobileAdRequest_AdType MobileAdRequest::INTERSTITIAL;
const MobileAdRequest_AdType MobileAdRequest::NATIVE;
const MobileAdRequest_AdType MobileAdRequest::AdType_MIN;
const MobileAdRequest_AdType MobileAdRequest::AdType_MAX;
const int MobileAdRequest::AdType_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* MobileAdRequest_ConnectionType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdRequest_ConnectionType_descriptor_;
}
bool MobileAdRequest_ConnectionType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MobileAdRequest_ConnectionType MobileAdRequest::UNKNOWN;
const MobileAdRequest_ConnectionType MobileAdRequest::WIFI;
const MobileAdRequest_ConnectionType MobileAdRequest::G2;
const MobileAdRequest_ConnectionType MobileAdRequest::G3;
const MobileAdRequest_ConnectionType MobileAdRequest::G4;
const MobileAdRequest_ConnectionType MobileAdRequest::ConnectionType_MIN;
const MobileAdRequest_ConnectionType MobileAdRequest::ConnectionType_MAX;
const int MobileAdRequest::ConnectionType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MobileAdRequest_Frequency_FrequencyValue::kFrequencyTypeFieldNumber;
const int MobileAdRequest_Frequency_FrequencyValue::kTimesFieldNumber;
const int MobileAdRequest_Frequency_FrequencyValue::kDueDateFieldNumber;
#endif  // !_MSC_VER

MobileAdRequest_Frequency_FrequencyValue::MobileAdRequest_Frequency_FrequencyValue()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdRequest_Frequency_FrequencyValue::InitAsDefaultInstance() {
}

MobileAdRequest_Frequency_FrequencyValue::MobileAdRequest_Frequency_FrequencyValue(const MobileAdRequest_Frequency_FrequencyValue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdRequest_Frequency_FrequencyValue::SharedCtor() {
  _cached_size_ = 0;
  frequencytype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  times_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  duedate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdRequest_Frequency_FrequencyValue::~MobileAdRequest_Frequency_FrequencyValue() {
  SharedDtor();
}

void MobileAdRequest_Frequency_FrequencyValue::SharedDtor() {
  if (frequencytype_ != &::google::protobuf::internal::kEmptyString) {
    delete frequencytype_;
  }
  if (times_ != &::google::protobuf::internal::kEmptyString) {
    delete times_;
  }
  if (duedate_ != &::google::protobuf::internal::kEmptyString) {
    delete duedate_;
  }
  if (this != default_instance_) {
  }
}

void MobileAdRequest_Frequency_FrequencyValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdRequest_Frequency_FrequencyValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdRequest_Frequency_FrequencyValue_descriptor_;
}

const MobileAdRequest_Frequency_FrequencyValue& MobileAdRequest_Frequency_FrequencyValue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MobileAdRequest_2eproto();
  return *default_instance_;
}

MobileAdRequest_Frequency_FrequencyValue* MobileAdRequest_Frequency_FrequencyValue::default_instance_ = NULL;

MobileAdRequest_Frequency_FrequencyValue* MobileAdRequest_Frequency_FrequencyValue::New() const {
  return new MobileAdRequest_Frequency_FrequencyValue;
}

void MobileAdRequest_Frequency_FrequencyValue::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_frequencytype()) {
      if (frequencytype_ != &::google::protobuf::internal::kEmptyString) {
        frequencytype_->clear();
      }
    }
    if (has_times()) {
      if (times_ != &::google::protobuf::internal::kEmptyString) {
        times_->clear();
      }
    }
    if (has_duedate()) {
      if (duedate_ != &::google::protobuf::internal::kEmptyString) {
        duedate_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdRequest_Frequency_FrequencyValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string frequencyType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_frequencytype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->frequencytype().data(), this->frequencytype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_times;
        break;
      }

      // optional string times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_times:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_times()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->times().data(), this->times().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_dueDate;
        break;
      }

      // optional string dueDate = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dueDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_duedate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->duedate().data(), this->duedate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdRequest_Frequency_FrequencyValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string frequencyType = 1;
  if (has_frequencytype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->frequencytype().data(), this->frequencytype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->frequencytype(), output);
  }

  // optional string times = 2;
  if (has_times()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->times().data(), this->times().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->times(), output);
  }

  // optional string dueDate = 3;
  if (has_duedate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->duedate().data(), this->duedate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->duedate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdRequest_Frequency_FrequencyValue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string frequencyType = 1;
  if (has_frequencytype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->frequencytype().data(), this->frequencytype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->frequencytype(), target);
  }

  // optional string times = 2;
  if (has_times()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->times().data(), this->times().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->times(), target);
  }

  // optional string dueDate = 3;
  if (has_duedate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->duedate().data(), this->duedate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->duedate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdRequest_Frequency_FrequencyValue::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string frequencyType = 1;
    if (has_frequencytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->frequencytype());
    }

    // optional string times = 2;
    if (has_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->times());
    }

    // optional string dueDate = 3;
    if (has_duedate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->duedate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdRequest_Frequency_FrequencyValue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdRequest_Frequency_FrequencyValue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdRequest_Frequency_FrequencyValue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdRequest_Frequency_FrequencyValue::MergeFrom(const MobileAdRequest_Frequency_FrequencyValue& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_frequencytype()) {
      set_frequencytype(from.frequencytype());
    }
    if (from.has_times()) {
      set_times(from.times());
    }
    if (from.has_duedate()) {
      set_duedate(from.duedate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdRequest_Frequency_FrequencyValue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdRequest_Frequency_FrequencyValue::CopyFrom(const MobileAdRequest_Frequency_FrequencyValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdRequest_Frequency_FrequencyValue::IsInitialized() const {

  return true;
}

void MobileAdRequest_Frequency_FrequencyValue::Swap(MobileAdRequest_Frequency_FrequencyValue* other) {
  if (other != this) {
    std::swap(frequencytype_, other->frequencytype_);
    std::swap(times_, other->times_);
    std::swap(duedate_, other->duedate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdRequest_Frequency_FrequencyValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdRequest_Frequency_FrequencyValue_descriptor_;
  metadata.reflection = MobileAdRequest_Frequency_FrequencyValue_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MobileAdRequest_Frequency::kPropertyFieldNumber;
const int MobileAdRequest_Frequency::kIdFieldNumber;
const int MobileAdRequest_Frequency::kFrequencyValueFieldNumber;
#endif  // !_MSC_VER

MobileAdRequest_Frequency::MobileAdRequest_Frequency()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdRequest_Frequency::InitAsDefaultInstance() {
}

MobileAdRequest_Frequency::MobileAdRequest_Frequency(const MobileAdRequest_Frequency& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdRequest_Frequency::SharedCtor() {
  _cached_size_ = 0;
  property_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdRequest_Frequency::~MobileAdRequest_Frequency() {
  SharedDtor();
}

void MobileAdRequest_Frequency::SharedDtor() {
  if (property_ != &::google::protobuf::internal::kEmptyString) {
    delete property_;
  }
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (this != default_instance_) {
  }
}

void MobileAdRequest_Frequency::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdRequest_Frequency::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdRequest_Frequency_descriptor_;
}

const MobileAdRequest_Frequency& MobileAdRequest_Frequency::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MobileAdRequest_2eproto();
  return *default_instance_;
}

MobileAdRequest_Frequency* MobileAdRequest_Frequency::default_instance_ = NULL;

MobileAdRequest_Frequency* MobileAdRequest_Frequency::New() const {
  return new MobileAdRequest_Frequency;
}

void MobileAdRequest_Frequency::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_property()) {
      if (property_ != &::google::protobuf::internal::kEmptyString) {
        property_->clear();
      }
    }
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
  }
  frequencyvalue_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdRequest_Frequency::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string property = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_property()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->property().data(), this->property().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_id;
        break;
      }

      // optional string id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_frequencyValue;
        break;
      }

      // repeated .com.rj.protos.mobile.MobileAdRequest.Frequency.FrequencyValue frequencyValue = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_frequencyValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_frequencyvalue()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_frequencyValue;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdRequest_Frequency::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string property = 1;
  if (has_property()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->property().data(), this->property().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->property(), output);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->id(), output);
  }

  // repeated .com.rj.protos.mobile.MobileAdRequest.Frequency.FrequencyValue frequencyValue = 3;
  for (int i = 0; i < this->frequencyvalue_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->frequencyvalue(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdRequest_Frequency::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string property = 1;
  if (has_property()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->property().data(), this->property().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->property(), target);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // repeated .com.rj.protos.mobile.MobileAdRequest.Frequency.FrequencyValue frequencyValue = 3;
  for (int i = 0; i < this->frequencyvalue_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->frequencyvalue(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdRequest_Frequency::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string property = 1;
    if (has_property()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->property());
    }

    // optional string id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

  }
  // repeated .com.rj.protos.mobile.MobileAdRequest.Frequency.FrequencyValue frequencyValue = 3;
  total_size += 1 * this->frequencyvalue_size();
  for (int i = 0; i < this->frequencyvalue_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frequencyvalue(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdRequest_Frequency::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdRequest_Frequency* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdRequest_Frequency*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdRequest_Frequency::MergeFrom(const MobileAdRequest_Frequency& from) {
  GOOGLE_CHECK_NE(&from, this);
  frequencyvalue_.MergeFrom(from.frequencyvalue_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_property()) {
      set_property(from.property());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdRequest_Frequency::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdRequest_Frequency::CopyFrom(const MobileAdRequest_Frequency& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdRequest_Frequency::IsInitialized() const {

  return true;
}

void MobileAdRequest_Frequency::Swap(MobileAdRequest_Frequency* other) {
  if (other != this) {
    std::swap(property_, other->property_);
    std::swap(id_, other->id_);
    frequencyvalue_.Swap(&other->frequencyvalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdRequest_Frequency::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdRequest_Frequency_descriptor_;
  metadata.reflection = MobileAdRequest_Frequency_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MobileAdRequest_User::kUidFieldNumber;
const int MobileAdRequest_User::kGenderFieldNumber;
const int MobileAdRequest_User::kAgeFieldNumber;
#endif  // !_MSC_VER

MobileAdRequest_User::MobileAdRequest_User()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdRequest_User::InitAsDefaultInstance() {
}

MobileAdRequest_User::MobileAdRequest_User(const MobileAdRequest_User& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdRequest_User::SharedCtor() {
  _cached_size_ = 0;
  uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  gender_ = 0;
  age_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdRequest_User::~MobileAdRequest_User() {
  SharedDtor();
}

void MobileAdRequest_User::SharedDtor() {
  if (uid_ != &::google::protobuf::internal::kEmptyString) {
    delete uid_;
  }
  if (age_ != &::google::protobuf::internal::kEmptyString) {
    delete age_;
  }
  if (this != default_instance_) {
  }
}

void MobileAdRequest_User::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdRequest_User::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdRequest_User_descriptor_;
}

const MobileAdRequest_User& MobileAdRequest_User::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MobileAdRequest_2eproto();
  return *default_instance_;
}

MobileAdRequest_User* MobileAdRequest_User::default_instance_ = NULL;

MobileAdRequest_User* MobileAdRequest_User::New() const {
  return new MobileAdRequest_User;
}

void MobileAdRequest_User::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_uid()) {
      if (uid_ != &::google::protobuf::internal::kEmptyString) {
        uid_->clear();
      }
    }
    gender_ = 0;
    if (has_age()) {
      if (age_ != &::google::protobuf::internal::kEmptyString) {
        age_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdRequest_User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string uid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uid().data(), this->uid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gender;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdRequest.Gender gender = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gender:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::rj::protos::mobile::MobileAdRequest_Gender_IsValid(value)) {
            set_gender(static_cast< ::com::rj::protos::mobile::MobileAdRequest_Gender >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_Age;
        break;
      }

      // optional string Age = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Age:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_age()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->age().data(), this->age().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdRequest_User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->uid(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.Gender gender = 2;
  if (has_gender()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->gender(), output);
  }

  // optional string Age = 3;
  if (has_age()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->age().data(), this->age().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->age(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdRequest_User::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.Gender gender = 2;
  if (has_gender()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->gender(), target);
  }

  // optional string Age = 3;
  if (has_age()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->age().data(), this->age().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->age(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdRequest_User::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uid());
    }

    // optional .com.rj.protos.mobile.MobileAdRequest.Gender gender = 2;
    if (has_gender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->gender());
    }

    // optional string Age = 3;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->age());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdRequest_User::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdRequest_User* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdRequest_User*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdRequest_User::MergeFrom(const MobileAdRequest_User& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_gender()) {
      set_gender(from.gender());
    }
    if (from.has_age()) {
      set_age(from.age());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdRequest_User::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdRequest_User::CopyFrom(const MobileAdRequest_User& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdRequest_User::IsInitialized() const {

  return true;
}

void MobileAdRequest_User::Swap(MobileAdRequest_User* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(gender_, other->gender_);
    std::swap(age_, other->age_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdRequest_User::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdRequest_User_descriptor_;
  metadata.reflection = MobileAdRequest_User_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MobileAdRequest_Device::kIpAddressFieldNumber;
const int MobileAdRequest_Device::kConnectionTypeFieldNumber;
const int MobileAdRequest_Device::kUaFieldNumber;
const int MobileAdRequest_Device::kUdidFieldNumber;
const int MobileAdRequest_Device::kHidMd5FieldNumber;
const int MobileAdRequest_Device::kHidSha1FieldNumber;
const int MobileAdRequest_Device::kDeviceTypeFieldNumber;
const int MobileAdRequest_Device::kPlatformFieldNumber;
const int MobileAdRequest_Device::kPlatformVersionFieldNumber;
const int MobileAdRequest_Device::kLanguageFieldNumber;
const int MobileAdRequest_Device::kVenderFieldNumber;
const int MobileAdRequest_Device::kModelNameFieldNumber;
const int MobileAdRequest_Device::kMarketingNameFieldNumber;
const int MobileAdRequest_Device::kScreenWidthFieldNumber;
const int MobileAdRequest_Device::kScreenHeightFieldNumber;
const int MobileAdRequest_Device::kDensityFieldNumber;
#endif  // !_MSC_VER

MobileAdRequest_Device::MobileAdRequest_Device()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdRequest_Device::InitAsDefaultInstance() {
}

MobileAdRequest_Device::MobileAdRequest_Device(const MobileAdRequest_Device& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdRequest_Device::SharedCtor() {
  _cached_size_ = 0;
  ipaddress_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  connectiontype_ = 0;
  ua_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  udid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  hidmd5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  hidsha1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  devicetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  platformversion_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  language_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  vender_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  modelname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  marketingname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  screenwidth_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  screenheight_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  density_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdRequest_Device::~MobileAdRequest_Device() {
  SharedDtor();
}

void MobileAdRequest_Device::SharedDtor() {
  if (ipaddress_ != &::google::protobuf::internal::kEmptyString) {
    delete ipaddress_;
  }
  if (ua_ != &::google::protobuf::internal::kEmptyString) {
    delete ua_;
  }
  if (udid_ != &::google::protobuf::internal::kEmptyString) {
    delete udid_;
  }
  if (hidmd5_ != &::google::protobuf::internal::kEmptyString) {
    delete hidmd5_;
  }
  if (hidsha1_ != &::google::protobuf::internal::kEmptyString) {
    delete hidsha1_;
  }
  if (devicetype_ != &::google::protobuf::internal::kEmptyString) {
    delete devicetype_;
  }
  if (platform_ != &::google::protobuf::internal::kEmptyString) {
    delete platform_;
  }
  if (platformversion_ != &::google::protobuf::internal::kEmptyString) {
    delete platformversion_;
  }
  if (language_ != &::google::protobuf::internal::kEmptyString) {
    delete language_;
  }
  if (vender_ != &::google::protobuf::internal::kEmptyString) {
    delete vender_;
  }
  if (modelname_ != &::google::protobuf::internal::kEmptyString) {
    delete modelname_;
  }
  if (marketingname_ != &::google::protobuf::internal::kEmptyString) {
    delete marketingname_;
  }
  if (screenwidth_ != &::google::protobuf::internal::kEmptyString) {
    delete screenwidth_;
  }
  if (screenheight_ != &::google::protobuf::internal::kEmptyString) {
    delete screenheight_;
  }
  if (density_ != &::google::protobuf::internal::kEmptyString) {
    delete density_;
  }
  if (this != default_instance_) {
  }
}

void MobileAdRequest_Device::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdRequest_Device::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdRequest_Device_descriptor_;
}

const MobileAdRequest_Device& MobileAdRequest_Device::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MobileAdRequest_2eproto();
  return *default_instance_;
}

MobileAdRequest_Device* MobileAdRequest_Device::default_instance_ = NULL;

MobileAdRequest_Device* MobileAdRequest_Device::New() const {
  return new MobileAdRequest_Device;
}

void MobileAdRequest_Device::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_ipaddress()) {
      if (ipaddress_ != &::google::protobuf::internal::kEmptyString) {
        ipaddress_->clear();
      }
    }
    connectiontype_ = 0;
    if (has_ua()) {
      if (ua_ != &::google::protobuf::internal::kEmptyString) {
        ua_->clear();
      }
    }
    if (has_udid()) {
      if (udid_ != &::google::protobuf::internal::kEmptyString) {
        udid_->clear();
      }
    }
    if (has_hidmd5()) {
      if (hidmd5_ != &::google::protobuf::internal::kEmptyString) {
        hidmd5_->clear();
      }
    }
    if (has_hidsha1()) {
      if (hidsha1_ != &::google::protobuf::internal::kEmptyString) {
        hidsha1_->clear();
      }
    }
    if (has_devicetype()) {
      if (devicetype_ != &::google::protobuf::internal::kEmptyString) {
        devicetype_->clear();
      }
    }
    if (has_platform()) {
      if (platform_ != &::google::protobuf::internal::kEmptyString) {
        platform_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_platformversion()) {
      if (platformversion_ != &::google::protobuf::internal::kEmptyString) {
        platformversion_->clear();
      }
    }
    if (has_language()) {
      if (language_ != &::google::protobuf::internal::kEmptyString) {
        language_->clear();
      }
    }
    if (has_vender()) {
      if (vender_ != &::google::protobuf::internal::kEmptyString) {
        vender_->clear();
      }
    }
    if (has_modelname()) {
      if (modelname_ != &::google::protobuf::internal::kEmptyString) {
        modelname_->clear();
      }
    }
    if (has_marketingname()) {
      if (marketingname_ != &::google::protobuf::internal::kEmptyString) {
        marketingname_->clear();
      }
    }
    if (has_screenwidth()) {
      if (screenwidth_ != &::google::protobuf::internal::kEmptyString) {
        screenwidth_->clear();
      }
    }
    if (has_screenheight()) {
      if (screenheight_ != &::google::protobuf::internal::kEmptyString) {
        screenheight_->clear();
      }
    }
    if (has_density()) {
      if (density_ != &::google::protobuf::internal::kEmptyString) {
        density_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdRequest_Device::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ipAddress = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ipaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ipaddress().data(), this->ipaddress().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_connectionType;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdRequest.ConnectionType connectionType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_connectionType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::rj::protos::mobile::MobileAdRequest_ConnectionType_IsValid(value)) {
            set_connectiontype(static_cast< ::com::rj::protos::mobile::MobileAdRequest_ConnectionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ua;
        break;
      }

      // optional string ua = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ua:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ua()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ua().data(), this->ua().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_udid;
        break;
      }

      // optional string udid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_udid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_udid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->udid().data(), this->udid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_hidMd5;
        break;
      }

      // optional string hidMd5 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hidMd5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hidmd5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->hidmd5().data(), this->hidmd5().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_hidSha1;
        break;
      }

      // optional string hidSha1 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hidSha1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hidsha1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->hidsha1().data(), this->hidsha1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_deviceType;
        break;
      }

      // optional string deviceType = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_deviceType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devicetype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->devicetype().data(), this->devicetype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_platform;
        break;
      }

      // optional string platform = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_platform:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->platform().data(), this->platform().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_platformVersion;
        break;
      }

      // optional string platformVersion = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_platformVersion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platformversion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->platformversion().data(), this->platformversion().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_language;
        break;
      }

      // optional string language = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_language:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->language().data(), this->language().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_vender;
        break;
      }

      // optional string vender = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_vender:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vender()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->vender().data(), this->vender().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_modelName;
        break;
      }

      // optional string modelName = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_modelName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modelname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->modelname().data(), this->modelname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_marketingName;
        break;
      }

      // optional string marketingName = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_marketingName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_marketingname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->marketingname().data(), this->marketingname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_screenWidth;
        break;
      }

      // optional string screenWidth = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_screenWidth:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_screenwidth()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->screenwidth().data(), this->screenwidth().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_screenHeight;
        break;
      }

      // optional string screenHeight = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_screenHeight:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_screenheight()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->screenheight().data(), this->screenheight().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_density;
        break;
      }

      // optional string density = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_density:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_density()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->density().data(), this->density().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdRequest_Device::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string ipAddress = 1;
  if (has_ipaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ipaddress().data(), this->ipaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->ipaddress(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.ConnectionType connectionType = 2;
  if (has_connectiontype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->connectiontype(), output);
  }

  // optional string ua = 3;
  if (has_ua()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ua().data(), this->ua().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->ua(), output);
  }

  // optional string udid = 4;
  if (has_udid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->udid().data(), this->udid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->udid(), output);
  }

  // optional string hidMd5 = 5;
  if (has_hidmd5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->hidmd5().data(), this->hidmd5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->hidmd5(), output);
  }

  // optional string hidSha1 = 6;
  if (has_hidsha1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->hidsha1().data(), this->hidsha1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->hidsha1(), output);
  }

  // optional string deviceType = 7;
  if (has_devicetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->devicetype().data(), this->devicetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->devicetype(), output);
  }

  // optional string platform = 8;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->platform(), output);
  }

  // optional string platformVersion = 9;
  if (has_platformversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->platformversion().data(), this->platformversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->platformversion(), output);
  }

  // optional string language = 10;
  if (has_language()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->language().data(), this->language().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->language(), output);
  }

  // optional string vender = 11;
  if (has_vender()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->vender().data(), this->vender().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->vender(), output);
  }

  // optional string modelName = 12;
  if (has_modelname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->modelname().data(), this->modelname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->modelname(), output);
  }

  // optional string marketingName = 13;
  if (has_marketingname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketingname().data(), this->marketingname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->marketingname(), output);
  }

  // optional string screenWidth = 14;
  if (has_screenwidth()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->screenwidth().data(), this->screenwidth().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->screenwidth(), output);
  }

  // optional string screenHeight = 15;
  if (has_screenheight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->screenheight().data(), this->screenheight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->screenheight(), output);
  }

  // optional string density = 16;
  if (has_density()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->density().data(), this->density().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->density(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdRequest_Device::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string ipAddress = 1;
  if (has_ipaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ipaddress().data(), this->ipaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ipaddress(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.ConnectionType connectionType = 2;
  if (has_connectiontype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->connectiontype(), target);
  }

  // optional string ua = 3;
  if (has_ua()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ua().data(), this->ua().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ua(), target);
  }

  // optional string udid = 4;
  if (has_udid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->udid().data(), this->udid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->udid(), target);
  }

  // optional string hidMd5 = 5;
  if (has_hidmd5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->hidmd5().data(), this->hidmd5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->hidmd5(), target);
  }

  // optional string hidSha1 = 6;
  if (has_hidsha1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->hidsha1().data(), this->hidsha1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->hidsha1(), target);
  }

  // optional string deviceType = 7;
  if (has_devicetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->devicetype().data(), this->devicetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->devicetype(), target);
  }

  // optional string platform = 8;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->platform(), target);
  }

  // optional string platformVersion = 9;
  if (has_platformversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->platformversion().data(), this->platformversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->platformversion(), target);
  }

  // optional string language = 10;
  if (has_language()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->language().data(), this->language().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->language(), target);
  }

  // optional string vender = 11;
  if (has_vender()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->vender().data(), this->vender().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->vender(), target);
  }

  // optional string modelName = 12;
  if (has_modelname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->modelname().data(), this->modelname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->modelname(), target);
  }

  // optional string marketingName = 13;
  if (has_marketingname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketingname().data(), this->marketingname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->marketingname(), target);
  }

  // optional string screenWidth = 14;
  if (has_screenwidth()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->screenwidth().data(), this->screenwidth().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->screenwidth(), target);
  }

  // optional string screenHeight = 15;
  if (has_screenheight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->screenheight().data(), this->screenheight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->screenheight(), target);
  }

  // optional string density = 16;
  if (has_density()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->density().data(), this->density().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->density(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdRequest_Device::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string ipAddress = 1;
    if (has_ipaddress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ipaddress());
    }

    // optional .com.rj.protos.mobile.MobileAdRequest.ConnectionType connectionType = 2;
    if (has_connectiontype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->connectiontype());
    }

    // optional string ua = 3;
    if (has_ua()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ua());
    }

    // optional string udid = 4;
    if (has_udid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->udid());
    }

    // optional string hidMd5 = 5;
    if (has_hidmd5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hidmd5());
    }

    // optional string hidSha1 = 6;
    if (has_hidsha1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hidsha1());
    }

    // optional string deviceType = 7;
    if (has_devicetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devicetype());
    }

    // optional string platform = 8;
    if (has_platform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platform());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string platformVersion = 9;
    if (has_platformversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platformversion());
    }

    // optional string language = 10;
    if (has_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->language());
    }

    // optional string vender = 11;
    if (has_vender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vender());
    }

    // optional string modelName = 12;
    if (has_modelname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->modelname());
    }

    // optional string marketingName = 13;
    if (has_marketingname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->marketingname());
    }

    // optional string screenWidth = 14;
    if (has_screenwidth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->screenwidth());
    }

    // optional string screenHeight = 15;
    if (has_screenheight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->screenheight());
    }

    // optional string density = 16;
    if (has_density()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->density());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdRequest_Device::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdRequest_Device* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdRequest_Device*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdRequest_Device::MergeFrom(const MobileAdRequest_Device& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ipaddress()) {
      set_ipaddress(from.ipaddress());
    }
    if (from.has_connectiontype()) {
      set_connectiontype(from.connectiontype());
    }
    if (from.has_ua()) {
      set_ua(from.ua());
    }
    if (from.has_udid()) {
      set_udid(from.udid());
    }
    if (from.has_hidmd5()) {
      set_hidmd5(from.hidmd5());
    }
    if (from.has_hidsha1()) {
      set_hidsha1(from.hidsha1());
    }
    if (from.has_devicetype()) {
      set_devicetype(from.devicetype());
    }
    if (from.has_platform()) {
      set_platform(from.platform());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_platformversion()) {
      set_platformversion(from.platformversion());
    }
    if (from.has_language()) {
      set_language(from.language());
    }
    if (from.has_vender()) {
      set_vender(from.vender());
    }
    if (from.has_modelname()) {
      set_modelname(from.modelname());
    }
    if (from.has_marketingname()) {
      set_marketingname(from.marketingname());
    }
    if (from.has_screenwidth()) {
      set_screenwidth(from.screenwidth());
    }
    if (from.has_screenheight()) {
      set_screenheight(from.screenheight());
    }
    if (from.has_density()) {
      set_density(from.density());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdRequest_Device::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdRequest_Device::CopyFrom(const MobileAdRequest_Device& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdRequest_Device::IsInitialized() const {

  return true;
}

void MobileAdRequest_Device::Swap(MobileAdRequest_Device* other) {
  if (other != this) {
    std::swap(ipaddress_, other->ipaddress_);
    std::swap(connectiontype_, other->connectiontype_);
    std::swap(ua_, other->ua_);
    std::swap(udid_, other->udid_);
    std::swap(hidmd5_, other->hidmd5_);
    std::swap(hidsha1_, other->hidsha1_);
    std::swap(devicetype_, other->devicetype_);
    std::swap(platform_, other->platform_);
    std::swap(platformversion_, other->platformversion_);
    std::swap(language_, other->language_);
    std::swap(vender_, other->vender_);
    std::swap(modelname_, other->modelname_);
    std::swap(marketingname_, other->marketingname_);
    std::swap(screenwidth_, other->screenwidth_);
    std::swap(screenheight_, other->screenheight_);
    std::swap(density_, other->density_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdRequest_Device::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdRequest_Device_descriptor_;
  metadata.reflection = MobileAdRequest_Device_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MobileAdRequest_GeoInfo::kCountryFieldNumber;
const int MobileAdRequest_GeoInfo::kRegionFieldNumber;
const int MobileAdRequest_GeoInfo::kCityFieldNumber;
const int MobileAdRequest_GeoInfo::kLatitudeFieldNumber;
const int MobileAdRequest_GeoInfo::kLongitudeFieldNumber;
const int MobileAdRequest_GeoInfo::kIspFieldNumber;
const int MobileAdRequest_GeoInfo::kDomainFieldNumber;
const int MobileAdRequest_GeoInfo::kMccFieldNumber;
const int MobileAdRequest_GeoInfo::kMncFieldNumber;
const int MobileAdRequest_GeoInfo::kUsageTypeFieldNumber;
const int MobileAdRequest_GeoInfo::kCarrierFieldNumber;
#endif  // !_MSC_VER

MobileAdRequest_GeoInfo::MobileAdRequest_GeoInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdRequest_GeoInfo::InitAsDefaultInstance() {
}

MobileAdRequest_GeoInfo::MobileAdRequest_GeoInfo(const MobileAdRequest_GeoInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdRequest_GeoInfo::SharedCtor() {
  _cached_size_ = 0;
  country_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  region_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  city_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  latitude_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  longitude_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  isp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  domain_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mcc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mnc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  usage_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  carrier_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdRequest_GeoInfo::~MobileAdRequest_GeoInfo() {
  SharedDtor();
}

void MobileAdRequest_GeoInfo::SharedDtor() {
  if (country_ != &::google::protobuf::internal::kEmptyString) {
    delete country_;
  }
  if (region_ != &::google::protobuf::internal::kEmptyString) {
    delete region_;
  }
  if (city_ != &::google::protobuf::internal::kEmptyString) {
    delete city_;
  }
  if (latitude_ != &::google::protobuf::internal::kEmptyString) {
    delete latitude_;
  }
  if (longitude_ != &::google::protobuf::internal::kEmptyString) {
    delete longitude_;
  }
  if (isp_ != &::google::protobuf::internal::kEmptyString) {
    delete isp_;
  }
  if (domain_ != &::google::protobuf::internal::kEmptyString) {
    delete domain_;
  }
  if (mcc_ != &::google::protobuf::internal::kEmptyString) {
    delete mcc_;
  }
  if (mnc_ != &::google::protobuf::internal::kEmptyString) {
    delete mnc_;
  }
  if (usage_type_ != &::google::protobuf::internal::kEmptyString) {
    delete usage_type_;
  }
  if (carrier_ != &::google::protobuf::internal::kEmptyString) {
    delete carrier_;
  }
  if (this != default_instance_) {
  }
}

void MobileAdRequest_GeoInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdRequest_GeoInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdRequest_GeoInfo_descriptor_;
}

const MobileAdRequest_GeoInfo& MobileAdRequest_GeoInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MobileAdRequest_2eproto();
  return *default_instance_;
}

MobileAdRequest_GeoInfo* MobileAdRequest_GeoInfo::default_instance_ = NULL;

MobileAdRequest_GeoInfo* MobileAdRequest_GeoInfo::New() const {
  return new MobileAdRequest_GeoInfo;
}

void MobileAdRequest_GeoInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_country()) {
      if (country_ != &::google::protobuf::internal::kEmptyString) {
        country_->clear();
      }
    }
    if (has_region()) {
      if (region_ != &::google::protobuf::internal::kEmptyString) {
        region_->clear();
      }
    }
    if (has_city()) {
      if (city_ != &::google::protobuf::internal::kEmptyString) {
        city_->clear();
      }
    }
    if (has_latitude()) {
      if (latitude_ != &::google::protobuf::internal::kEmptyString) {
        latitude_->clear();
      }
    }
    if (has_longitude()) {
      if (longitude_ != &::google::protobuf::internal::kEmptyString) {
        longitude_->clear();
      }
    }
    if (has_isp()) {
      if (isp_ != &::google::protobuf::internal::kEmptyString) {
        isp_->clear();
      }
    }
    if (has_domain()) {
      if (domain_ != &::google::protobuf::internal::kEmptyString) {
        domain_->clear();
      }
    }
    if (has_mcc()) {
      if (mcc_ != &::google::protobuf::internal::kEmptyString) {
        mcc_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_mnc()) {
      if (mnc_ != &::google::protobuf::internal::kEmptyString) {
        mnc_->clear();
      }
    }
    if (has_usage_type()) {
      if (usage_type_ != &::google::protobuf::internal::kEmptyString) {
        usage_type_->clear();
      }
    }
    if (has_carrier()) {
      if (carrier_ != &::google::protobuf::internal::kEmptyString) {
        carrier_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdRequest_GeoInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string country = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->country().data(), this->country().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_region;
        break;
      }

      // optional string region = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_region:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->region().data(), this->region().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_city;
        break;
      }

      // optional string city = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_city:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->city().data(), this->city().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_latitude;
        break;
      }

      // optional string latitude = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_latitude:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_latitude()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->latitude().data(), this->latitude().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_longitude;
        break;
      }

      // optional string longitude = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_longitude:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_longitude()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->longitude().data(), this->longitude().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_isp;
        break;
      }

      // optional string isp = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_isp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_isp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->isp().data(), this->isp().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_domain;
        break;
      }

      // optional string domain = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_domain:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->domain().data(), this->domain().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_mcc;
        break;
      }

      // optional string mcc = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mcc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mcc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mcc().data(), this->mcc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_mnc;
        break;
      }

      // optional string mnc = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mnc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mnc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mnc().data(), this->mnc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_usage_type;
        break;
      }

      // optional string usage_type = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_usage_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usage_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->usage_type().data(), this->usage_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_carrier;
        break;
      }

      // optional string carrier = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_carrier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_carrier()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->carrier().data(), this->carrier().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdRequest_GeoInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string country = 1;
  if (has_country()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->country(), output);
  }

  // optional string region = 2;
  if (has_region()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->region().data(), this->region().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->region(), output);
  }

  // optional string city = 3;
  if (has_city()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->city(), output);
  }

  // optional string latitude = 4;
  if (has_latitude()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->latitude().data(), this->latitude().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->latitude(), output);
  }

  // optional string longitude = 5;
  if (has_longitude()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->longitude().data(), this->longitude().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->longitude(), output);
  }

  // optional string isp = 6;
  if (has_isp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->isp().data(), this->isp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->isp(), output);
  }

  // optional string domain = 7;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->domain(), output);
  }

  // optional string mcc = 8;
  if (has_mcc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mcc().data(), this->mcc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->mcc(), output);
  }

  // optional string mnc = 9;
  if (has_mnc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mnc().data(), this->mnc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->mnc(), output);
  }

  // optional string usage_type = 10;
  if (has_usage_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->usage_type().data(), this->usage_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->usage_type(), output);
  }

  // optional string carrier = 11;
  if (has_carrier()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->carrier().data(), this->carrier().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->carrier(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdRequest_GeoInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string country = 1;
  if (has_country()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->country(), target);
  }

  // optional string region = 2;
  if (has_region()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->region().data(), this->region().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->region(), target);
  }

  // optional string city = 3;
  if (has_city()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->city(), target);
  }

  // optional string latitude = 4;
  if (has_latitude()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->latitude().data(), this->latitude().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->latitude(), target);
  }

  // optional string longitude = 5;
  if (has_longitude()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->longitude().data(), this->longitude().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->longitude(), target);
  }

  // optional string isp = 6;
  if (has_isp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->isp().data(), this->isp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->isp(), target);
  }

  // optional string domain = 7;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->domain(), target);
  }

  // optional string mcc = 8;
  if (has_mcc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mcc().data(), this->mcc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->mcc(), target);
  }

  // optional string mnc = 9;
  if (has_mnc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mnc().data(), this->mnc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->mnc(), target);
  }

  // optional string usage_type = 10;
  if (has_usage_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->usage_type().data(), this->usage_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->usage_type(), target);
  }

  // optional string carrier = 11;
  if (has_carrier()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->carrier().data(), this->carrier().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->carrier(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdRequest_GeoInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string country = 1;
    if (has_country()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country());
    }

    // optional string region = 2;
    if (has_region()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->region());
    }

    // optional string city = 3;
    if (has_city()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->city());
    }

    // optional string latitude = 4;
    if (has_latitude()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->latitude());
    }

    // optional string longitude = 5;
    if (has_longitude()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->longitude());
    }

    // optional string isp = 6;
    if (has_isp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->isp());
    }

    // optional string domain = 7;
    if (has_domain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->domain());
    }

    // optional string mcc = 8;
    if (has_mcc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mcc());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string mnc = 9;
    if (has_mnc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mnc());
    }

    // optional string usage_type = 10;
    if (has_usage_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usage_type());
    }

    // optional string carrier = 11;
    if (has_carrier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->carrier());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdRequest_GeoInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdRequest_GeoInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdRequest_GeoInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdRequest_GeoInfo::MergeFrom(const MobileAdRequest_GeoInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_country()) {
      set_country(from.country());
    }
    if (from.has_region()) {
      set_region(from.region());
    }
    if (from.has_city()) {
      set_city(from.city());
    }
    if (from.has_latitude()) {
      set_latitude(from.latitude());
    }
    if (from.has_longitude()) {
      set_longitude(from.longitude());
    }
    if (from.has_isp()) {
      set_isp(from.isp());
    }
    if (from.has_domain()) {
      set_domain(from.domain());
    }
    if (from.has_mcc()) {
      set_mcc(from.mcc());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_mnc()) {
      set_mnc(from.mnc());
    }
    if (from.has_usage_type()) {
      set_usage_type(from.usage_type());
    }
    if (from.has_carrier()) {
      set_carrier(from.carrier());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdRequest_GeoInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdRequest_GeoInfo::CopyFrom(const MobileAdRequest_GeoInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdRequest_GeoInfo::IsInitialized() const {

  return true;
}

void MobileAdRequest_GeoInfo::Swap(MobileAdRequest_GeoInfo* other) {
  if (other != this) {
    std::swap(country_, other->country_);
    std::swap(region_, other->region_);
    std::swap(city_, other->city_);
    std::swap(latitude_, other->latitude_);
    std::swap(longitude_, other->longitude_);
    std::swap(isp_, other->isp_);
    std::swap(domain_, other->domain_);
    std::swap(mcc_, other->mcc_);
    std::swap(mnc_, other->mnc_);
    std::swap(usage_type_, other->usage_type_);
    std::swap(carrier_, other->carrier_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdRequest_GeoInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdRequest_GeoInfo_descriptor_;
  metadata.reflection = MobileAdRequest_GeoInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MobileAdRequest::kIdFieldNumber;
const int MobileAdRequest::kAidFieldNumber;
const int MobileAdRequest::kVersionFieldNumber;
const int MobileAdRequest::kTypeFieldNumber;
const int MobileAdRequest::kTimestampFieldNumber;
const int MobileAdRequest::kAdspaceWidthFieldNumber;
const int MobileAdRequest::kAdspaceHeightFieldNumber;
const int MobileAdRequest::kOrientationFieldNumber;
const int MobileAdRequest::kPackageNameFieldNumber;
const int MobileAdRequest::kSchemaFieldNumber;
const int MobileAdRequest::kSectionFieldNumber;
const int MobileAdRequest::kSessionFieldNumber;
const int MobileAdRequest::kDnsIpFieldNumber;
const int MobileAdRequest::kDeviceFieldNumber;
const int MobileAdRequest::kUserFieldNumber;
const int MobileAdRequest::kGeoInfoFieldNumber;
const int MobileAdRequest::kFrequencyFieldNumber;
const int MobileAdRequest::kAppTypeFieldNumber;
const int MobileAdRequest::kTrafficQualityFieldNumber;
const int MobileAdRequest::kInventoryQualityFieldNumber;
const int MobileAdRequest::kTestFieldNumber;
#endif  // !_MSC_VER

MobileAdRequest::MobileAdRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdRequest::InitAsDefaultInstance() {
  device_ = const_cast< ::com::rj::protos::mobile::MobileAdRequest_Device*>(&::com::rj::protos::mobile::MobileAdRequest_Device::default_instance());
  user_ = const_cast< ::com::rj::protos::mobile::MobileAdRequest_User*>(&::com::rj::protos::mobile::MobileAdRequest_User::default_instance());
  geoinfo_ = const_cast< ::com::rj::protos::mobile::MobileAdRequest_GeoInfo*>(&::com::rj::protos::mobile::MobileAdRequest_GeoInfo::default_instance());
}

MobileAdRequest::MobileAdRequest(const MobileAdRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdRequest::SharedCtor() {
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  aid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  version_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  timestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  adspacewidth_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  adspaceheight_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  orientation_ = 0;
  packagename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  schema_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  section_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  session_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  dnsip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  device_ = NULL;
  user_ = NULL;
  geoinfo_ = NULL;
  apptype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  trafficquality_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  inventoryquality_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  test_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdRequest::~MobileAdRequest() {
  SharedDtor();
}

void MobileAdRequest::SharedDtor() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (aid_ != &::google::protobuf::internal::kEmptyString) {
    delete aid_;
  }
  if (version_ != &::google::protobuf::internal::kEmptyString) {
    delete version_;
  }
  if (timestamp_ != &::google::protobuf::internal::kEmptyString) {
    delete timestamp_;
  }
  if (adspacewidth_ != &::google::protobuf::internal::kEmptyString) {
    delete adspacewidth_;
  }
  if (adspaceheight_ != &::google::protobuf::internal::kEmptyString) {
    delete adspaceheight_;
  }
  if (packagename_ != &::google::protobuf::internal::kEmptyString) {
    delete packagename_;
  }
  if (schema_ != &::google::protobuf::internal::kEmptyString) {
    delete schema_;
  }
  if (section_ != &::google::protobuf::internal::kEmptyString) {
    delete section_;
  }
  if (session_ != &::google::protobuf::internal::kEmptyString) {
    delete session_;
  }
  if (dnsip_ != &::google::protobuf::internal::kEmptyString) {
    delete dnsip_;
  }
  if (apptype_ != &::google::protobuf::internal::kEmptyString) {
    delete apptype_;
  }
  if (trafficquality_ != &::google::protobuf::internal::kEmptyString) {
    delete trafficquality_;
  }
  if (inventoryquality_ != &::google::protobuf::internal::kEmptyString) {
    delete inventoryquality_;
  }
  if (this != default_instance_) {
    delete device_;
    delete user_;
    delete geoinfo_;
  }
}

void MobileAdRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdRequest_descriptor_;
}

const MobileAdRequest& MobileAdRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MobileAdRequest_2eproto();
  return *default_instance_;
}

MobileAdRequest* MobileAdRequest::default_instance_ = NULL;

MobileAdRequest* MobileAdRequest::New() const {
  return new MobileAdRequest;
}

void MobileAdRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
    if (has_aid()) {
      if (aid_ != &::google::protobuf::internal::kEmptyString) {
        aid_->clear();
      }
    }
    if (has_version()) {
      if (version_ != &::google::protobuf::internal::kEmptyString) {
        version_->clear();
      }
    }
    type_ = 0;
    if (has_timestamp()) {
      if (timestamp_ != &::google::protobuf::internal::kEmptyString) {
        timestamp_->clear();
      }
    }
    if (has_adspacewidth()) {
      if (adspacewidth_ != &::google::protobuf::internal::kEmptyString) {
        adspacewidth_->clear();
      }
    }
    if (has_adspaceheight()) {
      if (adspaceheight_ != &::google::protobuf::internal::kEmptyString) {
        adspaceheight_->clear();
      }
    }
    orientation_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_packagename()) {
      if (packagename_ != &::google::protobuf::internal::kEmptyString) {
        packagename_->clear();
      }
    }
    if (has_schema()) {
      if (schema_ != &::google::protobuf::internal::kEmptyString) {
        schema_->clear();
      }
    }
    if (has_section()) {
      if (section_ != &::google::protobuf::internal::kEmptyString) {
        section_->clear();
      }
    }
    if (has_session()) {
      if (session_ != &::google::protobuf::internal::kEmptyString) {
        session_->clear();
      }
    }
    if (has_dnsip()) {
      if (dnsip_ != &::google::protobuf::internal::kEmptyString) {
        dnsip_->clear();
      }
    }
    if (has_device()) {
      if (device_ != NULL) device_->::com::rj::protos::mobile::MobileAdRequest_Device::Clear();
    }
    if (has_user()) {
      if (user_ != NULL) user_->::com::rj::protos::mobile::MobileAdRequest_User::Clear();
    }
    if (has_geoinfo()) {
      if (geoinfo_ != NULL) geoinfo_->::com::rj::protos::mobile::MobileAdRequest_GeoInfo::Clear();
    }
  }
  if (_has_bits_[17 / 32] & (0xffu << (17 % 32))) {
    if (has_apptype()) {
      if (apptype_ != &::google::protobuf::internal::kEmptyString) {
        apptype_->clear();
      }
    }
    if (has_trafficquality()) {
      if (trafficquality_ != &::google::protobuf::internal::kEmptyString) {
        trafficquality_->clear();
      }
    }
    if (has_inventoryquality()) {
      if (inventoryquality_ != &::google::protobuf::internal::kEmptyString) {
        inventoryquality_->clear();
      }
    }
    test_ = 0;
  }
  frequency_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_aid;
        break;
      }

      // required string aid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_aid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_aid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->aid().data(), this->aid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_version;
        break;
      }

      // optional string version = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdRequest.AdType type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::rj::protos::mobile::MobileAdRequest_AdType_IsValid(value)) {
            set_type(static_cast< ::com::rj::protos::mobile::MobileAdRequest_AdType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_timestamp;
        break;
      }

      // optional string timestamp = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_timestamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timestamp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->timestamp().data(), this->timestamp().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_adspaceWidth;
        break;
      }

      // optional string adspaceWidth = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adspaceWidth:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adspacewidth()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->adspacewidth().data(), this->adspacewidth().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_adspaceHeight;
        break;
      }

      // optional string adspaceHeight = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adspaceHeight:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adspaceheight()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->adspaceheight().data(), this->adspaceheight().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_orientation;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdRequest.Orientation orientation = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_orientation:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::rj::protos::mobile::MobileAdRequest_Orientation_IsValid(value)) {
            set_orientation(static_cast< ::com::rj::protos::mobile::MobileAdRequest_Orientation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_packageName;
        break;
      }

      // optional string packageName = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_packageName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_packagename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->packagename().data(), this->packagename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_schema;
        break;
      }

      // optional string schema = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_schema:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_schema()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->schema().data(), this->schema().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_section;
        break;
      }

      // optional string section = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_section:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_section()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->section().data(), this->section().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_session;
        break;
      }

      // optional string session = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_session:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->session().data(), this->session().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_dnsIp;
        break;
      }

      // optional string dnsIp = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dnsIp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dnsip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->dnsip().data(), this->dnsip().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_device;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdRequest.Device device = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_device:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_device()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_user;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdRequest.User user = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_user:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_geoInfo;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdRequest.GeoInfo geoInfo = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_geoInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_geoinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_frequency;
        break;
      }

      // repeated .com.rj.protos.mobile.MobileAdRequest.Frequency frequency = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_frequency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_frequency()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_frequency;
        if (input->ExpectTag(146)) goto parse_appType;
        break;
      }

      // optional string appType = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_appType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apptype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->apptype().data(), this->apptype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_trafficQuality;
        break;
      }

      // optional string trafficQuality = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_trafficQuality:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trafficquality()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->trafficquality().data(), this->trafficquality().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_inventoryQuality;
        break;
      }

      // optional string inventoryQuality = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_inventoryQuality:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inventoryquality()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->inventoryquality().data(), this->inventoryquality().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_test;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdRequest.TestFlag test = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_test:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::rj::protos::mobile::MobileAdRequest_TestFlag_IsValid(value)) {
            set_test(static_cast< ::com::rj::protos::mobile::MobileAdRequest_TestFlag >(value));
          } else {
            mutable_unknown_fields()->AddVarint(21, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->id(), output);
  }

  // required string aid = 2;
  if (has_aid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->aid().data(), this->aid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->aid(), output);
  }

  // optional string version = 3;
  if (has_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->version(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.AdType type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // optional string timestamp = 5;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->timestamp(), output);
  }

  // optional string adspaceWidth = 6;
  if (has_adspacewidth()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adspacewidth().data(), this->adspacewidth().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->adspacewidth(), output);
  }

  // optional string adspaceHeight = 7;
  if (has_adspaceheight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adspaceheight().data(), this->adspaceheight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->adspaceheight(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.Orientation orientation = 8;
  if (has_orientation()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->orientation(), output);
  }

  // optional string packageName = 9;
  if (has_packagename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->packagename().data(), this->packagename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->packagename(), output);
  }

  // optional string schema = 10;
  if (has_schema()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->schema().data(), this->schema().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->schema(), output);
  }

  // optional string section = 11;
  if (has_section()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->section().data(), this->section().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->section(), output);
  }

  // optional string session = 12;
  if (has_session()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->session().data(), this->session().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->session(), output);
  }

  // optional string dnsIp = 13;
  if (has_dnsip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dnsip().data(), this->dnsip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->dnsip(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.Device device = 14;
  if (has_device()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->device(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.User user = 15;
  if (has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->user(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.GeoInfo geoInfo = 16;
  if (has_geoinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->geoinfo(), output);
  }

  // repeated .com.rj.protos.mobile.MobileAdRequest.Frequency frequency = 17;
  for (int i = 0; i < this->frequency_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->frequency(i), output);
  }

  // optional string appType = 18;
  if (has_apptype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->apptype().data(), this->apptype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->apptype(), output);
  }

  // optional string trafficQuality = 19;
  if (has_trafficquality()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->trafficquality().data(), this->trafficquality().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->trafficquality(), output);
  }

  // optional string inventoryQuality = 20;
  if (has_inventoryquality()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->inventoryquality().data(), this->inventoryquality().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->inventoryquality(), output);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.TestFlag test = 21;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      21, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string aid = 2;
  if (has_aid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->aid().data(), this->aid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->aid(), target);
  }

  // optional string version = 3;
  if (has_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->version(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.AdType type = 4;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // optional string timestamp = 5;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->timestamp(), target);
  }

  // optional string adspaceWidth = 6;
  if (has_adspacewidth()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adspacewidth().data(), this->adspacewidth().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->adspacewidth(), target);
  }

  // optional string adspaceHeight = 7;
  if (has_adspaceheight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adspaceheight().data(), this->adspaceheight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->adspaceheight(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.Orientation orientation = 8;
  if (has_orientation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->orientation(), target);
  }

  // optional string packageName = 9;
  if (has_packagename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->packagename().data(), this->packagename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->packagename(), target);
  }

  // optional string schema = 10;
  if (has_schema()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->schema().data(), this->schema().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->schema(), target);
  }

  // optional string section = 11;
  if (has_section()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->section().data(), this->section().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->section(), target);
  }

  // optional string session = 12;
  if (has_session()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->session().data(), this->session().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->session(), target);
  }

  // optional string dnsIp = 13;
  if (has_dnsip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dnsip().data(), this->dnsip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->dnsip(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.Device device = 14;
  if (has_device()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->device(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.User user = 15;
  if (has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->user(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.GeoInfo geoInfo = 16;
  if (has_geoinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->geoinfo(), target);
  }

  // repeated .com.rj.protos.mobile.MobileAdRequest.Frequency frequency = 17;
  for (int i = 0; i < this->frequency_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->frequency(i), target);
  }

  // optional string appType = 18;
  if (has_apptype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->apptype().data(), this->apptype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->apptype(), target);
  }

  // optional string trafficQuality = 19;
  if (has_trafficquality()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->trafficquality().data(), this->trafficquality().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->trafficquality(), target);
  }

  // optional string inventoryQuality = 20;
  if (has_inventoryquality()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->inventoryquality().data(), this->inventoryquality().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->inventoryquality(), target);
  }

  // optional .com.rj.protos.mobile.MobileAdRequest.TestFlag test = 21;
  if (has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      21, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // required string aid = 2;
    if (has_aid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->aid());
    }

    // optional string version = 3;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }

    // optional .com.rj.protos.mobile.MobileAdRequest.AdType type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional string timestamp = 5;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->timestamp());
    }

    // optional string adspaceWidth = 6;
    if (has_adspacewidth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->adspacewidth());
    }

    // optional string adspaceHeight = 7;
    if (has_adspaceheight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->adspaceheight());
    }

    // optional .com.rj.protos.mobile.MobileAdRequest.Orientation orientation = 8;
    if (has_orientation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->orientation());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string packageName = 9;
    if (has_packagename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->packagename());
    }

    // optional string schema = 10;
    if (has_schema()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->schema());
    }

    // optional string section = 11;
    if (has_section()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->section());
    }

    // optional string session = 12;
    if (has_session()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->session());
    }

    // optional string dnsIp = 13;
    if (has_dnsip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dnsip());
    }

    // optional .com.rj.protos.mobile.MobileAdRequest.Device device = 14;
    if (has_device()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->device());
    }

    // optional .com.rj.protos.mobile.MobileAdRequest.User user = 15;
    if (has_user()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->user());
    }

    // optional .com.rj.protos.mobile.MobileAdRequest.GeoInfo geoInfo = 16;
    if (has_geoinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->geoinfo());
    }

  }
  if (_has_bits_[17 / 32] & (0xffu << (17 % 32))) {
    // optional string appType = 18;
    if (has_apptype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->apptype());
    }

    // optional string trafficQuality = 19;
    if (has_trafficquality()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->trafficquality());
    }

    // optional string inventoryQuality = 20;
    if (has_inventoryquality()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->inventoryquality());
    }

    // optional .com.rj.protos.mobile.MobileAdRequest.TestFlag test = 21;
    if (has_test()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->test());
    }

  }
  // repeated .com.rj.protos.mobile.MobileAdRequest.Frequency frequency = 17;
  total_size += 2 * this->frequency_size();
  for (int i = 0; i < this->frequency_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frequency(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdRequest::MergeFrom(const MobileAdRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  frequency_.MergeFrom(from.frequency_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_aid()) {
      set_aid(from.aid());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_adspacewidth()) {
      set_adspacewidth(from.adspacewidth());
    }
    if (from.has_adspaceheight()) {
      set_adspaceheight(from.adspaceheight());
    }
    if (from.has_orientation()) {
      set_orientation(from.orientation());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_packagename()) {
      set_packagename(from.packagename());
    }
    if (from.has_schema()) {
      set_schema(from.schema());
    }
    if (from.has_section()) {
      set_section(from.section());
    }
    if (from.has_session()) {
      set_session(from.session());
    }
    if (from.has_dnsip()) {
      set_dnsip(from.dnsip());
    }
    if (from.has_device()) {
      mutable_device()->::com::rj::protos::mobile::MobileAdRequest_Device::MergeFrom(from.device());
    }
    if (from.has_user()) {
      mutable_user()->::com::rj::protos::mobile::MobileAdRequest_User::MergeFrom(from.user());
    }
    if (from.has_geoinfo()) {
      mutable_geoinfo()->::com::rj::protos::mobile::MobileAdRequest_GeoInfo::MergeFrom(from.geoinfo());
    }
  }
  if (from._has_bits_[17 / 32] & (0xffu << (17 % 32))) {
    if (from.has_apptype()) {
      set_apptype(from.apptype());
    }
    if (from.has_trafficquality()) {
      set_trafficquality(from.trafficquality());
    }
    if (from.has_inventoryquality()) {
      set_inventoryquality(from.inventoryquality());
    }
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdRequest::CopyFrom(const MobileAdRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void MobileAdRequest::Swap(MobileAdRequest* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(aid_, other->aid_);
    std::swap(version_, other->version_);
    std::swap(type_, other->type_);
    std::swap(timestamp_, other->timestamp_);
    std::swap(adspacewidth_, other->adspacewidth_);
    std::swap(adspaceheight_, other->adspaceheight_);
    std::swap(orientation_, other->orientation_);
    std::swap(packagename_, other->packagename_);
    std::swap(schema_, other->schema_);
    std::swap(section_, other->section_);
    std::swap(session_, other->session_);
    std::swap(dnsip_, other->dnsip_);
    std::swap(device_, other->device_);
    std::swap(user_, other->user_);
    std::swap(geoinfo_, other->geoinfo_);
    frequency_.Swap(&other->frequency_);
    std::swap(apptype_, other->apptype_);
    std::swap(trafficquality_, other->trafficquality_);
    std::swap(inventoryquality_, other->inventoryquality_);
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdRequest_descriptor_;
  metadata.reflection = MobileAdRequest_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mobile
}  // namespace protos
}  // namespace rj
}  // namespace com

// @@protoc_insertion_point(global_scope)
