// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AdBidderResponseTemplate.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AdBidderResponseTemplate.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace rj {
namespace protos {
namespace msg {

namespace {

const ::google::protobuf::Descriptor* BidderResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidderResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidderResponse_Ad_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidderResponse_Ad_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidderResponse_Ad_AdSystem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidderResponse_Ad_AdSystem_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidderResponse_Ad_Impression_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidderResponse_Ad_Impression_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidderResponse_Ad_LinearCreative_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative_Video_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidderResponse_Ad_LinearCreative_Video_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative_LinearTrack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidderResponse_Ad_LinearCreative_LinearTrack_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative_LinearTrack_Progress_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidderResponse_Ad_LinearCreative_LinearTrack_Progress_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative_VideoClicks_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidderResponse_Ad_LinearCreative_VideoClicks_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative_AdParameters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidderResponse_Ad_LinearCreative_AdParameters_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative_Icon_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidderResponse_Ad_LinearCreative_Icon_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative_Icon_IconClickTracking_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidderResponse_Ad_LinearCreative_Icon_IconClickTracking_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidderResponse_Ad_CompanionCreative_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidderResponse_Ad_CompanionCreative_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidderResponse_Ad_CompanionCreative_Companion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidderResponse_Ad_CompanionCreative_Companion_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidderResponse_Ad_CompanionCreative_Companion_AdParameters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidderResponse_Ad_CompanionCreative_Companion_AdParameters_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_AdBidderResponseTemplate_2eproto() {
  protobuf_AddDesc_AdBidderResponseTemplate_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "AdBidderResponseTemplate.proto");
  GOOGLE_CHECK(file != NULL);
  BidderResponse_descriptor_ = file->message_type(0);
  static const int BidderResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse, bidderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse, ads_),
  };
  BidderResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BidderResponse_descriptor_,
      BidderResponse::default_instance_,
      BidderResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BidderResponse));
  BidderResponse_Ad_descriptor_ = BidderResponse_descriptor_->nested_type(0);
  static const int BidderResponse_Ad_offsets_[21] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, campaignid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, advertisername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, category_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, hasvpaidcreative_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, adid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, sequence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, adsystem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, adtag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, addesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, adsurvey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, adtitle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, imptrack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, errtrack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, linearcreative_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, companioncreative_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, extension_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, followadditionalwrappers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, allowmultipleads_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, fallbackonnoad_),
  };
  BidderResponse_Ad_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BidderResponse_Ad_descriptor_,
      BidderResponse_Ad::default_instance_,
      BidderResponse_Ad_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BidderResponse_Ad));
  BidderResponse_Ad_AdSystem_descriptor_ = BidderResponse_Ad_descriptor_->nested_type(0);
  static const int BidderResponse_Ad_AdSystem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_AdSystem, sys_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_AdSystem, version_),
  };
  BidderResponse_Ad_AdSystem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BidderResponse_Ad_AdSystem_descriptor_,
      BidderResponse_Ad_AdSystem::default_instance_,
      BidderResponse_Ad_AdSystem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_AdSystem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_AdSystem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BidderResponse_Ad_AdSystem));
  BidderResponse_Ad_Impression_descriptor_ = BidderResponse_Ad_descriptor_->nested_type(1);
  static const int BidderResponse_Ad_Impression_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_Impression, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_Impression, id_),
  };
  BidderResponse_Ad_Impression_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BidderResponse_Ad_Impression_descriptor_,
      BidderResponse_Ad_Impression::default_instance_,
      BidderResponse_Ad_Impression_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_Impression, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_Impression, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BidderResponse_Ad_Impression));
  BidderResponse_Ad_LinearCreative_descriptor_ = BidderResponse_Ad_descriptor_->nested_type(2);
  static const int BidderResponse_Ad_LinearCreative_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative, videos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative, lineartrack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative, videoclicks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative, adparameters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative, icons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative, duration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative, creativeextension_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative, sequence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative, adid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative, apiframework_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative, skipoffset_),
  };
  BidderResponse_Ad_LinearCreative_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BidderResponse_Ad_LinearCreative_descriptor_,
      BidderResponse_Ad_LinearCreative::default_instance_,
      BidderResponse_Ad_LinearCreative_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BidderResponse_Ad_LinearCreative));
  BidderResponse_Ad_LinearCreative_Video_descriptor_ = BidderResponse_Ad_LinearCreative_descriptor_->nested_type(0);
  static const int BidderResponse_Ad_LinearCreative_Video_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Video, mime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Video, asseturl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Video, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Video, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Video, delivery_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Video, bitrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Video, maintainaspectratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Video, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Video, scalable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Video, apiframework_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Video, codec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Video, minbitrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Video, maxbitrate_),
  };
  BidderResponse_Ad_LinearCreative_Video_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BidderResponse_Ad_LinearCreative_Video_descriptor_,
      BidderResponse_Ad_LinearCreative_Video::default_instance_,
      BidderResponse_Ad_LinearCreative_Video_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Video, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Video, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BidderResponse_Ad_LinearCreative_Video));
  BidderResponse_Ad_LinearCreative_LinearTrack_descriptor_ = BidderResponse_Ad_LinearCreative_descriptor_->nested_type(1);
  static const int BidderResponse_Ad_LinearCreative_LinearTrack_offsets_[21] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, creativeview_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, firstquartile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, midpoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, thirdquartile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, complete_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, mute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, unmute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, pause_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, rewind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, resume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, fullscreen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, expand_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, collapse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, acceptinvitation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, close_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, closelinear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, exitfullscreen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, acceptinvitationlinear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, skip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, progress_),
  };
  BidderResponse_Ad_LinearCreative_LinearTrack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BidderResponse_Ad_LinearCreative_LinearTrack_descriptor_,
      BidderResponse_Ad_LinearCreative_LinearTrack::default_instance_,
      BidderResponse_Ad_LinearCreative_LinearTrack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BidderResponse_Ad_LinearCreative_LinearTrack));
  BidderResponse_Ad_LinearCreative_LinearTrack_Progress_descriptor_ = BidderResponse_Ad_LinearCreative_LinearTrack_descriptor_->nested_type(0);
  static const int BidderResponse_Ad_LinearCreative_LinearTrack_Progress_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack_Progress, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack_Progress, url_),
  };
  BidderResponse_Ad_LinearCreative_LinearTrack_Progress_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BidderResponse_Ad_LinearCreative_LinearTrack_Progress_descriptor_,
      BidderResponse_Ad_LinearCreative_LinearTrack_Progress::default_instance_,
      BidderResponse_Ad_LinearCreative_LinearTrack_Progress_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack_Progress, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_LinearTrack_Progress, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BidderResponse_Ad_LinearCreative_LinearTrack_Progress));
  BidderResponse_Ad_LinearCreative_VideoClicks_descriptor_ = BidderResponse_Ad_LinearCreative_descriptor_->nested_type(2);
  static const int BidderResponse_Ad_LinearCreative_VideoClicks_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_VideoClicks, clicktracking_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_VideoClicks, clickthrough_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_VideoClicks, customclick_),
  };
  BidderResponse_Ad_LinearCreative_VideoClicks_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BidderResponse_Ad_LinearCreative_VideoClicks_descriptor_,
      BidderResponse_Ad_LinearCreative_VideoClicks::default_instance_,
      BidderResponse_Ad_LinearCreative_VideoClicks_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_VideoClicks, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_VideoClicks, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BidderResponse_Ad_LinearCreative_VideoClicks));
  BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking_descriptor_ = BidderResponse_Ad_LinearCreative_VideoClicks_descriptor_->nested_type(0);
  static const int BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking, id_),
  };
  BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking_descriptor_,
      BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::default_instance_,
      BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking));
  BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough_descriptor_ = BidderResponse_Ad_LinearCreative_VideoClicks_descriptor_->nested_type(1);
  static const int BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough, id_),
  };
  BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough_descriptor_,
      BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::default_instance_,
      BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough));
  BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick_descriptor_ = BidderResponse_Ad_LinearCreative_VideoClicks_descriptor_->nested_type(2);
  static const int BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick, id_),
  };
  BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick_descriptor_,
      BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::default_instance_,
      BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick));
  BidderResponse_Ad_LinearCreative_AdParameters_descriptor_ = BidderResponse_Ad_LinearCreative_descriptor_->nested_type(3);
  static const int BidderResponse_Ad_LinearCreative_AdParameters_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_AdParameters, para_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_AdParameters, xmlencoded_),
  };
  BidderResponse_Ad_LinearCreative_AdParameters_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BidderResponse_Ad_LinearCreative_AdParameters_descriptor_,
      BidderResponse_Ad_LinearCreative_AdParameters::default_instance_,
      BidderResponse_Ad_LinearCreative_AdParameters_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_AdParameters, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_AdParameters, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BidderResponse_Ad_LinearCreative_AdParameters));
  BidderResponse_Ad_LinearCreative_Icon_descriptor_ = BidderResponse_Ad_LinearCreative_descriptor_->nested_type(4);
  static const int BidderResponse_Ad_LinearCreative_Icon_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Icon, program_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Icon, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Icon, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Icon, xposition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Icon, yposition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Icon, duration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Icon, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Icon, apiframework_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Icon, staticurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Icon, creativetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Icon, iframeurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Icon, html_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Icon, iconclickthrough_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Icon, iconclicktracking_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Icon, iconviewtracking_),
  };
  BidderResponse_Ad_LinearCreative_Icon_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BidderResponse_Ad_LinearCreative_Icon_descriptor_,
      BidderResponse_Ad_LinearCreative_Icon::default_instance_,
      BidderResponse_Ad_LinearCreative_Icon_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Icon, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Icon, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BidderResponse_Ad_LinearCreative_Icon));
  BidderResponse_Ad_LinearCreative_Icon_IconClickTracking_descriptor_ = BidderResponse_Ad_LinearCreative_Icon_descriptor_->nested_type(0);
  static const int BidderResponse_Ad_LinearCreative_Icon_IconClickTracking_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Icon_IconClickTracking, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Icon_IconClickTracking, id_),
  };
  BidderResponse_Ad_LinearCreative_Icon_IconClickTracking_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BidderResponse_Ad_LinearCreative_Icon_IconClickTracking_descriptor_,
      BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::default_instance_,
      BidderResponse_Ad_LinearCreative_Icon_IconClickTracking_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Icon_IconClickTracking, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_LinearCreative_Icon_IconClickTracking, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BidderResponse_Ad_LinearCreative_Icon_IconClickTracking));
  BidderResponse_Ad_CompanionCreative_descriptor_ = BidderResponse_Ad_descriptor_->nested_type(3);
  static const int BidderResponse_Ad_CompanionCreative_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative, sequence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative, adid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative, required_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative, apiframework_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative, creativeextension_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative, companion_),
  };
  BidderResponse_Ad_CompanionCreative_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BidderResponse_Ad_CompanionCreative_descriptor_,
      BidderResponse_Ad_CompanionCreative::default_instance_,
      BidderResponse_Ad_CompanionCreative_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BidderResponse_Ad_CompanionCreative));
  BidderResponse_Ad_CompanionCreative_Companion_descriptor_ = BidderResponse_Ad_CompanionCreative_descriptor_->nested_type(0);
  static const int BidderResponse_Ad_CompanionCreative_Companion_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion, expandedwidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion, expandedheight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion, apiframework_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion, assetwidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion, assetheight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion, adslotid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion, clickthroughurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion, alttext_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion, companionclicktracking_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion, adparameters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion, staticurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion, creativetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion, iframeurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion, html_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion, creativeview_),
  };
  BidderResponse_Ad_CompanionCreative_Companion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BidderResponse_Ad_CompanionCreative_Companion_descriptor_,
      BidderResponse_Ad_CompanionCreative_Companion::default_instance_,
      BidderResponse_Ad_CompanionCreative_Companion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BidderResponse_Ad_CompanionCreative_Companion));
  BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking_descriptor_ = BidderResponse_Ad_CompanionCreative_Companion_descriptor_->nested_type(0);
  static const int BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking, id_),
  };
  BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking_descriptor_,
      BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::default_instance_,
      BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking));
  BidderResponse_Ad_CompanionCreative_Companion_AdParameters_descriptor_ = BidderResponse_Ad_CompanionCreative_Companion_descriptor_->nested_type(1);
  static const int BidderResponse_Ad_CompanionCreative_Companion_AdParameters_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion_AdParameters, para_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion_AdParameters, xmlencoded_),
  };
  BidderResponse_Ad_CompanionCreative_Companion_AdParameters_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BidderResponse_Ad_CompanionCreative_Companion_AdParameters_descriptor_,
      BidderResponse_Ad_CompanionCreative_Companion_AdParameters::default_instance_,
      BidderResponse_Ad_CompanionCreative_Companion_AdParameters_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion_AdParameters, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidderResponse_Ad_CompanionCreative_Companion_AdParameters, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BidderResponse_Ad_CompanionCreative_Companion_AdParameters));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_AdBidderResponseTemplate_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BidderResponse_descriptor_, &BidderResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BidderResponse_Ad_descriptor_, &BidderResponse_Ad::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BidderResponse_Ad_AdSystem_descriptor_, &BidderResponse_Ad_AdSystem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BidderResponse_Ad_Impression_descriptor_, &BidderResponse_Ad_Impression::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BidderResponse_Ad_LinearCreative_descriptor_, &BidderResponse_Ad_LinearCreative::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BidderResponse_Ad_LinearCreative_Video_descriptor_, &BidderResponse_Ad_LinearCreative_Video::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BidderResponse_Ad_LinearCreative_LinearTrack_descriptor_, &BidderResponse_Ad_LinearCreative_LinearTrack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BidderResponse_Ad_LinearCreative_LinearTrack_Progress_descriptor_, &BidderResponse_Ad_LinearCreative_LinearTrack_Progress::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BidderResponse_Ad_LinearCreative_VideoClicks_descriptor_, &BidderResponse_Ad_LinearCreative_VideoClicks::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking_descriptor_, &BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough_descriptor_, &BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick_descriptor_, &BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BidderResponse_Ad_LinearCreative_AdParameters_descriptor_, &BidderResponse_Ad_LinearCreative_AdParameters::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BidderResponse_Ad_LinearCreative_Icon_descriptor_, &BidderResponse_Ad_LinearCreative_Icon::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BidderResponse_Ad_LinearCreative_Icon_IconClickTracking_descriptor_, &BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BidderResponse_Ad_CompanionCreative_descriptor_, &BidderResponse_Ad_CompanionCreative::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BidderResponse_Ad_CompanionCreative_Companion_descriptor_, &BidderResponse_Ad_CompanionCreative_Companion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking_descriptor_, &BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BidderResponse_Ad_CompanionCreative_Companion_AdParameters_descriptor_, &BidderResponse_Ad_CompanionCreative_Companion_AdParameters::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_AdBidderResponseTemplate_2eproto() {
  delete BidderResponse::default_instance_;
  delete BidderResponse_reflection_;
  delete BidderResponse_Ad::default_instance_;
  delete BidderResponse_Ad_reflection_;
  delete BidderResponse_Ad_AdSystem::default_instance_;
  delete BidderResponse_Ad_AdSystem_reflection_;
  delete BidderResponse_Ad_Impression::default_instance_;
  delete BidderResponse_Ad_Impression_reflection_;
  delete BidderResponse_Ad_LinearCreative::default_instance_;
  delete BidderResponse_Ad_LinearCreative_reflection_;
  delete BidderResponse_Ad_LinearCreative_Video::default_instance_;
  delete BidderResponse_Ad_LinearCreative_Video_reflection_;
  delete BidderResponse_Ad_LinearCreative_LinearTrack::default_instance_;
  delete BidderResponse_Ad_LinearCreative_LinearTrack_reflection_;
  delete BidderResponse_Ad_LinearCreative_LinearTrack_Progress::default_instance_;
  delete BidderResponse_Ad_LinearCreative_LinearTrack_Progress_reflection_;
  delete BidderResponse_Ad_LinearCreative_VideoClicks::default_instance_;
  delete BidderResponse_Ad_LinearCreative_VideoClicks_reflection_;
  delete BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::default_instance_;
  delete BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking_reflection_;
  delete BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::default_instance_;
  delete BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough_reflection_;
  delete BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::default_instance_;
  delete BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick_reflection_;
  delete BidderResponse_Ad_LinearCreative_AdParameters::default_instance_;
  delete BidderResponse_Ad_LinearCreative_AdParameters_reflection_;
  delete BidderResponse_Ad_LinearCreative_Icon::default_instance_;
  delete BidderResponse_Ad_LinearCreative_Icon_reflection_;
  delete BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::default_instance_;
  delete BidderResponse_Ad_LinearCreative_Icon_IconClickTracking_reflection_;
  delete BidderResponse_Ad_CompanionCreative::default_instance_;
  delete BidderResponse_Ad_CompanionCreative_reflection_;
  delete BidderResponse_Ad_CompanionCreative_Companion::default_instance_;
  delete BidderResponse_Ad_CompanionCreative_Companion_reflection_;
  delete BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::default_instance_;
  delete BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking_reflection_;
  delete BidderResponse_Ad_CompanionCreative_Companion_AdParameters::default_instance_;
  delete BidderResponse_Ad_CompanionCreative_Companion_AdParameters_reflection_;
}

void protobuf_AddDesc_AdBidderResponseTemplate_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036AdBidderResponseTemplate.proto\022\021com.rj"
    ".protos.msg\"\325\036\n\016BidderResponse\022\n\n\002id\030\001 \001"
    "(\t\022\020\n\010bidderId\030\002 \001(\t\0221\n\003ads\030\003 \003(\0132$.com."
    "rj.protos.msg.BidderResponse.Ad\032\361\035\n\002Ad\022\r"
    "\n\005price\030\001 \001(\t\022\022\n\ncampaignId\030\002 \001(\t\022\026\n\016adv"
    "ertiserName\030\003 \001(\t\022\020\n\010category\030\004 \001(\t\022\030\n\020h"
    "asVpaidCreative\030\020 \001(\010\022\014\n\004adId\030\005 \001(\t\022\020\n\010s"
    "equence\030\024 \001(\t\022\014\n\004type\030\006 \001(\t\022\?\n\010adSystem\030"
    "\007 \001(\0132-.com.rj.protos.msg.BidderResponse"
    ".Ad.AdSystem\022\r\n\005adTag\030\010 \001(\t\022\016\n\006adDesc\030\t "
    "\001(\t\022\020\n\010adSurvey\030\n \003(\t\022\017\n\007adTitle\030\021 \001(\t\022A"
    "\n\010impTrack\030\023 \003(\0132/.com.rj.protos.msg.Bid"
    "derResponse.Ad.Impression\022\020\n\010errTrack\030\014 "
    "\003(\t\022K\n\016linearCreative\030\r \003(\01323.com.rj.pro"
    "tos.msg.BidderResponse.Ad.LinearCreative"
    "\022Q\n\021companionCreative\030\016 \001(\01326.com.rj.pro"
    "tos.msg.BidderResponse.Ad.CompanionCreat"
    "ive\022\021\n\textension\030\022 \003(\t\022 \n\030followAddition"
    "alWrappers\030\025 \001(\t\022\030\n\020allowMultipleAds\030\026 \001"
    "(\t\022\026\n\016fallbackOnNoAd\030\027 \001(\t\032(\n\010AdSystem\022\013"
    "\n\003sys\030\001 \001(\t\022\017\n\007version\030\002 \001(\t\032%\n\nImpressi"
    "on\022\013\n\003url\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\032\305\021\n\016LinearCr"
    "eative\022I\n\006videos\030\001 \003(\01329.com.rj.protos.m"
    "sg.BidderResponse.Ad.LinearCreative.Vide"
    "o\022T\n\013linearTrack\030\002 \001(\0132\?.com.rj.protos.m"
    "sg.BidderResponse.Ad.LinearCreative.Line"
    "arTrack\022T\n\013videoClicks\030\003 \001(\0132\?.com.rj.pr"
    "otos.msg.BidderResponse.Ad.LinearCreativ"
    "e.VideoClicks\022V\n\014adParameters\030\004 \001(\0132@.co"
    "m.rj.protos.msg.BidderResponse.Ad.Linear"
    "Creative.AdParameters\022G\n\005icons\030\005 \003(\01328.c"
    "om.rj.protos.msg.BidderResponse.Ad.Linea"
    "rCreative.Icon\022\020\n\010duration\030\006 \001(\t\022\031\n\021crea"
    "tiveExtension\030\020 \003(\t\022\n\n\002id\030\007 \001(\t\022\020\n\010seque"
    "nce\030\010 \001(\t\022\014\n\004adId\030\t \001(\t\022\024\n\014apiFramework\030"
    "\021 \001(\t\022\022\n\nskipoffset\030\017 \001(\t\032\361\001\n\005Video\022\014\n\004m"
    "ime\030\001 \001(\t\022\020\n\010assetUrl\030\002 \001(\t\022\r\n\005width\030\003 \001"
    "(\t\022\016\n\006height\030\004 \001(\t\022\020\n\010delivery\030\005 \001(\t\022\017\n\007"
    "bitrate\030\006 \001(\t\022\033\n\023maintainAspectRatio\030\007 \001"
    "(\t\022\n\n\002id\030\010 \001(\t\022\020\n\010scalable\030\t \001(\t\022\024\n\014apiF"
    "ramework\030\n \001(\t\022\r\n\005codec\030\013 \001(\t\022\022\n\nminBitr"
    "ate\030\014 \001(\t\022\022\n\nmaxBitrate\030\r \001(\t\032\220\004\n\013Linear"
    "Track\022\024\n\014creativeView\030\001 \003(\t\022\r\n\005start\030\002 \003"
    "(\t\022\025\n\rfirstQuartile\030\003 \003(\t\022\020\n\010midpoint\030\004 "
    "\003(\t\022\025\n\rthirdQuartile\030\005 \003(\t\022\020\n\010complete\030\006"
    " \003(\t\022\014\n\004mute\030\007 \003(\t\022\016\n\006unmute\030\010 \003(\t\022\r\n\005pa"
    "use\030\t \003(\t\022\016\n\006rewind\030\n \003(\t\022\016\n\006resume\030\013 \003("
    "\t\022\022\n\nfullscreen\030\014 \003(\t\022\016\n\006expand\030\r \003(\t\022\020\n"
    "\010collapse\030\016 \003(\t\022\030\n\020acceptInvitation\030\017 \003("
    "\t\022\r\n\005close\030\020 \003(\t\022\023\n\013closeLinear\030\026 \003(\t\022\026\n"
    "\016exitFullscreen\030\021 \003(\t\022\036\n\026acceptInvitatio"
    "nLinear\030\022 \003(\t\022\014\n\004skip\030\023 \003(\t\022Z\n\010progress\030"
    "\027 \003(\0132H.com.rj.protos.msg.BidderResponse"
    ".Ad.LinearCreative.LinearTrack.Progress\032"
    "\'\n\010Progress\022\016\n\006offset\030\001 \001(\t\022\013\n\003url\030\002 \001(\t"
    "\032\264\003\n\013VideoClicks\022d\n\rclickTracking\030\001 \003(\0132"
    "M.com.rj.protos.msg.BidderResponse.Ad.Li"
    "nearCreative.VideoClicks.ClickTracking\022b"
    "\n\014clickThrough\030\002 \001(\0132L.com.rj.protos.msg"
    ".BidderResponse.Ad.LinearCreative.VideoC"
    "licks.ClickThrough\022`\n\013customClick\030\003 \003(\0132"
    "K.com.rj.protos.msg.BidderResponse.Ad.Li"
    "nearCreative.VideoClicks.CustomClick\032(\n\r"
    "ClickTracking\022\013\n\003url\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\032\'"
    "\n\014ClickThrough\022\013\n\003url\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\032"
    "&\n\013CustomClick\022\013\n\003url\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\032"
    "0\n\014AdParameters\022\014\n\004para\030\001 \001(\t\022\022\n\nxmlEnco"
    "ded\030\002 \001(\010\032\247\003\n\004Icon\022\017\n\007program\030\001 \001(\t\022\r\n\005w"
    "idth\030\002 \001(\t\022\016\n\006height\030\003 \001(\t\022\021\n\txPosition\030"
    "\004 \001(\t\022\021\n\tyPosition\030\005 \001(\t\022\020\n\010duration\030\006 \001"
    "(\t\022\016\n\006offset\030\007 \001(\t\022\024\n\014apiFramework\030\010 \001(\t"
    "\022\021\n\tstaticUrl\030\t \001(\t\022\024\n\014creativeType\030\n \001("
    "\t\022\021\n\tiframeUrl\030\013 \001(\t\022\014\n\004html\030\014 \001(\t\022\030\n\020ic"
    "onClickThrough\030\r \001(\t\022e\n\021iconClickTrackin"
    "g\030\016 \003(\0132J.com.rj.protos.msg.BidderRespon"
    "se.Ad.LinearCreative.Icon.IconClickTrack"
    "ing\022\030\n\020iconViewTracking\030\017 \003(\t\032,\n\021IconCli"
    "ckTracking\022\013\n\003url\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\032\335\006\n\021"
    "CompanionCreative\022\n\n\002id\030\001 \001(\t\022\020\n\010sequenc"
    "e\030\002 \001(\t\022\014\n\004adId\030\003 \001(\t\022\020\n\010required\030\007 \001(\t\022"
    "\024\n\014apiFramework\030\005 \001(\t\022\031\n\021creativeExtensi"
    "on\030\006 \001(\t\022S\n\tcompanion\030\004 \003(\0132@.com.rj.pro"
    "tos.msg.BidderResponse.Ad.CompanionCreat"
    "ive.Companion\032\203\005\n\tCompanion\022\r\n\005width\030\001 \001"
    "(\t\022\016\n\006height\030\002 \001(\t\022\n\n\002id\030\003 \001(\t\022\025\n\rexpand"
    "edWidth\030\004 \001(\t\022\026\n\016expandedHeight\030\005 \001(\t\022\024\n"
    "\014apiFramework\030\006 \001(\t\022\022\n\nassetWidth\030\021 \001(\t\022"
    "\023\n\013assetHeight\030\022 \001(\t\022\020\n\010adSlotID\030\023 \001(\t\022\027"
    "\n\017clickThroughUrl\030\n \001(\t\022\017\n\007altText\030\r \001(\t"
    "\022w\n\026companionClickTracking\030\013 \003(\0132W.com.r"
    "j.protos.msg.BidderResponse.Ad.Companion"
    "Creative.Companion.CompanionClickTrackin"
    "g\022c\n\014adParameters\030\020 \001(\0132M.com.rj.protos."
    "msg.BidderResponse.Ad.CompanionCreative."
    "Companion.AdParameters\022\021\n\tstaticUrl\030\007 \001("
    "\t\022\024\n\014creativeType\030\017 \001(\t\022\021\n\tiframeUrl\030\010 \001"
    "(\t\022\014\n\004html\030\t \001(\t\022\024\n\014creativeView\030\014 \003(\t\0321"
    "\n\026CompanionClickTracking\022\013\n\003url\030\001 \001(\t\022\n\n"
    "\002id\030\002 \001(\t\0320\n\014AdParameters\022\014\n\004para\030\001 \001(\t\022"
    "\022\n\nxmlEncoded\030\002 \001(\010", 3979);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AdBidderResponseTemplate.proto", &protobuf_RegisterTypes);
  BidderResponse::default_instance_ = new BidderResponse();
  BidderResponse_Ad::default_instance_ = new BidderResponse_Ad();
  BidderResponse_Ad_AdSystem::default_instance_ = new BidderResponse_Ad_AdSystem();
  BidderResponse_Ad_Impression::default_instance_ = new BidderResponse_Ad_Impression();
  BidderResponse_Ad_LinearCreative::default_instance_ = new BidderResponse_Ad_LinearCreative();
  BidderResponse_Ad_LinearCreative_Video::default_instance_ = new BidderResponse_Ad_LinearCreative_Video();
  BidderResponse_Ad_LinearCreative_LinearTrack::default_instance_ = new BidderResponse_Ad_LinearCreative_LinearTrack();
  BidderResponse_Ad_LinearCreative_LinearTrack_Progress::default_instance_ = new BidderResponse_Ad_LinearCreative_LinearTrack_Progress();
  BidderResponse_Ad_LinearCreative_VideoClicks::default_instance_ = new BidderResponse_Ad_LinearCreative_VideoClicks();
  BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::default_instance_ = new BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking();
  BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::default_instance_ = new BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough();
  BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::default_instance_ = new BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick();
  BidderResponse_Ad_LinearCreative_AdParameters::default_instance_ = new BidderResponse_Ad_LinearCreative_AdParameters();
  BidderResponse_Ad_LinearCreative_Icon::default_instance_ = new BidderResponse_Ad_LinearCreative_Icon();
  BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::default_instance_ = new BidderResponse_Ad_LinearCreative_Icon_IconClickTracking();
  BidderResponse_Ad_CompanionCreative::default_instance_ = new BidderResponse_Ad_CompanionCreative();
  BidderResponse_Ad_CompanionCreative_Companion::default_instance_ = new BidderResponse_Ad_CompanionCreative_Companion();
  BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::default_instance_ = new BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking();
  BidderResponse_Ad_CompanionCreative_Companion_AdParameters::default_instance_ = new BidderResponse_Ad_CompanionCreative_Companion_AdParameters();
  BidderResponse::default_instance_->InitAsDefaultInstance();
  BidderResponse_Ad::default_instance_->InitAsDefaultInstance();
  BidderResponse_Ad_AdSystem::default_instance_->InitAsDefaultInstance();
  BidderResponse_Ad_Impression::default_instance_->InitAsDefaultInstance();
  BidderResponse_Ad_LinearCreative::default_instance_->InitAsDefaultInstance();
  BidderResponse_Ad_LinearCreative_Video::default_instance_->InitAsDefaultInstance();
  BidderResponse_Ad_LinearCreative_LinearTrack::default_instance_->InitAsDefaultInstance();
  BidderResponse_Ad_LinearCreative_LinearTrack_Progress::default_instance_->InitAsDefaultInstance();
  BidderResponse_Ad_LinearCreative_VideoClicks::default_instance_->InitAsDefaultInstance();
  BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::default_instance_->InitAsDefaultInstance();
  BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::default_instance_->InitAsDefaultInstance();
  BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::default_instance_->InitAsDefaultInstance();
  BidderResponse_Ad_LinearCreative_AdParameters::default_instance_->InitAsDefaultInstance();
  BidderResponse_Ad_LinearCreative_Icon::default_instance_->InitAsDefaultInstance();
  BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::default_instance_->InitAsDefaultInstance();
  BidderResponse_Ad_CompanionCreative::default_instance_->InitAsDefaultInstance();
  BidderResponse_Ad_CompanionCreative_Companion::default_instance_->InitAsDefaultInstance();
  BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::default_instance_->InitAsDefaultInstance();
  BidderResponse_Ad_CompanionCreative_Companion_AdParameters::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_AdBidderResponseTemplate_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_AdBidderResponseTemplate_2eproto {
  StaticDescriptorInitializer_AdBidderResponseTemplate_2eproto() {
    protobuf_AddDesc_AdBidderResponseTemplate_2eproto();
  }
} static_descriptor_initializer_AdBidderResponseTemplate_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BidderResponse_Ad_AdSystem::kSysFieldNumber;
const int BidderResponse_Ad_AdSystem::kVersionFieldNumber;
#endif  // !_MSC_VER

BidderResponse_Ad_AdSystem::BidderResponse_Ad_AdSystem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BidderResponse_Ad_AdSystem::InitAsDefaultInstance() {
}

BidderResponse_Ad_AdSystem::BidderResponse_Ad_AdSystem(const BidderResponse_Ad_AdSystem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BidderResponse_Ad_AdSystem::SharedCtor() {
  _cached_size_ = 0;
  sys_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  version_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidderResponse_Ad_AdSystem::~BidderResponse_Ad_AdSystem() {
  SharedDtor();
}

void BidderResponse_Ad_AdSystem::SharedDtor() {
  if (sys_ != &::google::protobuf::internal::kEmptyString) {
    delete sys_;
  }
  if (version_ != &::google::protobuf::internal::kEmptyString) {
    delete version_;
  }
  if (this != default_instance_) {
  }
}

void BidderResponse_Ad_AdSystem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidderResponse_Ad_AdSystem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidderResponse_Ad_AdSystem_descriptor_;
}

const BidderResponse_Ad_AdSystem& BidderResponse_Ad_AdSystem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdBidderResponseTemplate_2eproto();
  return *default_instance_;
}

BidderResponse_Ad_AdSystem* BidderResponse_Ad_AdSystem::default_instance_ = NULL;

BidderResponse_Ad_AdSystem* BidderResponse_Ad_AdSystem::New() const {
  return new BidderResponse_Ad_AdSystem;
}

void BidderResponse_Ad_AdSystem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_sys()) {
      if (sys_ != &::google::protobuf::internal::kEmptyString) {
        sys_->clear();
      }
    }
    if (has_version()) {
      if (version_ != &::google::protobuf::internal::kEmptyString) {
        version_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BidderResponse_Ad_AdSystem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sys = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sys()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sys().data(), this->sys().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_version;
        break;
      }

      // optional string version = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BidderResponse_Ad_AdSystem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string sys = 1;
  if (has_sys()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sys().data(), this->sys().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->sys(), output);
  }

  // optional string version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->version(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BidderResponse_Ad_AdSystem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string sys = 1;
  if (has_sys()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sys().data(), this->sys().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sys(), target);
  }

  // optional string version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BidderResponse_Ad_AdSystem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string sys = 1;
    if (has_sys()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sys());
    }

    // optional string version = 2;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidderResponse_Ad_AdSystem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BidderResponse_Ad_AdSystem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BidderResponse_Ad_AdSystem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BidderResponse_Ad_AdSystem::MergeFrom(const BidderResponse_Ad_AdSystem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sys()) {
      set_sys(from.sys());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BidderResponse_Ad_AdSystem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidderResponse_Ad_AdSystem::CopyFrom(const BidderResponse_Ad_AdSystem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidderResponse_Ad_AdSystem::IsInitialized() const {

  return true;
}

void BidderResponse_Ad_AdSystem::Swap(BidderResponse_Ad_AdSystem* other) {
  if (other != this) {
    std::swap(sys_, other->sys_);
    std::swap(version_, other->version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BidderResponse_Ad_AdSystem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidderResponse_Ad_AdSystem_descriptor_;
  metadata.reflection = BidderResponse_Ad_AdSystem_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BidderResponse_Ad_Impression::kUrlFieldNumber;
const int BidderResponse_Ad_Impression::kIdFieldNumber;
#endif  // !_MSC_VER

BidderResponse_Ad_Impression::BidderResponse_Ad_Impression()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BidderResponse_Ad_Impression::InitAsDefaultInstance() {
}

BidderResponse_Ad_Impression::BidderResponse_Ad_Impression(const BidderResponse_Ad_Impression& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BidderResponse_Ad_Impression::SharedCtor() {
  _cached_size_ = 0;
  url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidderResponse_Ad_Impression::~BidderResponse_Ad_Impression() {
  SharedDtor();
}

void BidderResponse_Ad_Impression::SharedDtor() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (this != default_instance_) {
  }
}

void BidderResponse_Ad_Impression::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidderResponse_Ad_Impression::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidderResponse_Ad_Impression_descriptor_;
}

const BidderResponse_Ad_Impression& BidderResponse_Ad_Impression::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdBidderResponseTemplate_2eproto();
  return *default_instance_;
}

BidderResponse_Ad_Impression* BidderResponse_Ad_Impression::default_instance_ = NULL;

BidderResponse_Ad_Impression* BidderResponse_Ad_Impression::New() const {
  return new BidderResponse_Ad_Impression;
}

void BidderResponse_Ad_Impression::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_url()) {
      if (url_ != &::google::protobuf::internal::kEmptyString) {
        url_->clear();
      }
    }
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BidderResponse_Ad_Impression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string url = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_id;
        break;
      }

      // optional string id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BidderResponse_Ad_Impression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string url = 1;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->url(), output);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BidderResponse_Ad_Impression::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string url = 1;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BidderResponse_Ad_Impression::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string url = 1;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidderResponse_Ad_Impression::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BidderResponse_Ad_Impression* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BidderResponse_Ad_Impression*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BidderResponse_Ad_Impression::MergeFrom(const BidderResponse_Ad_Impression& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_url()) {
      set_url(from.url());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BidderResponse_Ad_Impression::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidderResponse_Ad_Impression::CopyFrom(const BidderResponse_Ad_Impression& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidderResponse_Ad_Impression::IsInitialized() const {

  return true;
}

void BidderResponse_Ad_Impression::Swap(BidderResponse_Ad_Impression* other) {
  if (other != this) {
    std::swap(url_, other->url_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BidderResponse_Ad_Impression::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidderResponse_Ad_Impression_descriptor_;
  metadata.reflection = BidderResponse_Ad_Impression_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BidderResponse_Ad_LinearCreative_Video::kMimeFieldNumber;
const int BidderResponse_Ad_LinearCreative_Video::kAssetUrlFieldNumber;
const int BidderResponse_Ad_LinearCreative_Video::kWidthFieldNumber;
const int BidderResponse_Ad_LinearCreative_Video::kHeightFieldNumber;
const int BidderResponse_Ad_LinearCreative_Video::kDeliveryFieldNumber;
const int BidderResponse_Ad_LinearCreative_Video::kBitrateFieldNumber;
const int BidderResponse_Ad_LinearCreative_Video::kMaintainAspectRatioFieldNumber;
const int BidderResponse_Ad_LinearCreative_Video::kIdFieldNumber;
const int BidderResponse_Ad_LinearCreative_Video::kScalableFieldNumber;
const int BidderResponse_Ad_LinearCreative_Video::kApiFrameworkFieldNumber;
const int BidderResponse_Ad_LinearCreative_Video::kCodecFieldNumber;
const int BidderResponse_Ad_LinearCreative_Video::kMinBitrateFieldNumber;
const int BidderResponse_Ad_LinearCreative_Video::kMaxBitrateFieldNumber;
#endif  // !_MSC_VER

BidderResponse_Ad_LinearCreative_Video::BidderResponse_Ad_LinearCreative_Video()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BidderResponse_Ad_LinearCreative_Video::InitAsDefaultInstance() {
}

BidderResponse_Ad_LinearCreative_Video::BidderResponse_Ad_LinearCreative_Video(const BidderResponse_Ad_LinearCreative_Video& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative_Video::SharedCtor() {
  _cached_size_ = 0;
  mime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  asseturl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  width_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  height_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  delivery_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bitrate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  maintainaspectratio_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  scalable_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  apiframework_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  codec_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  minbitrate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  maxbitrate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidderResponse_Ad_LinearCreative_Video::~BidderResponse_Ad_LinearCreative_Video() {
  SharedDtor();
}

void BidderResponse_Ad_LinearCreative_Video::SharedDtor() {
  if (mime_ != &::google::protobuf::internal::kEmptyString) {
    delete mime_;
  }
  if (asseturl_ != &::google::protobuf::internal::kEmptyString) {
    delete asseturl_;
  }
  if (width_ != &::google::protobuf::internal::kEmptyString) {
    delete width_;
  }
  if (height_ != &::google::protobuf::internal::kEmptyString) {
    delete height_;
  }
  if (delivery_ != &::google::protobuf::internal::kEmptyString) {
    delete delivery_;
  }
  if (bitrate_ != &::google::protobuf::internal::kEmptyString) {
    delete bitrate_;
  }
  if (maintainaspectratio_ != &::google::protobuf::internal::kEmptyString) {
    delete maintainaspectratio_;
  }
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (scalable_ != &::google::protobuf::internal::kEmptyString) {
    delete scalable_;
  }
  if (apiframework_ != &::google::protobuf::internal::kEmptyString) {
    delete apiframework_;
  }
  if (codec_ != &::google::protobuf::internal::kEmptyString) {
    delete codec_;
  }
  if (minbitrate_ != &::google::protobuf::internal::kEmptyString) {
    delete minbitrate_;
  }
  if (maxbitrate_ != &::google::protobuf::internal::kEmptyString) {
    delete maxbitrate_;
  }
  if (this != default_instance_) {
  }
}

void BidderResponse_Ad_LinearCreative_Video::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative_Video::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidderResponse_Ad_LinearCreative_Video_descriptor_;
}

const BidderResponse_Ad_LinearCreative_Video& BidderResponse_Ad_LinearCreative_Video::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdBidderResponseTemplate_2eproto();
  return *default_instance_;
}

BidderResponse_Ad_LinearCreative_Video* BidderResponse_Ad_LinearCreative_Video::default_instance_ = NULL;

BidderResponse_Ad_LinearCreative_Video* BidderResponse_Ad_LinearCreative_Video::New() const {
  return new BidderResponse_Ad_LinearCreative_Video;
}

void BidderResponse_Ad_LinearCreative_Video::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_mime()) {
      if (mime_ != &::google::protobuf::internal::kEmptyString) {
        mime_->clear();
      }
    }
    if (has_asseturl()) {
      if (asseturl_ != &::google::protobuf::internal::kEmptyString) {
        asseturl_->clear();
      }
    }
    if (has_width()) {
      if (width_ != &::google::protobuf::internal::kEmptyString) {
        width_->clear();
      }
    }
    if (has_height()) {
      if (height_ != &::google::protobuf::internal::kEmptyString) {
        height_->clear();
      }
    }
    if (has_delivery()) {
      if (delivery_ != &::google::protobuf::internal::kEmptyString) {
        delivery_->clear();
      }
    }
    if (has_bitrate()) {
      if (bitrate_ != &::google::protobuf::internal::kEmptyString) {
        bitrate_->clear();
      }
    }
    if (has_maintainaspectratio()) {
      if (maintainaspectratio_ != &::google::protobuf::internal::kEmptyString) {
        maintainaspectratio_->clear();
      }
    }
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_scalable()) {
      if (scalable_ != &::google::protobuf::internal::kEmptyString) {
        scalable_->clear();
      }
    }
    if (has_apiframework()) {
      if (apiframework_ != &::google::protobuf::internal::kEmptyString) {
        apiframework_->clear();
      }
    }
    if (has_codec()) {
      if (codec_ != &::google::protobuf::internal::kEmptyString) {
        codec_->clear();
      }
    }
    if (has_minbitrate()) {
      if (minbitrate_ != &::google::protobuf::internal::kEmptyString) {
        minbitrate_->clear();
      }
    }
    if (has_maxbitrate()) {
      if (maxbitrate_ != &::google::protobuf::internal::kEmptyString) {
        maxbitrate_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BidderResponse_Ad_LinearCreative_Video::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string mime = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mime().data(), this->mime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_assetUrl;
        break;
      }

      // optional string assetUrl = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_assetUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_asseturl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->asseturl().data(), this->asseturl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_width;
        break;
      }

      // optional string width = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_width:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_width()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->width().data(), this->width().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_height;
        break;
      }

      // optional string height = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_height:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_height()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->height().data(), this->height().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_delivery;
        break;
      }

      // optional string delivery = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_delivery:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_delivery()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->delivery().data(), this->delivery().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_bitrate;
        break;
      }

      // optional string bitrate = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bitrate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bitrate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bitrate().data(), this->bitrate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_maintainAspectRatio;
        break;
      }

      // optional string maintainAspectRatio = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_maintainAspectRatio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_maintainaspectratio()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->maintainaspectratio().data(), this->maintainaspectratio().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_id;
        break;
      }

      // optional string id = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_scalable;
        break;
      }

      // optional string scalable = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_scalable:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scalable()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->scalable().data(), this->scalable().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_apiFramework;
        break;
      }

      // optional string apiFramework = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_apiFramework:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apiframework()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->apiframework().data(), this->apiframework().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_codec;
        break;
      }

      // optional string codec = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_codec:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_codec()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->codec().data(), this->codec().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_minBitrate;
        break;
      }

      // optional string minBitrate = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_minBitrate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_minbitrate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->minbitrate().data(), this->minbitrate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_maxBitrate;
        break;
      }

      // optional string maxBitrate = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_maxBitrate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_maxbitrate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->maxbitrate().data(), this->maxbitrate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BidderResponse_Ad_LinearCreative_Video::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string mime = 1;
  if (has_mime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mime().data(), this->mime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->mime(), output);
  }

  // optional string assetUrl = 2;
  if (has_asseturl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->asseturl().data(), this->asseturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->asseturl(), output);
  }

  // optional string width = 3;
  if (has_width()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->width().data(), this->width().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->width(), output);
  }

  // optional string height = 4;
  if (has_height()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->height().data(), this->height().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->height(), output);
  }

  // optional string delivery = 5;
  if (has_delivery()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->delivery().data(), this->delivery().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->delivery(), output);
  }

  // optional string bitrate = 6;
  if (has_bitrate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bitrate().data(), this->bitrate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->bitrate(), output);
  }

  // optional string maintainAspectRatio = 7;
  if (has_maintainaspectratio()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->maintainaspectratio().data(), this->maintainaspectratio().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->maintainaspectratio(), output);
  }

  // optional string id = 8;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->id(), output);
  }

  // optional string scalable = 9;
  if (has_scalable()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->scalable().data(), this->scalable().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->scalable(), output);
  }

  // optional string apiFramework = 10;
  if (has_apiframework()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->apiframework().data(), this->apiframework().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->apiframework(), output);
  }

  // optional string codec = 11;
  if (has_codec()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->codec().data(), this->codec().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->codec(), output);
  }

  // optional string minBitrate = 12;
  if (has_minbitrate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->minbitrate().data(), this->minbitrate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->minbitrate(), output);
  }

  // optional string maxBitrate = 13;
  if (has_maxbitrate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->maxbitrate().data(), this->maxbitrate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->maxbitrate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BidderResponse_Ad_LinearCreative_Video::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string mime = 1;
  if (has_mime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mime().data(), this->mime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mime(), target);
  }

  // optional string assetUrl = 2;
  if (has_asseturl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->asseturl().data(), this->asseturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->asseturl(), target);
  }

  // optional string width = 3;
  if (has_width()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->width().data(), this->width().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->width(), target);
  }

  // optional string height = 4;
  if (has_height()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->height().data(), this->height().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->height(), target);
  }

  // optional string delivery = 5;
  if (has_delivery()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->delivery().data(), this->delivery().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->delivery(), target);
  }

  // optional string bitrate = 6;
  if (has_bitrate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bitrate().data(), this->bitrate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->bitrate(), target);
  }

  // optional string maintainAspectRatio = 7;
  if (has_maintainaspectratio()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->maintainaspectratio().data(), this->maintainaspectratio().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->maintainaspectratio(), target);
  }

  // optional string id = 8;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->id(), target);
  }

  // optional string scalable = 9;
  if (has_scalable()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->scalable().data(), this->scalable().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->scalable(), target);
  }

  // optional string apiFramework = 10;
  if (has_apiframework()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->apiframework().data(), this->apiframework().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->apiframework(), target);
  }

  // optional string codec = 11;
  if (has_codec()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->codec().data(), this->codec().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->codec(), target);
  }

  // optional string minBitrate = 12;
  if (has_minbitrate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->minbitrate().data(), this->minbitrate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->minbitrate(), target);
  }

  // optional string maxBitrate = 13;
  if (has_maxbitrate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->maxbitrate().data(), this->maxbitrate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->maxbitrate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BidderResponse_Ad_LinearCreative_Video::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string mime = 1;
    if (has_mime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mime());
    }

    // optional string assetUrl = 2;
    if (has_asseturl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->asseturl());
    }

    // optional string width = 3;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->width());
    }

    // optional string height = 4;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->height());
    }

    // optional string delivery = 5;
    if (has_delivery()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->delivery());
    }

    // optional string bitrate = 6;
    if (has_bitrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bitrate());
    }

    // optional string maintainAspectRatio = 7;
    if (has_maintainaspectratio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->maintainaspectratio());
    }

    // optional string id = 8;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string scalable = 9;
    if (has_scalable()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scalable());
    }

    // optional string apiFramework = 10;
    if (has_apiframework()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->apiframework());
    }

    // optional string codec = 11;
    if (has_codec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->codec());
    }

    // optional string minBitrate = 12;
    if (has_minbitrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->minbitrate());
    }

    // optional string maxBitrate = 13;
    if (has_maxbitrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->maxbitrate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidderResponse_Ad_LinearCreative_Video::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BidderResponse_Ad_LinearCreative_Video* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BidderResponse_Ad_LinearCreative_Video*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BidderResponse_Ad_LinearCreative_Video::MergeFrom(const BidderResponse_Ad_LinearCreative_Video& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mime()) {
      set_mime(from.mime());
    }
    if (from.has_asseturl()) {
      set_asseturl(from.asseturl());
    }
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_delivery()) {
      set_delivery(from.delivery());
    }
    if (from.has_bitrate()) {
      set_bitrate(from.bitrate());
    }
    if (from.has_maintainaspectratio()) {
      set_maintainaspectratio(from.maintainaspectratio());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_scalable()) {
      set_scalable(from.scalable());
    }
    if (from.has_apiframework()) {
      set_apiframework(from.apiframework());
    }
    if (from.has_codec()) {
      set_codec(from.codec());
    }
    if (from.has_minbitrate()) {
      set_minbitrate(from.minbitrate());
    }
    if (from.has_maxbitrate()) {
      set_maxbitrate(from.maxbitrate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BidderResponse_Ad_LinearCreative_Video::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative_Video::CopyFrom(const BidderResponse_Ad_LinearCreative_Video& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidderResponse_Ad_LinearCreative_Video::IsInitialized() const {

  return true;
}

void BidderResponse_Ad_LinearCreative_Video::Swap(BidderResponse_Ad_LinearCreative_Video* other) {
  if (other != this) {
    std::swap(mime_, other->mime_);
    std::swap(asseturl_, other->asseturl_);
    std::swap(width_, other->width_);
    std::swap(height_, other->height_);
    std::swap(delivery_, other->delivery_);
    std::swap(bitrate_, other->bitrate_);
    std::swap(maintainaspectratio_, other->maintainaspectratio_);
    std::swap(id_, other->id_);
    std::swap(scalable_, other->scalable_);
    std::swap(apiframework_, other->apiframework_);
    std::swap(codec_, other->codec_);
    std::swap(minbitrate_, other->minbitrate_);
    std::swap(maxbitrate_, other->maxbitrate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BidderResponse_Ad_LinearCreative_Video::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidderResponse_Ad_LinearCreative_Video_descriptor_;
  metadata.reflection = BidderResponse_Ad_LinearCreative_Video_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BidderResponse_Ad_LinearCreative_LinearTrack_Progress::kOffsetFieldNumber;
const int BidderResponse_Ad_LinearCreative_LinearTrack_Progress::kUrlFieldNumber;
#endif  // !_MSC_VER

BidderResponse_Ad_LinearCreative_LinearTrack_Progress::BidderResponse_Ad_LinearCreative_LinearTrack_Progress()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BidderResponse_Ad_LinearCreative_LinearTrack_Progress::InitAsDefaultInstance() {
}

BidderResponse_Ad_LinearCreative_LinearTrack_Progress::BidderResponse_Ad_LinearCreative_LinearTrack_Progress(const BidderResponse_Ad_LinearCreative_LinearTrack_Progress& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative_LinearTrack_Progress::SharedCtor() {
  _cached_size_ = 0;
  offset_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidderResponse_Ad_LinearCreative_LinearTrack_Progress::~BidderResponse_Ad_LinearCreative_LinearTrack_Progress() {
  SharedDtor();
}

void BidderResponse_Ad_LinearCreative_LinearTrack_Progress::SharedDtor() {
  if (offset_ != &::google::protobuf::internal::kEmptyString) {
    delete offset_;
  }
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (this != default_instance_) {
  }
}

void BidderResponse_Ad_LinearCreative_LinearTrack_Progress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative_LinearTrack_Progress::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidderResponse_Ad_LinearCreative_LinearTrack_Progress_descriptor_;
}

const BidderResponse_Ad_LinearCreative_LinearTrack_Progress& BidderResponse_Ad_LinearCreative_LinearTrack_Progress::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdBidderResponseTemplate_2eproto();
  return *default_instance_;
}

BidderResponse_Ad_LinearCreative_LinearTrack_Progress* BidderResponse_Ad_LinearCreative_LinearTrack_Progress::default_instance_ = NULL;

BidderResponse_Ad_LinearCreative_LinearTrack_Progress* BidderResponse_Ad_LinearCreative_LinearTrack_Progress::New() const {
  return new BidderResponse_Ad_LinearCreative_LinearTrack_Progress;
}

void BidderResponse_Ad_LinearCreative_LinearTrack_Progress::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_offset()) {
      if (offset_ != &::google::protobuf::internal::kEmptyString) {
        offset_->clear();
      }
    }
    if (has_url()) {
      if (url_ != &::google::protobuf::internal::kEmptyString) {
        url_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BidderResponse_Ad_LinearCreative_LinearTrack_Progress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string offset = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_offset()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->offset().data(), this->offset().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_url;
        break;
      }

      // optional string url = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BidderResponse_Ad_LinearCreative_LinearTrack_Progress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string offset = 1;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->offset().data(), this->offset().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->offset(), output);
  }

  // optional string url = 2;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->url(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BidderResponse_Ad_LinearCreative_LinearTrack_Progress::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string offset = 1;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->offset().data(), this->offset().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->offset(), target);
  }

  // optional string url = 2;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BidderResponse_Ad_LinearCreative_LinearTrack_Progress::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string offset = 1;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->offset());
    }

    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidderResponse_Ad_LinearCreative_LinearTrack_Progress::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BidderResponse_Ad_LinearCreative_LinearTrack_Progress* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BidderResponse_Ad_LinearCreative_LinearTrack_Progress*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BidderResponse_Ad_LinearCreative_LinearTrack_Progress::MergeFrom(const BidderResponse_Ad_LinearCreative_LinearTrack_Progress& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_offset()) {
      set_offset(from.offset());
    }
    if (from.has_url()) {
      set_url(from.url());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BidderResponse_Ad_LinearCreative_LinearTrack_Progress::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative_LinearTrack_Progress::CopyFrom(const BidderResponse_Ad_LinearCreative_LinearTrack_Progress& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidderResponse_Ad_LinearCreative_LinearTrack_Progress::IsInitialized() const {

  return true;
}

void BidderResponse_Ad_LinearCreative_LinearTrack_Progress::Swap(BidderResponse_Ad_LinearCreative_LinearTrack_Progress* other) {
  if (other != this) {
    std::swap(offset_, other->offset_);
    std::swap(url_, other->url_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BidderResponse_Ad_LinearCreative_LinearTrack_Progress::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidderResponse_Ad_LinearCreative_LinearTrack_Progress_descriptor_;
  metadata.reflection = BidderResponse_Ad_LinearCreative_LinearTrack_Progress_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BidderResponse_Ad_LinearCreative_LinearTrack::kCreativeViewFieldNumber;
const int BidderResponse_Ad_LinearCreative_LinearTrack::kStartFieldNumber;
const int BidderResponse_Ad_LinearCreative_LinearTrack::kFirstQuartileFieldNumber;
const int BidderResponse_Ad_LinearCreative_LinearTrack::kMidpointFieldNumber;
const int BidderResponse_Ad_LinearCreative_LinearTrack::kThirdQuartileFieldNumber;
const int BidderResponse_Ad_LinearCreative_LinearTrack::kCompleteFieldNumber;
const int BidderResponse_Ad_LinearCreative_LinearTrack::kMuteFieldNumber;
const int BidderResponse_Ad_LinearCreative_LinearTrack::kUnmuteFieldNumber;
const int BidderResponse_Ad_LinearCreative_LinearTrack::kPauseFieldNumber;
const int BidderResponse_Ad_LinearCreative_LinearTrack::kRewindFieldNumber;
const int BidderResponse_Ad_LinearCreative_LinearTrack::kResumeFieldNumber;
const int BidderResponse_Ad_LinearCreative_LinearTrack::kFullscreenFieldNumber;
const int BidderResponse_Ad_LinearCreative_LinearTrack::kExpandFieldNumber;
const int BidderResponse_Ad_LinearCreative_LinearTrack::kCollapseFieldNumber;
const int BidderResponse_Ad_LinearCreative_LinearTrack::kAcceptInvitationFieldNumber;
const int BidderResponse_Ad_LinearCreative_LinearTrack::kCloseFieldNumber;
const int BidderResponse_Ad_LinearCreative_LinearTrack::kCloseLinearFieldNumber;
const int BidderResponse_Ad_LinearCreative_LinearTrack::kExitFullscreenFieldNumber;
const int BidderResponse_Ad_LinearCreative_LinearTrack::kAcceptInvitationLinearFieldNumber;
const int BidderResponse_Ad_LinearCreative_LinearTrack::kSkipFieldNumber;
const int BidderResponse_Ad_LinearCreative_LinearTrack::kProgressFieldNumber;
#endif  // !_MSC_VER

BidderResponse_Ad_LinearCreative_LinearTrack::BidderResponse_Ad_LinearCreative_LinearTrack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BidderResponse_Ad_LinearCreative_LinearTrack::InitAsDefaultInstance() {
}

BidderResponse_Ad_LinearCreative_LinearTrack::BidderResponse_Ad_LinearCreative_LinearTrack(const BidderResponse_Ad_LinearCreative_LinearTrack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative_LinearTrack::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidderResponse_Ad_LinearCreative_LinearTrack::~BidderResponse_Ad_LinearCreative_LinearTrack() {
  SharedDtor();
}

void BidderResponse_Ad_LinearCreative_LinearTrack::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BidderResponse_Ad_LinearCreative_LinearTrack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative_LinearTrack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidderResponse_Ad_LinearCreative_LinearTrack_descriptor_;
}

const BidderResponse_Ad_LinearCreative_LinearTrack& BidderResponse_Ad_LinearCreative_LinearTrack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdBidderResponseTemplate_2eproto();
  return *default_instance_;
}

BidderResponse_Ad_LinearCreative_LinearTrack* BidderResponse_Ad_LinearCreative_LinearTrack::default_instance_ = NULL;

BidderResponse_Ad_LinearCreative_LinearTrack* BidderResponse_Ad_LinearCreative_LinearTrack::New() const {
  return new BidderResponse_Ad_LinearCreative_LinearTrack;
}

void BidderResponse_Ad_LinearCreative_LinearTrack::Clear() {
  creativeview_.Clear();
  start_.Clear();
  firstquartile_.Clear();
  midpoint_.Clear();
  thirdquartile_.Clear();
  complete_.Clear();
  mute_.Clear();
  unmute_.Clear();
  pause_.Clear();
  rewind_.Clear();
  resume_.Clear();
  fullscreen_.Clear();
  expand_.Clear();
  collapse_.Clear();
  acceptinvitation_.Clear();
  close_.Clear();
  closelinear_.Clear();
  exitfullscreen_.Clear();
  acceptinvitationlinear_.Clear();
  skip_.Clear();
  progress_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BidderResponse_Ad_LinearCreative_LinearTrack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string creativeView = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_creativeView:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_creativeview()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->creativeview(this->creativeview_size() - 1).data(),
            this->creativeview(this->creativeview_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_creativeView;
        if (input->ExpectTag(18)) goto parse_start;
        break;
      }

      // repeated string start = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_start:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_start()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->start(this->start_size() - 1).data(),
            this->start(this->start_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_start;
        if (input->ExpectTag(26)) goto parse_firstQuartile;
        break;
      }

      // repeated string firstQuartile = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_firstQuartile:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_firstquartile()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->firstquartile(this->firstquartile_size() - 1).data(),
            this->firstquartile(this->firstquartile_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_firstQuartile;
        if (input->ExpectTag(34)) goto parse_midpoint;
        break;
      }

      // repeated string midpoint = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_midpoint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_midpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->midpoint(this->midpoint_size() - 1).data(),
            this->midpoint(this->midpoint_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_midpoint;
        if (input->ExpectTag(42)) goto parse_thirdQuartile;
        break;
      }

      // repeated string thirdQuartile = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_thirdQuartile:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_thirdquartile()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->thirdquartile(this->thirdquartile_size() - 1).data(),
            this->thirdquartile(this->thirdquartile_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_thirdQuartile;
        if (input->ExpectTag(50)) goto parse_complete;
        break;
      }

      // repeated string complete = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_complete:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_complete()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->complete(this->complete_size() - 1).data(),
            this->complete(this->complete_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_complete;
        if (input->ExpectTag(58)) goto parse_mute;
        break;
      }

      // repeated string mute = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_mute()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mute(this->mute_size() - 1).data(),
            this->mute(this->mute_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_mute;
        if (input->ExpectTag(66)) goto parse_unmute;
        break;
      }

      // repeated string unmute = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_unmute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_unmute()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->unmute(this->unmute_size() - 1).data(),
            this->unmute(this->unmute_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_unmute;
        if (input->ExpectTag(74)) goto parse_pause;
        break;
      }

      // repeated string pause = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pause:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_pause()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->pause(this->pause_size() - 1).data(),
            this->pause(this->pause_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_pause;
        if (input->ExpectTag(82)) goto parse_rewind;
        break;
      }

      // repeated string rewind = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rewind:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_rewind()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rewind(this->rewind_size() - 1).data(),
            this->rewind(this->rewind_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_rewind;
        if (input->ExpectTag(90)) goto parse_resume;
        break;
      }

      // repeated string resume = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_resume:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_resume()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->resume(this->resume_size() - 1).data(),
            this->resume(this->resume_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_resume;
        if (input->ExpectTag(98)) goto parse_fullscreen;
        break;
      }

      // repeated string fullscreen = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fullscreen:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_fullscreen()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fullscreen(this->fullscreen_size() - 1).data(),
            this->fullscreen(this->fullscreen_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_fullscreen;
        if (input->ExpectTag(106)) goto parse_expand;
        break;
      }

      // repeated string expand = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_expand:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_expand()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->expand(this->expand_size() - 1).data(),
            this->expand(this->expand_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_expand;
        if (input->ExpectTag(114)) goto parse_collapse;
        break;
      }

      // repeated string collapse = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_collapse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_collapse()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->collapse(this->collapse_size() - 1).data(),
            this->collapse(this->collapse_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_collapse;
        if (input->ExpectTag(122)) goto parse_acceptInvitation;
        break;
      }

      // repeated string acceptInvitation = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_acceptInvitation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_acceptinvitation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->acceptinvitation(this->acceptinvitation_size() - 1).data(),
            this->acceptinvitation(this->acceptinvitation_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_acceptInvitation;
        if (input->ExpectTag(130)) goto parse_close;
        break;
      }

      // repeated string close = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_close:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_close()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->close(this->close_size() - 1).data(),
            this->close(this->close_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_close;
        if (input->ExpectTag(138)) goto parse_exitFullscreen;
        break;
      }

      // repeated string exitFullscreen = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_exitFullscreen:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_exitfullscreen()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->exitfullscreen(this->exitfullscreen_size() - 1).data(),
            this->exitfullscreen(this->exitfullscreen_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_exitFullscreen;
        if (input->ExpectTag(146)) goto parse_acceptInvitationLinear;
        break;
      }

      // repeated string acceptInvitationLinear = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_acceptInvitationLinear:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_acceptinvitationlinear()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->acceptinvitationlinear(this->acceptinvitationlinear_size() - 1).data(),
            this->acceptinvitationlinear(this->acceptinvitationlinear_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_acceptInvitationLinear;
        if (input->ExpectTag(154)) goto parse_skip;
        break;
      }

      // repeated string skip = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_skip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->skip(this->skip_size() - 1).data(),
            this->skip(this->skip_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_skip;
        if (input->ExpectTag(178)) goto parse_closeLinear;
        break;
      }

      // repeated string closeLinear = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_closeLinear:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_closelinear()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->closelinear(this->closelinear_size() - 1).data(),
            this->closelinear(this->closelinear_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_closeLinear;
        if (input->ExpectTag(186)) goto parse_progress;
        break;
      }

      // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.LinearTrack.Progress progress = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_progress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_progress()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_progress;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BidderResponse_Ad_LinearCreative_LinearTrack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated string creativeView = 1;
  for (int i = 0; i < this->creativeview_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->creativeview(i).data(), this->creativeview(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->creativeview(i), output);
  }

  // repeated string start = 2;
  for (int i = 0; i < this->start_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->start(i).data(), this->start(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->start(i), output);
  }

  // repeated string firstQuartile = 3;
  for (int i = 0; i < this->firstquartile_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->firstquartile(i).data(), this->firstquartile(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->firstquartile(i), output);
  }

  // repeated string midpoint = 4;
  for (int i = 0; i < this->midpoint_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->midpoint(i).data(), this->midpoint(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->midpoint(i), output);
  }

  // repeated string thirdQuartile = 5;
  for (int i = 0; i < this->thirdquartile_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->thirdquartile(i).data(), this->thirdquartile(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->thirdquartile(i), output);
  }

  // repeated string complete = 6;
  for (int i = 0; i < this->complete_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->complete(i).data(), this->complete(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->complete(i), output);
  }

  // repeated string mute = 7;
  for (int i = 0; i < this->mute_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->mute(i).data(), this->mute(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->mute(i), output);
  }

  // repeated string unmute = 8;
  for (int i = 0; i < this->unmute_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->unmute(i).data(), this->unmute(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->unmute(i), output);
  }

  // repeated string pause = 9;
  for (int i = 0; i < this->pause_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->pause(i).data(), this->pause(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->pause(i), output);
  }

  // repeated string rewind = 10;
  for (int i = 0; i < this->rewind_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->rewind(i).data(), this->rewind(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->rewind(i), output);
  }

  // repeated string resume = 11;
  for (int i = 0; i < this->resume_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->resume(i).data(), this->resume(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->resume(i), output);
  }

  // repeated string fullscreen = 12;
  for (int i = 0; i < this->fullscreen_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->fullscreen(i).data(), this->fullscreen(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->fullscreen(i), output);
  }

  // repeated string expand = 13;
  for (int i = 0; i < this->expand_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->expand(i).data(), this->expand(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->expand(i), output);
  }

  // repeated string collapse = 14;
  for (int i = 0; i < this->collapse_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->collapse(i).data(), this->collapse(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->collapse(i), output);
  }

  // repeated string acceptInvitation = 15;
  for (int i = 0; i < this->acceptinvitation_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->acceptinvitation(i).data(), this->acceptinvitation(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->acceptinvitation(i), output);
  }

  // repeated string close = 16;
  for (int i = 0; i < this->close_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->close(i).data(), this->close(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->close(i), output);
  }

  // repeated string exitFullscreen = 17;
  for (int i = 0; i < this->exitfullscreen_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->exitfullscreen(i).data(), this->exitfullscreen(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->exitfullscreen(i), output);
  }

  // repeated string acceptInvitationLinear = 18;
  for (int i = 0; i < this->acceptinvitationlinear_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->acceptinvitationlinear(i).data(), this->acceptinvitationlinear(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->acceptinvitationlinear(i), output);
  }

  // repeated string skip = 19;
  for (int i = 0; i < this->skip_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->skip(i).data(), this->skip(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->skip(i), output);
  }

  // repeated string closeLinear = 22;
  for (int i = 0; i < this->closelinear_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->closelinear(i).data(), this->closelinear(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->closelinear(i), output);
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.LinearTrack.Progress progress = 23;
  for (int i = 0; i < this->progress_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->progress(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BidderResponse_Ad_LinearCreative_LinearTrack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string creativeView = 1;
  for (int i = 0; i < this->creativeview_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativeview(i).data(), this->creativeview(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->creativeview(i), target);
  }

  // repeated string start = 2;
  for (int i = 0; i < this->start_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->start(i).data(), this->start(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->start(i), target);
  }

  // repeated string firstQuartile = 3;
  for (int i = 0; i < this->firstquartile_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->firstquartile(i).data(), this->firstquartile(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->firstquartile(i), target);
  }

  // repeated string midpoint = 4;
  for (int i = 0; i < this->midpoint_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->midpoint(i).data(), this->midpoint(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->midpoint(i), target);
  }

  // repeated string thirdQuartile = 5;
  for (int i = 0; i < this->thirdquartile_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->thirdquartile(i).data(), this->thirdquartile(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->thirdquartile(i), target);
  }

  // repeated string complete = 6;
  for (int i = 0; i < this->complete_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->complete(i).data(), this->complete(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->complete(i), target);
  }

  // repeated string mute = 7;
  for (int i = 0; i < this->mute_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mute(i).data(), this->mute(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->mute(i), target);
  }

  // repeated string unmute = 8;
  for (int i = 0; i < this->unmute_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->unmute(i).data(), this->unmute(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->unmute(i), target);
  }

  // repeated string pause = 9;
  for (int i = 0; i < this->pause_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->pause(i).data(), this->pause(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->pause(i), target);
  }

  // repeated string rewind = 10;
  for (int i = 0; i < this->rewind_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rewind(i).data(), this->rewind(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->rewind(i), target);
  }

  // repeated string resume = 11;
  for (int i = 0; i < this->resume_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->resume(i).data(), this->resume(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(11, this->resume(i), target);
  }

  // repeated string fullscreen = 12;
  for (int i = 0; i < this->fullscreen_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fullscreen(i).data(), this->fullscreen(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(12, this->fullscreen(i), target);
  }

  // repeated string expand = 13;
  for (int i = 0; i < this->expand_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->expand(i).data(), this->expand(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(13, this->expand(i), target);
  }

  // repeated string collapse = 14;
  for (int i = 0; i < this->collapse_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->collapse(i).data(), this->collapse(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(14, this->collapse(i), target);
  }

  // repeated string acceptInvitation = 15;
  for (int i = 0; i < this->acceptinvitation_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->acceptinvitation(i).data(), this->acceptinvitation(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(15, this->acceptinvitation(i), target);
  }

  // repeated string close = 16;
  for (int i = 0; i < this->close_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->close(i).data(), this->close(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(16, this->close(i), target);
  }

  // repeated string exitFullscreen = 17;
  for (int i = 0; i < this->exitfullscreen_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->exitfullscreen(i).data(), this->exitfullscreen(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(17, this->exitfullscreen(i), target);
  }

  // repeated string acceptInvitationLinear = 18;
  for (int i = 0; i < this->acceptinvitationlinear_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->acceptinvitationlinear(i).data(), this->acceptinvitationlinear(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(18, this->acceptinvitationlinear(i), target);
  }

  // repeated string skip = 19;
  for (int i = 0; i < this->skip_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->skip(i).data(), this->skip(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(19, this->skip(i), target);
  }

  // repeated string closeLinear = 22;
  for (int i = 0; i < this->closelinear_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->closelinear(i).data(), this->closelinear(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(22, this->closelinear(i), target);
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.LinearTrack.Progress progress = 23;
  for (int i = 0; i < this->progress_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        23, this->progress(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BidderResponse_Ad_LinearCreative_LinearTrack::ByteSize() const {
  int total_size = 0;

  // repeated string creativeView = 1;
  total_size += 1 * this->creativeview_size();
  for (int i = 0; i < this->creativeview_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->creativeview(i));
  }

  // repeated string start = 2;
  total_size += 1 * this->start_size();
  for (int i = 0; i < this->start_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->start(i));
  }

  // repeated string firstQuartile = 3;
  total_size += 1 * this->firstquartile_size();
  for (int i = 0; i < this->firstquartile_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->firstquartile(i));
  }

  // repeated string midpoint = 4;
  total_size += 1 * this->midpoint_size();
  for (int i = 0; i < this->midpoint_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->midpoint(i));
  }

  // repeated string thirdQuartile = 5;
  total_size += 1 * this->thirdquartile_size();
  for (int i = 0; i < this->thirdquartile_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->thirdquartile(i));
  }

  // repeated string complete = 6;
  total_size += 1 * this->complete_size();
  for (int i = 0; i < this->complete_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->complete(i));
  }

  // repeated string mute = 7;
  total_size += 1 * this->mute_size();
  for (int i = 0; i < this->mute_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->mute(i));
  }

  // repeated string unmute = 8;
  total_size += 1 * this->unmute_size();
  for (int i = 0; i < this->unmute_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->unmute(i));
  }

  // repeated string pause = 9;
  total_size += 1 * this->pause_size();
  for (int i = 0; i < this->pause_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->pause(i));
  }

  // repeated string rewind = 10;
  total_size += 1 * this->rewind_size();
  for (int i = 0; i < this->rewind_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->rewind(i));
  }

  // repeated string resume = 11;
  total_size += 1 * this->resume_size();
  for (int i = 0; i < this->resume_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->resume(i));
  }

  // repeated string fullscreen = 12;
  total_size += 1 * this->fullscreen_size();
  for (int i = 0; i < this->fullscreen_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->fullscreen(i));
  }

  // repeated string expand = 13;
  total_size += 1 * this->expand_size();
  for (int i = 0; i < this->expand_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->expand(i));
  }

  // repeated string collapse = 14;
  total_size += 1 * this->collapse_size();
  for (int i = 0; i < this->collapse_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->collapse(i));
  }

  // repeated string acceptInvitation = 15;
  total_size += 1 * this->acceptinvitation_size();
  for (int i = 0; i < this->acceptinvitation_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->acceptinvitation(i));
  }

  // repeated string close = 16;
  total_size += 2 * this->close_size();
  for (int i = 0; i < this->close_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->close(i));
  }

  // repeated string closeLinear = 22;
  total_size += 2 * this->closelinear_size();
  for (int i = 0; i < this->closelinear_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->closelinear(i));
  }

  // repeated string exitFullscreen = 17;
  total_size += 2 * this->exitfullscreen_size();
  for (int i = 0; i < this->exitfullscreen_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->exitfullscreen(i));
  }

  // repeated string acceptInvitationLinear = 18;
  total_size += 2 * this->acceptinvitationlinear_size();
  for (int i = 0; i < this->acceptinvitationlinear_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->acceptinvitationlinear(i));
  }

  // repeated string skip = 19;
  total_size += 2 * this->skip_size();
  for (int i = 0; i < this->skip_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->skip(i));
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.LinearTrack.Progress progress = 23;
  total_size += 2 * this->progress_size();
  for (int i = 0; i < this->progress_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->progress(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidderResponse_Ad_LinearCreative_LinearTrack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BidderResponse_Ad_LinearCreative_LinearTrack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BidderResponse_Ad_LinearCreative_LinearTrack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BidderResponse_Ad_LinearCreative_LinearTrack::MergeFrom(const BidderResponse_Ad_LinearCreative_LinearTrack& from) {
  GOOGLE_CHECK_NE(&from, this);
  creativeview_.MergeFrom(from.creativeview_);
  start_.MergeFrom(from.start_);
  firstquartile_.MergeFrom(from.firstquartile_);
  midpoint_.MergeFrom(from.midpoint_);
  thirdquartile_.MergeFrom(from.thirdquartile_);
  complete_.MergeFrom(from.complete_);
  mute_.MergeFrom(from.mute_);
  unmute_.MergeFrom(from.unmute_);
  pause_.MergeFrom(from.pause_);
  rewind_.MergeFrom(from.rewind_);
  resume_.MergeFrom(from.resume_);
  fullscreen_.MergeFrom(from.fullscreen_);
  expand_.MergeFrom(from.expand_);
  collapse_.MergeFrom(from.collapse_);
  acceptinvitation_.MergeFrom(from.acceptinvitation_);
  close_.MergeFrom(from.close_);
  closelinear_.MergeFrom(from.closelinear_);
  exitfullscreen_.MergeFrom(from.exitfullscreen_);
  acceptinvitationlinear_.MergeFrom(from.acceptinvitationlinear_);
  skip_.MergeFrom(from.skip_);
  progress_.MergeFrom(from.progress_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BidderResponse_Ad_LinearCreative_LinearTrack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative_LinearTrack::CopyFrom(const BidderResponse_Ad_LinearCreative_LinearTrack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidderResponse_Ad_LinearCreative_LinearTrack::IsInitialized() const {

  return true;
}

void BidderResponse_Ad_LinearCreative_LinearTrack::Swap(BidderResponse_Ad_LinearCreative_LinearTrack* other) {
  if (other != this) {
    creativeview_.Swap(&other->creativeview_);
    start_.Swap(&other->start_);
    firstquartile_.Swap(&other->firstquartile_);
    midpoint_.Swap(&other->midpoint_);
    thirdquartile_.Swap(&other->thirdquartile_);
    complete_.Swap(&other->complete_);
    mute_.Swap(&other->mute_);
    unmute_.Swap(&other->unmute_);
    pause_.Swap(&other->pause_);
    rewind_.Swap(&other->rewind_);
    resume_.Swap(&other->resume_);
    fullscreen_.Swap(&other->fullscreen_);
    expand_.Swap(&other->expand_);
    collapse_.Swap(&other->collapse_);
    acceptinvitation_.Swap(&other->acceptinvitation_);
    close_.Swap(&other->close_);
    closelinear_.Swap(&other->closelinear_);
    exitfullscreen_.Swap(&other->exitfullscreen_);
    acceptinvitationlinear_.Swap(&other->acceptinvitationlinear_);
    skip_.Swap(&other->skip_);
    progress_.Swap(&other->progress_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BidderResponse_Ad_LinearCreative_LinearTrack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidderResponse_Ad_LinearCreative_LinearTrack_descriptor_;
  metadata.reflection = BidderResponse_Ad_LinearCreative_LinearTrack_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::kUrlFieldNumber;
const int BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::kIdFieldNumber;
#endif  // !_MSC_VER

BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::InitAsDefaultInstance() {
}

BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking(const BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::SharedCtor() {
  _cached_size_ = 0;
  url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::~BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking() {
  SharedDtor();
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::SharedDtor() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (this != default_instance_) {
  }
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking_descriptor_;
}

const BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking& BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdBidderResponseTemplate_2eproto();
  return *default_instance_;
}

BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking* BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::default_instance_ = NULL;

BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking* BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::New() const {
  return new BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking;
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_url()) {
      if (url_ != &::google::protobuf::internal::kEmptyString) {
        url_->clear();
      }
    }
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string url = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_id;
        break;
      }

      // optional string id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string url = 1;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->url(), output);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string url = 1;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string url = 1;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::MergeFrom(const BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_url()) {
      set_url(from.url());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::CopyFrom(const BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::IsInitialized() const {

  return true;
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::Swap(BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking* other) {
  if (other != this) {
    std::swap(url_, other->url_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking_descriptor_;
  metadata.reflection = BidderResponse_Ad_LinearCreative_VideoClicks_ClickTracking_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::kUrlFieldNumber;
const int BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::kIdFieldNumber;
#endif  // !_MSC_VER

BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::InitAsDefaultInstance() {
}

BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough(const BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::SharedCtor() {
  _cached_size_ = 0;
  url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::~BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough() {
  SharedDtor();
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::SharedDtor() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (this != default_instance_) {
  }
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough_descriptor_;
}

const BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough& BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdBidderResponseTemplate_2eproto();
  return *default_instance_;
}

BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough* BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::default_instance_ = NULL;

BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough* BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::New() const {
  return new BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough;
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_url()) {
      if (url_ != &::google::protobuf::internal::kEmptyString) {
        url_->clear();
      }
    }
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string url = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_id;
        break;
      }

      // optional string id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string url = 1;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->url(), output);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string url = 1;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string url = 1;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::MergeFrom(const BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_url()) {
      set_url(from.url());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::CopyFrom(const BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::IsInitialized() const {

  return true;
}

void BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::Swap(BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough* other) {
  if (other != this) {
    std::swap(url_, other->url_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough_descriptor_;
  metadata.reflection = BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::kUrlFieldNumber;
const int BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::kIdFieldNumber;
#endif  // !_MSC_VER

BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::InitAsDefaultInstance() {
}

BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick(const BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::SharedCtor() {
  _cached_size_ = 0;
  url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::~BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick() {
  SharedDtor();
}

void BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::SharedDtor() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (this != default_instance_) {
  }
}

void BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick_descriptor_;
}

const BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick& BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdBidderResponseTemplate_2eproto();
  return *default_instance_;
}

BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick* BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::default_instance_ = NULL;

BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick* BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::New() const {
  return new BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick;
}

void BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_url()) {
      if (url_ != &::google::protobuf::internal::kEmptyString) {
        url_->clear();
      }
    }
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string url = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_id;
        break;
      }

      // optional string id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string url = 1;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->url(), output);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string url = 1;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string url = 1;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::MergeFrom(const BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_url()) {
      set_url(from.url());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::CopyFrom(const BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::IsInitialized() const {

  return true;
}

void BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::Swap(BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick* other) {
  if (other != this) {
    std::swap(url_, other->url_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick_descriptor_;
  metadata.reflection = BidderResponse_Ad_LinearCreative_VideoClicks_CustomClick_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BidderResponse_Ad_LinearCreative_VideoClicks::kClickTrackingFieldNumber;
const int BidderResponse_Ad_LinearCreative_VideoClicks::kClickThroughFieldNumber;
const int BidderResponse_Ad_LinearCreative_VideoClicks::kCustomClickFieldNumber;
#endif  // !_MSC_VER

BidderResponse_Ad_LinearCreative_VideoClicks::BidderResponse_Ad_LinearCreative_VideoClicks()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BidderResponse_Ad_LinearCreative_VideoClicks::InitAsDefaultInstance() {
  clickthrough_ = const_cast< ::com::rj::protos::msg::BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough*>(&::com::rj::protos::msg::BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::default_instance());
}

BidderResponse_Ad_LinearCreative_VideoClicks::BidderResponse_Ad_LinearCreative_VideoClicks(const BidderResponse_Ad_LinearCreative_VideoClicks& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative_VideoClicks::SharedCtor() {
  _cached_size_ = 0;
  clickthrough_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidderResponse_Ad_LinearCreative_VideoClicks::~BidderResponse_Ad_LinearCreative_VideoClicks() {
  SharedDtor();
}

void BidderResponse_Ad_LinearCreative_VideoClicks::SharedDtor() {
  if (this != default_instance_) {
    delete clickthrough_;
  }
}

void BidderResponse_Ad_LinearCreative_VideoClicks::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative_VideoClicks::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidderResponse_Ad_LinearCreative_VideoClicks_descriptor_;
}

const BidderResponse_Ad_LinearCreative_VideoClicks& BidderResponse_Ad_LinearCreative_VideoClicks::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdBidderResponseTemplate_2eproto();
  return *default_instance_;
}

BidderResponse_Ad_LinearCreative_VideoClicks* BidderResponse_Ad_LinearCreative_VideoClicks::default_instance_ = NULL;

BidderResponse_Ad_LinearCreative_VideoClicks* BidderResponse_Ad_LinearCreative_VideoClicks::New() const {
  return new BidderResponse_Ad_LinearCreative_VideoClicks;
}

void BidderResponse_Ad_LinearCreative_VideoClicks::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_clickthrough()) {
      if (clickthrough_ != NULL) clickthrough_->::com::rj::protos::msg::BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::Clear();
    }
  }
  clicktracking_.Clear();
  customclick_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BidderResponse_Ad_LinearCreative_VideoClicks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.VideoClicks.ClickTracking clickTracking = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_clickTracking:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_clicktracking()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_clickTracking;
        if (input->ExpectTag(18)) goto parse_clickThrough;
        break;
      }

      // optional .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.VideoClicks.ClickThrough clickThrough = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_clickThrough:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_clickthrough()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_customClick;
        break;
      }

      // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.VideoClicks.CustomClick customClick = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_customClick:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_customclick()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_customClick;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BidderResponse_Ad_LinearCreative_VideoClicks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.VideoClicks.ClickTracking clickTracking = 1;
  for (int i = 0; i < this->clicktracking_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->clicktracking(i), output);
  }

  // optional .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.VideoClicks.ClickThrough clickThrough = 2;
  if (has_clickthrough()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->clickthrough(), output);
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.VideoClicks.CustomClick customClick = 3;
  for (int i = 0; i < this->customclick_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->customclick(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BidderResponse_Ad_LinearCreative_VideoClicks::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.VideoClicks.ClickTracking clickTracking = 1;
  for (int i = 0; i < this->clicktracking_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->clicktracking(i), target);
  }

  // optional .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.VideoClicks.ClickThrough clickThrough = 2;
  if (has_clickthrough()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->clickthrough(), target);
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.VideoClicks.CustomClick customClick = 3;
  for (int i = 0; i < this->customclick_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->customclick(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BidderResponse_Ad_LinearCreative_VideoClicks::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.VideoClicks.ClickThrough clickThrough = 2;
    if (has_clickthrough()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->clickthrough());
    }

  }
  // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.VideoClicks.ClickTracking clickTracking = 1;
  total_size += 1 * this->clicktracking_size();
  for (int i = 0; i < this->clicktracking_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->clicktracking(i));
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.VideoClicks.CustomClick customClick = 3;
  total_size += 1 * this->customclick_size();
  for (int i = 0; i < this->customclick_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->customclick(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidderResponse_Ad_LinearCreative_VideoClicks::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BidderResponse_Ad_LinearCreative_VideoClicks* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BidderResponse_Ad_LinearCreative_VideoClicks*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BidderResponse_Ad_LinearCreative_VideoClicks::MergeFrom(const BidderResponse_Ad_LinearCreative_VideoClicks& from) {
  GOOGLE_CHECK_NE(&from, this);
  clicktracking_.MergeFrom(from.clicktracking_);
  customclick_.MergeFrom(from.customclick_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_clickthrough()) {
      mutable_clickthrough()->::com::rj::protos::msg::BidderResponse_Ad_LinearCreative_VideoClicks_ClickThrough::MergeFrom(from.clickthrough());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BidderResponse_Ad_LinearCreative_VideoClicks::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative_VideoClicks::CopyFrom(const BidderResponse_Ad_LinearCreative_VideoClicks& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidderResponse_Ad_LinearCreative_VideoClicks::IsInitialized() const {

  return true;
}

void BidderResponse_Ad_LinearCreative_VideoClicks::Swap(BidderResponse_Ad_LinearCreative_VideoClicks* other) {
  if (other != this) {
    clicktracking_.Swap(&other->clicktracking_);
    std::swap(clickthrough_, other->clickthrough_);
    customclick_.Swap(&other->customclick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BidderResponse_Ad_LinearCreative_VideoClicks::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidderResponse_Ad_LinearCreative_VideoClicks_descriptor_;
  metadata.reflection = BidderResponse_Ad_LinearCreative_VideoClicks_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BidderResponse_Ad_LinearCreative_AdParameters::kParaFieldNumber;
const int BidderResponse_Ad_LinearCreative_AdParameters::kXmlEncodedFieldNumber;
#endif  // !_MSC_VER

BidderResponse_Ad_LinearCreative_AdParameters::BidderResponse_Ad_LinearCreative_AdParameters()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BidderResponse_Ad_LinearCreative_AdParameters::InitAsDefaultInstance() {
}

BidderResponse_Ad_LinearCreative_AdParameters::BidderResponse_Ad_LinearCreative_AdParameters(const BidderResponse_Ad_LinearCreative_AdParameters& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative_AdParameters::SharedCtor() {
  _cached_size_ = 0;
  para_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  xmlencoded_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidderResponse_Ad_LinearCreative_AdParameters::~BidderResponse_Ad_LinearCreative_AdParameters() {
  SharedDtor();
}

void BidderResponse_Ad_LinearCreative_AdParameters::SharedDtor() {
  if (para_ != &::google::protobuf::internal::kEmptyString) {
    delete para_;
  }
  if (this != default_instance_) {
  }
}

void BidderResponse_Ad_LinearCreative_AdParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative_AdParameters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidderResponse_Ad_LinearCreative_AdParameters_descriptor_;
}

const BidderResponse_Ad_LinearCreative_AdParameters& BidderResponse_Ad_LinearCreative_AdParameters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdBidderResponseTemplate_2eproto();
  return *default_instance_;
}

BidderResponse_Ad_LinearCreative_AdParameters* BidderResponse_Ad_LinearCreative_AdParameters::default_instance_ = NULL;

BidderResponse_Ad_LinearCreative_AdParameters* BidderResponse_Ad_LinearCreative_AdParameters::New() const {
  return new BidderResponse_Ad_LinearCreative_AdParameters;
}

void BidderResponse_Ad_LinearCreative_AdParameters::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_para()) {
      if (para_ != &::google::protobuf::internal::kEmptyString) {
        para_->clear();
      }
    }
    xmlencoded_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BidderResponse_Ad_LinearCreative_AdParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string para = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_para()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->para().data(), this->para().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_xmlEncoded;
        break;
      }

      // optional bool xmlEncoded = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_xmlEncoded:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xmlencoded_)));
          set_has_xmlencoded();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BidderResponse_Ad_LinearCreative_AdParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string para = 1;
  if (has_para()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->para().data(), this->para().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->para(), output);
  }

  // optional bool xmlEncoded = 2;
  if (has_xmlencoded()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->xmlencoded(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BidderResponse_Ad_LinearCreative_AdParameters::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string para = 1;
  if (has_para()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->para().data(), this->para().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->para(), target);
  }

  // optional bool xmlEncoded = 2;
  if (has_xmlencoded()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->xmlencoded(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BidderResponse_Ad_LinearCreative_AdParameters::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string para = 1;
    if (has_para()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->para());
    }

    // optional bool xmlEncoded = 2;
    if (has_xmlencoded()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidderResponse_Ad_LinearCreative_AdParameters::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BidderResponse_Ad_LinearCreative_AdParameters* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BidderResponse_Ad_LinearCreative_AdParameters*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BidderResponse_Ad_LinearCreative_AdParameters::MergeFrom(const BidderResponse_Ad_LinearCreative_AdParameters& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_para()) {
      set_para(from.para());
    }
    if (from.has_xmlencoded()) {
      set_xmlencoded(from.xmlencoded());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BidderResponse_Ad_LinearCreative_AdParameters::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative_AdParameters::CopyFrom(const BidderResponse_Ad_LinearCreative_AdParameters& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidderResponse_Ad_LinearCreative_AdParameters::IsInitialized() const {

  return true;
}

void BidderResponse_Ad_LinearCreative_AdParameters::Swap(BidderResponse_Ad_LinearCreative_AdParameters* other) {
  if (other != this) {
    std::swap(para_, other->para_);
    std::swap(xmlencoded_, other->xmlencoded_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BidderResponse_Ad_LinearCreative_AdParameters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidderResponse_Ad_LinearCreative_AdParameters_descriptor_;
  metadata.reflection = BidderResponse_Ad_LinearCreative_AdParameters_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::kUrlFieldNumber;
const int BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::kIdFieldNumber;
#endif  // !_MSC_VER

BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::BidderResponse_Ad_LinearCreative_Icon_IconClickTracking()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::InitAsDefaultInstance() {
}

BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::BidderResponse_Ad_LinearCreative_Icon_IconClickTracking(const BidderResponse_Ad_LinearCreative_Icon_IconClickTracking& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::SharedCtor() {
  _cached_size_ = 0;
  url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::~BidderResponse_Ad_LinearCreative_Icon_IconClickTracking() {
  SharedDtor();
}

void BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::SharedDtor() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (this != default_instance_) {
  }
}

void BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidderResponse_Ad_LinearCreative_Icon_IconClickTracking_descriptor_;
}

const BidderResponse_Ad_LinearCreative_Icon_IconClickTracking& BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdBidderResponseTemplate_2eproto();
  return *default_instance_;
}

BidderResponse_Ad_LinearCreative_Icon_IconClickTracking* BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::default_instance_ = NULL;

BidderResponse_Ad_LinearCreative_Icon_IconClickTracking* BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::New() const {
  return new BidderResponse_Ad_LinearCreative_Icon_IconClickTracking;
}

void BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_url()) {
      if (url_ != &::google::protobuf::internal::kEmptyString) {
        url_->clear();
      }
    }
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string url = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_id;
        break;
      }

      // optional string id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string url = 1;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->url(), output);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string url = 1;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string url = 1;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BidderResponse_Ad_LinearCreative_Icon_IconClickTracking* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BidderResponse_Ad_LinearCreative_Icon_IconClickTracking*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::MergeFrom(const BidderResponse_Ad_LinearCreative_Icon_IconClickTracking& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_url()) {
      set_url(from.url());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::CopyFrom(const BidderResponse_Ad_LinearCreative_Icon_IconClickTracking& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::IsInitialized() const {

  return true;
}

void BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::Swap(BidderResponse_Ad_LinearCreative_Icon_IconClickTracking* other) {
  if (other != this) {
    std::swap(url_, other->url_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BidderResponse_Ad_LinearCreative_Icon_IconClickTracking::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidderResponse_Ad_LinearCreative_Icon_IconClickTracking_descriptor_;
  metadata.reflection = BidderResponse_Ad_LinearCreative_Icon_IconClickTracking_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BidderResponse_Ad_LinearCreative_Icon::kProgramFieldNumber;
const int BidderResponse_Ad_LinearCreative_Icon::kWidthFieldNumber;
const int BidderResponse_Ad_LinearCreative_Icon::kHeightFieldNumber;
const int BidderResponse_Ad_LinearCreative_Icon::kXPositionFieldNumber;
const int BidderResponse_Ad_LinearCreative_Icon::kYPositionFieldNumber;
const int BidderResponse_Ad_LinearCreative_Icon::kDurationFieldNumber;
const int BidderResponse_Ad_LinearCreative_Icon::kOffsetFieldNumber;
const int BidderResponse_Ad_LinearCreative_Icon::kApiFrameworkFieldNumber;
const int BidderResponse_Ad_LinearCreative_Icon::kStaticUrlFieldNumber;
const int BidderResponse_Ad_LinearCreative_Icon::kCreativeTypeFieldNumber;
const int BidderResponse_Ad_LinearCreative_Icon::kIframeUrlFieldNumber;
const int BidderResponse_Ad_LinearCreative_Icon::kHtmlFieldNumber;
const int BidderResponse_Ad_LinearCreative_Icon::kIconClickThroughFieldNumber;
const int BidderResponse_Ad_LinearCreative_Icon::kIconClickTrackingFieldNumber;
const int BidderResponse_Ad_LinearCreative_Icon::kIconViewTrackingFieldNumber;
#endif  // !_MSC_VER

BidderResponse_Ad_LinearCreative_Icon::BidderResponse_Ad_LinearCreative_Icon()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BidderResponse_Ad_LinearCreative_Icon::InitAsDefaultInstance() {
}

BidderResponse_Ad_LinearCreative_Icon::BidderResponse_Ad_LinearCreative_Icon(const BidderResponse_Ad_LinearCreative_Icon& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative_Icon::SharedCtor() {
  _cached_size_ = 0;
  program_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  width_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  height_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  xposition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  yposition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  duration_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  offset_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  apiframework_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  staticurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  creativetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  iframeurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  html_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  iconclickthrough_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidderResponse_Ad_LinearCreative_Icon::~BidderResponse_Ad_LinearCreative_Icon() {
  SharedDtor();
}

void BidderResponse_Ad_LinearCreative_Icon::SharedDtor() {
  if (program_ != &::google::protobuf::internal::kEmptyString) {
    delete program_;
  }
  if (width_ != &::google::protobuf::internal::kEmptyString) {
    delete width_;
  }
  if (height_ != &::google::protobuf::internal::kEmptyString) {
    delete height_;
  }
  if (xposition_ != &::google::protobuf::internal::kEmptyString) {
    delete xposition_;
  }
  if (yposition_ != &::google::protobuf::internal::kEmptyString) {
    delete yposition_;
  }
  if (duration_ != &::google::protobuf::internal::kEmptyString) {
    delete duration_;
  }
  if (offset_ != &::google::protobuf::internal::kEmptyString) {
    delete offset_;
  }
  if (apiframework_ != &::google::protobuf::internal::kEmptyString) {
    delete apiframework_;
  }
  if (staticurl_ != &::google::protobuf::internal::kEmptyString) {
    delete staticurl_;
  }
  if (creativetype_ != &::google::protobuf::internal::kEmptyString) {
    delete creativetype_;
  }
  if (iframeurl_ != &::google::protobuf::internal::kEmptyString) {
    delete iframeurl_;
  }
  if (html_ != &::google::protobuf::internal::kEmptyString) {
    delete html_;
  }
  if (iconclickthrough_ != &::google::protobuf::internal::kEmptyString) {
    delete iconclickthrough_;
  }
  if (this != default_instance_) {
  }
}

void BidderResponse_Ad_LinearCreative_Icon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative_Icon::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidderResponse_Ad_LinearCreative_Icon_descriptor_;
}

const BidderResponse_Ad_LinearCreative_Icon& BidderResponse_Ad_LinearCreative_Icon::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdBidderResponseTemplate_2eproto();
  return *default_instance_;
}

BidderResponse_Ad_LinearCreative_Icon* BidderResponse_Ad_LinearCreative_Icon::default_instance_ = NULL;

BidderResponse_Ad_LinearCreative_Icon* BidderResponse_Ad_LinearCreative_Icon::New() const {
  return new BidderResponse_Ad_LinearCreative_Icon;
}

void BidderResponse_Ad_LinearCreative_Icon::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_program()) {
      if (program_ != &::google::protobuf::internal::kEmptyString) {
        program_->clear();
      }
    }
    if (has_width()) {
      if (width_ != &::google::protobuf::internal::kEmptyString) {
        width_->clear();
      }
    }
    if (has_height()) {
      if (height_ != &::google::protobuf::internal::kEmptyString) {
        height_->clear();
      }
    }
    if (has_xposition()) {
      if (xposition_ != &::google::protobuf::internal::kEmptyString) {
        xposition_->clear();
      }
    }
    if (has_yposition()) {
      if (yposition_ != &::google::protobuf::internal::kEmptyString) {
        yposition_->clear();
      }
    }
    if (has_duration()) {
      if (duration_ != &::google::protobuf::internal::kEmptyString) {
        duration_->clear();
      }
    }
    if (has_offset()) {
      if (offset_ != &::google::protobuf::internal::kEmptyString) {
        offset_->clear();
      }
    }
    if (has_apiframework()) {
      if (apiframework_ != &::google::protobuf::internal::kEmptyString) {
        apiframework_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_staticurl()) {
      if (staticurl_ != &::google::protobuf::internal::kEmptyString) {
        staticurl_->clear();
      }
    }
    if (has_creativetype()) {
      if (creativetype_ != &::google::protobuf::internal::kEmptyString) {
        creativetype_->clear();
      }
    }
    if (has_iframeurl()) {
      if (iframeurl_ != &::google::protobuf::internal::kEmptyString) {
        iframeurl_->clear();
      }
    }
    if (has_html()) {
      if (html_ != &::google::protobuf::internal::kEmptyString) {
        html_->clear();
      }
    }
    if (has_iconclickthrough()) {
      if (iconclickthrough_ != &::google::protobuf::internal::kEmptyString) {
        iconclickthrough_->clear();
      }
    }
  }
  iconclicktracking_.Clear();
  iconviewtracking_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BidderResponse_Ad_LinearCreative_Icon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string program = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_program()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->program().data(), this->program().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_width;
        break;
      }

      // optional string width = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_width:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_width()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->width().data(), this->width().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_height;
        break;
      }

      // optional string height = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_height:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_height()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->height().data(), this->height().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_xPosition;
        break;
      }

      // optional string xPosition = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_xPosition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xposition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->xposition().data(), this->xposition().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_yPosition;
        break;
      }

      // optional string yPosition = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_yPosition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_yposition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->yposition().data(), this->yposition().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_duration;
        break;
      }

      // optional string duration = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_duration:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_duration()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->duration().data(), this->duration().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_offset;
        break;
      }

      // optional string offset = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_offset:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_offset()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->offset().data(), this->offset().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_apiFramework;
        break;
      }

      // optional string apiFramework = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_apiFramework:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apiframework()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->apiframework().data(), this->apiframework().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_staticUrl;
        break;
      }

      // optional string staticUrl = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_staticUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_staticurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->staticurl().data(), this->staticurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_creativeType;
        break;
      }

      // optional string creativeType = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_creativeType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creativetype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->creativetype().data(), this->creativetype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_iframeUrl;
        break;
      }

      // optional string iframeUrl = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_iframeUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iframeurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->iframeurl().data(), this->iframeurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_html;
        break;
      }

      // optional string html = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_html:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_html()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->html().data(), this->html().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_iconClickThrough;
        break;
      }

      // optional string iconClickThrough = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_iconClickThrough:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iconclickthrough()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->iconclickthrough().data(), this->iconclickthrough().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_iconClickTracking;
        break;
      }

      // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.Icon.IconClickTracking iconClickTracking = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_iconClickTracking:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_iconclicktracking()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_iconClickTracking;
        if (input->ExpectTag(122)) goto parse_iconViewTracking;
        break;
      }

      // repeated string iconViewTracking = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_iconViewTracking:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_iconviewtracking()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->iconviewtracking(this->iconviewtracking_size() - 1).data(),
            this->iconviewtracking(this->iconviewtracking_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_iconViewTracking;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BidderResponse_Ad_LinearCreative_Icon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string program = 1;
  if (has_program()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->program().data(), this->program().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->program(), output);
  }

  // optional string width = 2;
  if (has_width()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->width().data(), this->width().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->width(), output);
  }

  // optional string height = 3;
  if (has_height()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->height().data(), this->height().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->height(), output);
  }

  // optional string xPosition = 4;
  if (has_xposition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->xposition().data(), this->xposition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->xposition(), output);
  }

  // optional string yPosition = 5;
  if (has_yposition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->yposition().data(), this->yposition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->yposition(), output);
  }

  // optional string duration = 6;
  if (has_duration()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->duration().data(), this->duration().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->duration(), output);
  }

  // optional string offset = 7;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->offset().data(), this->offset().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->offset(), output);
  }

  // optional string apiFramework = 8;
  if (has_apiframework()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->apiframework().data(), this->apiframework().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->apiframework(), output);
  }

  // optional string staticUrl = 9;
  if (has_staticurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->staticurl().data(), this->staticurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->staticurl(), output);
  }

  // optional string creativeType = 10;
  if (has_creativetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativetype().data(), this->creativetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->creativetype(), output);
  }

  // optional string iframeUrl = 11;
  if (has_iframeurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->iframeurl().data(), this->iframeurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->iframeurl(), output);
  }

  // optional string html = 12;
  if (has_html()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->html().data(), this->html().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->html(), output);
  }

  // optional string iconClickThrough = 13;
  if (has_iconclickthrough()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->iconclickthrough().data(), this->iconclickthrough().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->iconclickthrough(), output);
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.Icon.IconClickTracking iconClickTracking = 14;
  for (int i = 0; i < this->iconclicktracking_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->iconclicktracking(i), output);
  }

  // repeated string iconViewTracking = 15;
  for (int i = 0; i < this->iconviewtracking_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->iconviewtracking(i).data(), this->iconviewtracking(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->iconviewtracking(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BidderResponse_Ad_LinearCreative_Icon::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string program = 1;
  if (has_program()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->program().data(), this->program().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->program(), target);
  }

  // optional string width = 2;
  if (has_width()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->width().data(), this->width().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->width(), target);
  }

  // optional string height = 3;
  if (has_height()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->height().data(), this->height().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->height(), target);
  }

  // optional string xPosition = 4;
  if (has_xposition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->xposition().data(), this->xposition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->xposition(), target);
  }

  // optional string yPosition = 5;
  if (has_yposition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->yposition().data(), this->yposition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->yposition(), target);
  }

  // optional string duration = 6;
  if (has_duration()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->duration().data(), this->duration().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->duration(), target);
  }

  // optional string offset = 7;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->offset().data(), this->offset().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->offset(), target);
  }

  // optional string apiFramework = 8;
  if (has_apiframework()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->apiframework().data(), this->apiframework().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->apiframework(), target);
  }

  // optional string staticUrl = 9;
  if (has_staticurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->staticurl().data(), this->staticurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->staticurl(), target);
  }

  // optional string creativeType = 10;
  if (has_creativetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativetype().data(), this->creativetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->creativetype(), target);
  }

  // optional string iframeUrl = 11;
  if (has_iframeurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->iframeurl().data(), this->iframeurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->iframeurl(), target);
  }

  // optional string html = 12;
  if (has_html()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->html().data(), this->html().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->html(), target);
  }

  // optional string iconClickThrough = 13;
  if (has_iconclickthrough()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->iconclickthrough().data(), this->iconclickthrough().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->iconclickthrough(), target);
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.Icon.IconClickTracking iconClickTracking = 14;
  for (int i = 0; i < this->iconclicktracking_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->iconclicktracking(i), target);
  }

  // repeated string iconViewTracking = 15;
  for (int i = 0; i < this->iconviewtracking_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->iconviewtracking(i).data(), this->iconviewtracking(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(15, this->iconviewtracking(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BidderResponse_Ad_LinearCreative_Icon::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string program = 1;
    if (has_program()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->program());
    }

    // optional string width = 2;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->width());
    }

    // optional string height = 3;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->height());
    }

    // optional string xPosition = 4;
    if (has_xposition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->xposition());
    }

    // optional string yPosition = 5;
    if (has_yposition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->yposition());
    }

    // optional string duration = 6;
    if (has_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->duration());
    }

    // optional string offset = 7;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->offset());
    }

    // optional string apiFramework = 8;
    if (has_apiframework()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->apiframework());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string staticUrl = 9;
    if (has_staticurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->staticurl());
    }

    // optional string creativeType = 10;
    if (has_creativetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creativetype());
    }

    // optional string iframeUrl = 11;
    if (has_iframeurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->iframeurl());
    }

    // optional string html = 12;
    if (has_html()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->html());
    }

    // optional string iconClickThrough = 13;
    if (has_iconclickthrough()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->iconclickthrough());
    }

  }
  // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.Icon.IconClickTracking iconClickTracking = 14;
  total_size += 1 * this->iconclicktracking_size();
  for (int i = 0; i < this->iconclicktracking_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->iconclicktracking(i));
  }

  // repeated string iconViewTracking = 15;
  total_size += 1 * this->iconviewtracking_size();
  for (int i = 0; i < this->iconviewtracking_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->iconviewtracking(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidderResponse_Ad_LinearCreative_Icon::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BidderResponse_Ad_LinearCreative_Icon* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BidderResponse_Ad_LinearCreative_Icon*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BidderResponse_Ad_LinearCreative_Icon::MergeFrom(const BidderResponse_Ad_LinearCreative_Icon& from) {
  GOOGLE_CHECK_NE(&from, this);
  iconclicktracking_.MergeFrom(from.iconclicktracking_);
  iconviewtracking_.MergeFrom(from.iconviewtracking_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_program()) {
      set_program(from.program());
    }
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_xposition()) {
      set_xposition(from.xposition());
    }
    if (from.has_yposition()) {
      set_yposition(from.yposition());
    }
    if (from.has_duration()) {
      set_duration(from.duration());
    }
    if (from.has_offset()) {
      set_offset(from.offset());
    }
    if (from.has_apiframework()) {
      set_apiframework(from.apiframework());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_staticurl()) {
      set_staticurl(from.staticurl());
    }
    if (from.has_creativetype()) {
      set_creativetype(from.creativetype());
    }
    if (from.has_iframeurl()) {
      set_iframeurl(from.iframeurl());
    }
    if (from.has_html()) {
      set_html(from.html());
    }
    if (from.has_iconclickthrough()) {
      set_iconclickthrough(from.iconclickthrough());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BidderResponse_Ad_LinearCreative_Icon::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative_Icon::CopyFrom(const BidderResponse_Ad_LinearCreative_Icon& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidderResponse_Ad_LinearCreative_Icon::IsInitialized() const {

  return true;
}

void BidderResponse_Ad_LinearCreative_Icon::Swap(BidderResponse_Ad_LinearCreative_Icon* other) {
  if (other != this) {
    std::swap(program_, other->program_);
    std::swap(width_, other->width_);
    std::swap(height_, other->height_);
    std::swap(xposition_, other->xposition_);
    std::swap(yposition_, other->yposition_);
    std::swap(duration_, other->duration_);
    std::swap(offset_, other->offset_);
    std::swap(apiframework_, other->apiframework_);
    std::swap(staticurl_, other->staticurl_);
    std::swap(creativetype_, other->creativetype_);
    std::swap(iframeurl_, other->iframeurl_);
    std::swap(html_, other->html_);
    std::swap(iconclickthrough_, other->iconclickthrough_);
    iconclicktracking_.Swap(&other->iconclicktracking_);
    iconviewtracking_.Swap(&other->iconviewtracking_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BidderResponse_Ad_LinearCreative_Icon::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidderResponse_Ad_LinearCreative_Icon_descriptor_;
  metadata.reflection = BidderResponse_Ad_LinearCreative_Icon_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BidderResponse_Ad_LinearCreative::kVideosFieldNumber;
const int BidderResponse_Ad_LinearCreative::kLinearTrackFieldNumber;
const int BidderResponse_Ad_LinearCreative::kVideoClicksFieldNumber;
const int BidderResponse_Ad_LinearCreative::kAdParametersFieldNumber;
const int BidderResponse_Ad_LinearCreative::kIconsFieldNumber;
const int BidderResponse_Ad_LinearCreative::kDurationFieldNumber;
const int BidderResponse_Ad_LinearCreative::kCreativeExtensionFieldNumber;
const int BidderResponse_Ad_LinearCreative::kIdFieldNumber;
const int BidderResponse_Ad_LinearCreative::kSequenceFieldNumber;
const int BidderResponse_Ad_LinearCreative::kAdIdFieldNumber;
const int BidderResponse_Ad_LinearCreative::kApiFrameworkFieldNumber;
const int BidderResponse_Ad_LinearCreative::kSkipoffsetFieldNumber;
#endif  // !_MSC_VER

BidderResponse_Ad_LinearCreative::BidderResponse_Ad_LinearCreative()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BidderResponse_Ad_LinearCreative::InitAsDefaultInstance() {
  lineartrack_ = const_cast< ::com::rj::protos::msg::BidderResponse_Ad_LinearCreative_LinearTrack*>(&::com::rj::protos::msg::BidderResponse_Ad_LinearCreative_LinearTrack::default_instance());
  videoclicks_ = const_cast< ::com::rj::protos::msg::BidderResponse_Ad_LinearCreative_VideoClicks*>(&::com::rj::protos::msg::BidderResponse_Ad_LinearCreative_VideoClicks::default_instance());
  adparameters_ = const_cast< ::com::rj::protos::msg::BidderResponse_Ad_LinearCreative_AdParameters*>(&::com::rj::protos::msg::BidderResponse_Ad_LinearCreative_AdParameters::default_instance());
}

BidderResponse_Ad_LinearCreative::BidderResponse_Ad_LinearCreative(const BidderResponse_Ad_LinearCreative& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative::SharedCtor() {
  _cached_size_ = 0;
  lineartrack_ = NULL;
  videoclicks_ = NULL;
  adparameters_ = NULL;
  duration_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sequence_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  adid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  apiframework_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  skipoffset_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidderResponse_Ad_LinearCreative::~BidderResponse_Ad_LinearCreative() {
  SharedDtor();
}

void BidderResponse_Ad_LinearCreative::SharedDtor() {
  if (duration_ != &::google::protobuf::internal::kEmptyString) {
    delete duration_;
  }
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (sequence_ != &::google::protobuf::internal::kEmptyString) {
    delete sequence_;
  }
  if (adid_ != &::google::protobuf::internal::kEmptyString) {
    delete adid_;
  }
  if (apiframework_ != &::google::protobuf::internal::kEmptyString) {
    delete apiframework_;
  }
  if (skipoffset_ != &::google::protobuf::internal::kEmptyString) {
    delete skipoffset_;
  }
  if (this != default_instance_) {
    delete lineartrack_;
    delete videoclicks_;
    delete adparameters_;
  }
}

void BidderResponse_Ad_LinearCreative::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidderResponse_Ad_LinearCreative::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidderResponse_Ad_LinearCreative_descriptor_;
}

const BidderResponse_Ad_LinearCreative& BidderResponse_Ad_LinearCreative::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdBidderResponseTemplate_2eproto();
  return *default_instance_;
}

BidderResponse_Ad_LinearCreative* BidderResponse_Ad_LinearCreative::default_instance_ = NULL;

BidderResponse_Ad_LinearCreative* BidderResponse_Ad_LinearCreative::New() const {
  return new BidderResponse_Ad_LinearCreative;
}

void BidderResponse_Ad_LinearCreative::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_lineartrack()) {
      if (lineartrack_ != NULL) lineartrack_->::com::rj::protos::msg::BidderResponse_Ad_LinearCreative_LinearTrack::Clear();
    }
    if (has_videoclicks()) {
      if (videoclicks_ != NULL) videoclicks_->::com::rj::protos::msg::BidderResponse_Ad_LinearCreative_VideoClicks::Clear();
    }
    if (has_adparameters()) {
      if (adparameters_ != NULL) adparameters_->::com::rj::protos::msg::BidderResponse_Ad_LinearCreative_AdParameters::Clear();
    }
    if (has_duration()) {
      if (duration_ != &::google::protobuf::internal::kEmptyString) {
        duration_->clear();
      }
    }
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_sequence()) {
      if (sequence_ != &::google::protobuf::internal::kEmptyString) {
        sequence_->clear();
      }
    }
    if (has_adid()) {
      if (adid_ != &::google::protobuf::internal::kEmptyString) {
        adid_->clear();
      }
    }
    if (has_apiframework()) {
      if (apiframework_ != &::google::protobuf::internal::kEmptyString) {
        apiframework_->clear();
      }
    }
    if (has_skipoffset()) {
      if (skipoffset_ != &::google::protobuf::internal::kEmptyString) {
        skipoffset_->clear();
      }
    }
  }
  videos_.Clear();
  icons_.Clear();
  creativeextension_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BidderResponse_Ad_LinearCreative::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.Video videos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_videos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_videos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_videos;
        if (input->ExpectTag(18)) goto parse_linearTrack;
        break;
      }

      // optional .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.LinearTrack linearTrack = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_linearTrack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lineartrack()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_videoClicks;
        break;
      }

      // optional .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.VideoClicks videoClicks = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_videoClicks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_videoclicks()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_adParameters;
        break;
      }

      // optional .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.AdParameters adParameters = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adParameters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_adparameters()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_icons;
        break;
      }

      // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.Icon icons = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_icons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_icons()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_icons;
        if (input->ExpectTag(50)) goto parse_duration;
        break;
      }

      // optional string duration = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_duration:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_duration()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->duration().data(), this->duration().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_id;
        break;
      }

      // optional string id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_sequence;
        break;
      }

      // optional string sequence = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sequence:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sequence()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sequence().data(), this->sequence().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_adId;
        break;
      }

      // optional string adId = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->adid().data(), this->adid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_skipoffset;
        break;
      }

      // optional string skipoffset = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skipoffset:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skipoffset()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->skipoffset().data(), this->skipoffset().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_creativeExtension;
        break;
      }

      // repeated string creativeExtension = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_creativeExtension:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_creativeextension()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->creativeextension(this->creativeextension_size() - 1).data(),
            this->creativeextension(this->creativeextension_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_creativeExtension;
        if (input->ExpectTag(138)) goto parse_apiFramework;
        break;
      }

      // optional string apiFramework = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_apiFramework:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apiframework()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->apiframework().data(), this->apiframework().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BidderResponse_Ad_LinearCreative::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.Video videos = 1;
  for (int i = 0; i < this->videos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->videos(i), output);
  }

  // optional .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.LinearTrack linearTrack = 2;
  if (has_lineartrack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->lineartrack(), output);
  }

  // optional .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.VideoClicks videoClicks = 3;
  if (has_videoclicks()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->videoclicks(), output);
  }

  // optional .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.AdParameters adParameters = 4;
  if (has_adparameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->adparameters(), output);
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.Icon icons = 5;
  for (int i = 0; i < this->icons_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->icons(i), output);
  }

  // optional string duration = 6;
  if (has_duration()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->duration().data(), this->duration().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->duration(), output);
  }

  // optional string id = 7;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->id(), output);
  }

  // optional string sequence = 8;
  if (has_sequence()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sequence().data(), this->sequence().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->sequence(), output);
  }

  // optional string adId = 9;
  if (has_adid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adid().data(), this->adid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->adid(), output);
  }

  // optional string skipoffset = 15;
  if (has_skipoffset()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->skipoffset().data(), this->skipoffset().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->skipoffset(), output);
  }

  // repeated string creativeExtension = 16;
  for (int i = 0; i < this->creativeextension_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->creativeextension(i).data(), this->creativeextension(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->creativeextension(i), output);
  }

  // optional string apiFramework = 17;
  if (has_apiframework()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->apiframework().data(), this->apiframework().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->apiframework(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BidderResponse_Ad_LinearCreative::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.Video videos = 1;
  for (int i = 0; i < this->videos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->videos(i), target);
  }

  // optional .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.LinearTrack linearTrack = 2;
  if (has_lineartrack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->lineartrack(), target);
  }

  // optional .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.VideoClicks videoClicks = 3;
  if (has_videoclicks()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->videoclicks(), target);
  }

  // optional .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.AdParameters adParameters = 4;
  if (has_adparameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->adparameters(), target);
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.Icon icons = 5;
  for (int i = 0; i < this->icons_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->icons(i), target);
  }

  // optional string duration = 6;
  if (has_duration()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->duration().data(), this->duration().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->duration(), target);
  }

  // optional string id = 7;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->id(), target);
  }

  // optional string sequence = 8;
  if (has_sequence()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sequence().data(), this->sequence().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->sequence(), target);
  }

  // optional string adId = 9;
  if (has_adid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adid().data(), this->adid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->adid(), target);
  }

  // optional string skipoffset = 15;
  if (has_skipoffset()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->skipoffset().data(), this->skipoffset().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->skipoffset(), target);
  }

  // repeated string creativeExtension = 16;
  for (int i = 0; i < this->creativeextension_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativeextension(i).data(), this->creativeextension(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(16, this->creativeextension(i), target);
  }

  // optional string apiFramework = 17;
  if (has_apiframework()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->apiframework().data(), this->apiframework().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->apiframework(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BidderResponse_Ad_LinearCreative::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.LinearTrack linearTrack = 2;
    if (has_lineartrack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lineartrack());
    }

    // optional .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.VideoClicks videoClicks = 3;
    if (has_videoclicks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->videoclicks());
    }

    // optional .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.AdParameters adParameters = 4;
    if (has_adparameters()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->adparameters());
    }

    // optional string duration = 6;
    if (has_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->duration());
    }

    // optional string id = 7;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string sequence = 8;
    if (has_sequence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sequence());
    }

    // optional string adId = 9;
    if (has_adid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->adid());
    }

    // optional string apiFramework = 17;
    if (has_apiframework()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->apiframework());
    }

    // optional string skipoffset = 15;
    if (has_skipoffset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->skipoffset());
    }

  }
  // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.Video videos = 1;
  total_size += 1 * this->videos_size();
  for (int i = 0; i < this->videos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->videos(i));
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative.Icon icons = 5;
  total_size += 1 * this->icons_size();
  for (int i = 0; i < this->icons_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->icons(i));
  }

  // repeated string creativeExtension = 16;
  total_size += 2 * this->creativeextension_size();
  for (int i = 0; i < this->creativeextension_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->creativeextension(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidderResponse_Ad_LinearCreative::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BidderResponse_Ad_LinearCreative* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BidderResponse_Ad_LinearCreative*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BidderResponse_Ad_LinearCreative::MergeFrom(const BidderResponse_Ad_LinearCreative& from) {
  GOOGLE_CHECK_NE(&from, this);
  videos_.MergeFrom(from.videos_);
  icons_.MergeFrom(from.icons_);
  creativeextension_.MergeFrom(from.creativeextension_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_lineartrack()) {
      mutable_lineartrack()->::com::rj::protos::msg::BidderResponse_Ad_LinearCreative_LinearTrack::MergeFrom(from.lineartrack());
    }
    if (from.has_videoclicks()) {
      mutable_videoclicks()->::com::rj::protos::msg::BidderResponse_Ad_LinearCreative_VideoClicks::MergeFrom(from.videoclicks());
    }
    if (from.has_adparameters()) {
      mutable_adparameters()->::com::rj::protos::msg::BidderResponse_Ad_LinearCreative_AdParameters::MergeFrom(from.adparameters());
    }
    if (from.has_duration()) {
      set_duration(from.duration());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_sequence()) {
      set_sequence(from.sequence());
    }
    if (from.has_adid()) {
      set_adid(from.adid());
    }
    if (from.has_apiframework()) {
      set_apiframework(from.apiframework());
    }
    if (from.has_skipoffset()) {
      set_skipoffset(from.skipoffset());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BidderResponse_Ad_LinearCreative::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidderResponse_Ad_LinearCreative::CopyFrom(const BidderResponse_Ad_LinearCreative& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidderResponse_Ad_LinearCreative::IsInitialized() const {

  return true;
}

void BidderResponse_Ad_LinearCreative::Swap(BidderResponse_Ad_LinearCreative* other) {
  if (other != this) {
    videos_.Swap(&other->videos_);
    std::swap(lineartrack_, other->lineartrack_);
    std::swap(videoclicks_, other->videoclicks_);
    std::swap(adparameters_, other->adparameters_);
    icons_.Swap(&other->icons_);
    std::swap(duration_, other->duration_);
    creativeextension_.Swap(&other->creativeextension_);
    std::swap(id_, other->id_);
    std::swap(sequence_, other->sequence_);
    std::swap(adid_, other->adid_);
    std::swap(apiframework_, other->apiframework_);
    std::swap(skipoffset_, other->skipoffset_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BidderResponse_Ad_LinearCreative::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidderResponse_Ad_LinearCreative_descriptor_;
  metadata.reflection = BidderResponse_Ad_LinearCreative_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::kUrlFieldNumber;
const int BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::kIdFieldNumber;
#endif  // !_MSC_VER

BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::InitAsDefaultInstance() {
}

BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking(const BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::SharedCtor() {
  _cached_size_ = 0;
  url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::~BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking() {
  SharedDtor();
}

void BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::SharedDtor() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (this != default_instance_) {
  }
}

void BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking_descriptor_;
}

const BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking& BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdBidderResponseTemplate_2eproto();
  return *default_instance_;
}

BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking* BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::default_instance_ = NULL;

BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking* BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::New() const {
  return new BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking;
}

void BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_url()) {
      if (url_ != &::google::protobuf::internal::kEmptyString) {
        url_->clear();
      }
    }
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string url = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_id;
        break;
      }

      // optional string id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string url = 1;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->url(), output);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string url = 1;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string url = 1;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::MergeFrom(const BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_url()) {
      set_url(from.url());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::CopyFrom(const BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::IsInitialized() const {

  return true;
}

void BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::Swap(BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking* other) {
  if (other != this) {
    std::swap(url_, other->url_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking_descriptor_;
  metadata.reflection = BidderResponse_Ad_CompanionCreative_Companion_CompanionClickTracking_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BidderResponse_Ad_CompanionCreative_Companion_AdParameters::kParaFieldNumber;
const int BidderResponse_Ad_CompanionCreative_Companion_AdParameters::kXmlEncodedFieldNumber;
#endif  // !_MSC_VER

BidderResponse_Ad_CompanionCreative_Companion_AdParameters::BidderResponse_Ad_CompanionCreative_Companion_AdParameters()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BidderResponse_Ad_CompanionCreative_Companion_AdParameters::InitAsDefaultInstance() {
}

BidderResponse_Ad_CompanionCreative_Companion_AdParameters::BidderResponse_Ad_CompanionCreative_Companion_AdParameters(const BidderResponse_Ad_CompanionCreative_Companion_AdParameters& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BidderResponse_Ad_CompanionCreative_Companion_AdParameters::SharedCtor() {
  _cached_size_ = 0;
  para_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  xmlencoded_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidderResponse_Ad_CompanionCreative_Companion_AdParameters::~BidderResponse_Ad_CompanionCreative_Companion_AdParameters() {
  SharedDtor();
}

void BidderResponse_Ad_CompanionCreative_Companion_AdParameters::SharedDtor() {
  if (para_ != &::google::protobuf::internal::kEmptyString) {
    delete para_;
  }
  if (this != default_instance_) {
  }
}

void BidderResponse_Ad_CompanionCreative_Companion_AdParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidderResponse_Ad_CompanionCreative_Companion_AdParameters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidderResponse_Ad_CompanionCreative_Companion_AdParameters_descriptor_;
}

const BidderResponse_Ad_CompanionCreative_Companion_AdParameters& BidderResponse_Ad_CompanionCreative_Companion_AdParameters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdBidderResponseTemplate_2eproto();
  return *default_instance_;
}

BidderResponse_Ad_CompanionCreative_Companion_AdParameters* BidderResponse_Ad_CompanionCreative_Companion_AdParameters::default_instance_ = NULL;

BidderResponse_Ad_CompanionCreative_Companion_AdParameters* BidderResponse_Ad_CompanionCreative_Companion_AdParameters::New() const {
  return new BidderResponse_Ad_CompanionCreative_Companion_AdParameters;
}

void BidderResponse_Ad_CompanionCreative_Companion_AdParameters::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_para()) {
      if (para_ != &::google::protobuf::internal::kEmptyString) {
        para_->clear();
      }
    }
    xmlencoded_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BidderResponse_Ad_CompanionCreative_Companion_AdParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string para = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_para()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->para().data(), this->para().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_xmlEncoded;
        break;
      }

      // optional bool xmlEncoded = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_xmlEncoded:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xmlencoded_)));
          set_has_xmlencoded();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BidderResponse_Ad_CompanionCreative_Companion_AdParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string para = 1;
  if (has_para()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->para().data(), this->para().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->para(), output);
  }

  // optional bool xmlEncoded = 2;
  if (has_xmlencoded()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->xmlencoded(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BidderResponse_Ad_CompanionCreative_Companion_AdParameters::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string para = 1;
  if (has_para()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->para().data(), this->para().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->para(), target);
  }

  // optional bool xmlEncoded = 2;
  if (has_xmlencoded()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->xmlencoded(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BidderResponse_Ad_CompanionCreative_Companion_AdParameters::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string para = 1;
    if (has_para()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->para());
    }

    // optional bool xmlEncoded = 2;
    if (has_xmlencoded()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidderResponse_Ad_CompanionCreative_Companion_AdParameters::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BidderResponse_Ad_CompanionCreative_Companion_AdParameters* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BidderResponse_Ad_CompanionCreative_Companion_AdParameters*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BidderResponse_Ad_CompanionCreative_Companion_AdParameters::MergeFrom(const BidderResponse_Ad_CompanionCreative_Companion_AdParameters& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_para()) {
      set_para(from.para());
    }
    if (from.has_xmlencoded()) {
      set_xmlencoded(from.xmlencoded());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BidderResponse_Ad_CompanionCreative_Companion_AdParameters::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidderResponse_Ad_CompanionCreative_Companion_AdParameters::CopyFrom(const BidderResponse_Ad_CompanionCreative_Companion_AdParameters& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidderResponse_Ad_CompanionCreative_Companion_AdParameters::IsInitialized() const {

  return true;
}

void BidderResponse_Ad_CompanionCreative_Companion_AdParameters::Swap(BidderResponse_Ad_CompanionCreative_Companion_AdParameters* other) {
  if (other != this) {
    std::swap(para_, other->para_);
    std::swap(xmlencoded_, other->xmlencoded_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BidderResponse_Ad_CompanionCreative_Companion_AdParameters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidderResponse_Ad_CompanionCreative_Companion_AdParameters_descriptor_;
  metadata.reflection = BidderResponse_Ad_CompanionCreative_Companion_AdParameters_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BidderResponse_Ad_CompanionCreative_Companion::kWidthFieldNumber;
const int BidderResponse_Ad_CompanionCreative_Companion::kHeightFieldNumber;
const int BidderResponse_Ad_CompanionCreative_Companion::kIdFieldNumber;
const int BidderResponse_Ad_CompanionCreative_Companion::kExpandedWidthFieldNumber;
const int BidderResponse_Ad_CompanionCreative_Companion::kExpandedHeightFieldNumber;
const int BidderResponse_Ad_CompanionCreative_Companion::kApiFrameworkFieldNumber;
const int BidderResponse_Ad_CompanionCreative_Companion::kAssetWidthFieldNumber;
const int BidderResponse_Ad_CompanionCreative_Companion::kAssetHeightFieldNumber;
const int BidderResponse_Ad_CompanionCreative_Companion::kAdSlotIDFieldNumber;
const int BidderResponse_Ad_CompanionCreative_Companion::kClickThroughUrlFieldNumber;
const int BidderResponse_Ad_CompanionCreative_Companion::kAltTextFieldNumber;
const int BidderResponse_Ad_CompanionCreative_Companion::kCompanionClickTrackingFieldNumber;
const int BidderResponse_Ad_CompanionCreative_Companion::kAdParametersFieldNumber;
const int BidderResponse_Ad_CompanionCreative_Companion::kStaticUrlFieldNumber;
const int BidderResponse_Ad_CompanionCreative_Companion::kCreativeTypeFieldNumber;
const int BidderResponse_Ad_CompanionCreative_Companion::kIframeUrlFieldNumber;
const int BidderResponse_Ad_CompanionCreative_Companion::kHtmlFieldNumber;
const int BidderResponse_Ad_CompanionCreative_Companion::kCreativeViewFieldNumber;
#endif  // !_MSC_VER

BidderResponse_Ad_CompanionCreative_Companion::BidderResponse_Ad_CompanionCreative_Companion()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BidderResponse_Ad_CompanionCreative_Companion::InitAsDefaultInstance() {
  adparameters_ = const_cast< ::com::rj::protos::msg::BidderResponse_Ad_CompanionCreative_Companion_AdParameters*>(&::com::rj::protos::msg::BidderResponse_Ad_CompanionCreative_Companion_AdParameters::default_instance());
}

BidderResponse_Ad_CompanionCreative_Companion::BidderResponse_Ad_CompanionCreative_Companion(const BidderResponse_Ad_CompanionCreative_Companion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BidderResponse_Ad_CompanionCreative_Companion::SharedCtor() {
  _cached_size_ = 0;
  width_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  height_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  expandedwidth_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  expandedheight_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  apiframework_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  assetwidth_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  assetheight_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  adslotid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  clickthroughurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  alttext_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  adparameters_ = NULL;
  staticurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  creativetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  iframeurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  html_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidderResponse_Ad_CompanionCreative_Companion::~BidderResponse_Ad_CompanionCreative_Companion() {
  SharedDtor();
}

void BidderResponse_Ad_CompanionCreative_Companion::SharedDtor() {
  if (width_ != &::google::protobuf::internal::kEmptyString) {
    delete width_;
  }
  if (height_ != &::google::protobuf::internal::kEmptyString) {
    delete height_;
  }
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (expandedwidth_ != &::google::protobuf::internal::kEmptyString) {
    delete expandedwidth_;
  }
  if (expandedheight_ != &::google::protobuf::internal::kEmptyString) {
    delete expandedheight_;
  }
  if (apiframework_ != &::google::protobuf::internal::kEmptyString) {
    delete apiframework_;
  }
  if (assetwidth_ != &::google::protobuf::internal::kEmptyString) {
    delete assetwidth_;
  }
  if (assetheight_ != &::google::protobuf::internal::kEmptyString) {
    delete assetheight_;
  }
  if (adslotid_ != &::google::protobuf::internal::kEmptyString) {
    delete adslotid_;
  }
  if (clickthroughurl_ != &::google::protobuf::internal::kEmptyString) {
    delete clickthroughurl_;
  }
  if (alttext_ != &::google::protobuf::internal::kEmptyString) {
    delete alttext_;
  }
  if (staticurl_ != &::google::protobuf::internal::kEmptyString) {
    delete staticurl_;
  }
  if (creativetype_ != &::google::protobuf::internal::kEmptyString) {
    delete creativetype_;
  }
  if (iframeurl_ != &::google::protobuf::internal::kEmptyString) {
    delete iframeurl_;
  }
  if (html_ != &::google::protobuf::internal::kEmptyString) {
    delete html_;
  }
  if (this != default_instance_) {
    delete adparameters_;
  }
}

void BidderResponse_Ad_CompanionCreative_Companion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidderResponse_Ad_CompanionCreative_Companion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidderResponse_Ad_CompanionCreative_Companion_descriptor_;
}

const BidderResponse_Ad_CompanionCreative_Companion& BidderResponse_Ad_CompanionCreative_Companion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdBidderResponseTemplate_2eproto();
  return *default_instance_;
}

BidderResponse_Ad_CompanionCreative_Companion* BidderResponse_Ad_CompanionCreative_Companion::default_instance_ = NULL;

BidderResponse_Ad_CompanionCreative_Companion* BidderResponse_Ad_CompanionCreative_Companion::New() const {
  return new BidderResponse_Ad_CompanionCreative_Companion;
}

void BidderResponse_Ad_CompanionCreative_Companion::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_width()) {
      if (width_ != &::google::protobuf::internal::kEmptyString) {
        width_->clear();
      }
    }
    if (has_height()) {
      if (height_ != &::google::protobuf::internal::kEmptyString) {
        height_->clear();
      }
    }
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
    if (has_expandedwidth()) {
      if (expandedwidth_ != &::google::protobuf::internal::kEmptyString) {
        expandedwidth_->clear();
      }
    }
    if (has_expandedheight()) {
      if (expandedheight_ != &::google::protobuf::internal::kEmptyString) {
        expandedheight_->clear();
      }
    }
    if (has_apiframework()) {
      if (apiframework_ != &::google::protobuf::internal::kEmptyString) {
        apiframework_->clear();
      }
    }
    if (has_assetwidth()) {
      if (assetwidth_ != &::google::protobuf::internal::kEmptyString) {
        assetwidth_->clear();
      }
    }
    if (has_assetheight()) {
      if (assetheight_ != &::google::protobuf::internal::kEmptyString) {
        assetheight_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_adslotid()) {
      if (adslotid_ != &::google::protobuf::internal::kEmptyString) {
        adslotid_->clear();
      }
    }
    if (has_clickthroughurl()) {
      if (clickthroughurl_ != &::google::protobuf::internal::kEmptyString) {
        clickthroughurl_->clear();
      }
    }
    if (has_alttext()) {
      if (alttext_ != &::google::protobuf::internal::kEmptyString) {
        alttext_->clear();
      }
    }
    if (has_adparameters()) {
      if (adparameters_ != NULL) adparameters_->::com::rj::protos::msg::BidderResponse_Ad_CompanionCreative_Companion_AdParameters::Clear();
    }
    if (has_staticurl()) {
      if (staticurl_ != &::google::protobuf::internal::kEmptyString) {
        staticurl_->clear();
      }
    }
    if (has_creativetype()) {
      if (creativetype_ != &::google::protobuf::internal::kEmptyString) {
        creativetype_->clear();
      }
    }
    if (has_iframeurl()) {
      if (iframeurl_ != &::google::protobuf::internal::kEmptyString) {
        iframeurl_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_html()) {
      if (html_ != &::google::protobuf::internal::kEmptyString) {
        html_->clear();
      }
    }
  }
  companionclicktracking_.Clear();
  creativeview_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BidderResponse_Ad_CompanionCreative_Companion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string width = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_width()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->width().data(), this->width().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_height;
        break;
      }

      // optional string height = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_height:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_height()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->height().data(), this->height().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_id;
        break;
      }

      // optional string id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_expandedWidth;
        break;
      }

      // optional string expandedWidth = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_expandedWidth:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expandedwidth()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->expandedwidth().data(), this->expandedwidth().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_expandedHeight;
        break;
      }

      // optional string expandedHeight = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_expandedHeight:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expandedheight()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->expandedheight().data(), this->expandedheight().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_apiFramework;
        break;
      }

      // optional string apiFramework = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_apiFramework:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apiframework()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->apiframework().data(), this->apiframework().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_staticUrl;
        break;
      }

      // optional string staticUrl = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_staticUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_staticurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->staticurl().data(), this->staticurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_iframeUrl;
        break;
      }

      // optional string iframeUrl = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_iframeUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iframeurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->iframeurl().data(), this->iframeurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_html;
        break;
      }

      // optional string html = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_html:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_html()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->html().data(), this->html().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_clickThroughUrl;
        break;
      }

      // optional string clickThroughUrl = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_clickThroughUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clickthroughurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->clickthroughurl().data(), this->clickthroughurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_companionClickTracking;
        break;
      }

      // repeated .com.rj.protos.msg.BidderResponse.Ad.CompanionCreative.Companion.CompanionClickTracking companionClickTracking = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_companionClickTracking:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_companionclicktracking()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_companionClickTracking;
        if (input->ExpectTag(98)) goto parse_creativeView;
        break;
      }

      // repeated string creativeView = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_creativeView:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_creativeview()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->creativeview(this->creativeview_size() - 1).data(),
            this->creativeview(this->creativeview_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_creativeView;
        if (input->ExpectTag(106)) goto parse_altText;
        break;
      }

      // optional string altText = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_altText:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alttext()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->alttext().data(), this->alttext().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_creativeType;
        break;
      }

      // optional string creativeType = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_creativeType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creativetype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->creativetype().data(), this->creativetype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_adParameters;
        break;
      }

      // optional .com.rj.protos.msg.BidderResponse.Ad.CompanionCreative.Companion.AdParameters adParameters = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adParameters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_adparameters()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_assetWidth;
        break;
      }

      // optional string assetWidth = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_assetWidth:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_assetwidth()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->assetwidth().data(), this->assetwidth().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_assetHeight;
        break;
      }

      // optional string assetHeight = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_assetHeight:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_assetheight()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->assetheight().data(), this->assetheight().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_adSlotID;
        break;
      }

      // optional string adSlotID = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adSlotID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adslotid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->adslotid().data(), this->adslotid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BidderResponse_Ad_CompanionCreative_Companion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string width = 1;
  if (has_width()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->width().data(), this->width().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->width(), output);
  }

  // optional string height = 2;
  if (has_height()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->height().data(), this->height().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->height(), output);
  }

  // optional string id = 3;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->id(), output);
  }

  // optional string expandedWidth = 4;
  if (has_expandedwidth()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->expandedwidth().data(), this->expandedwidth().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->expandedwidth(), output);
  }

  // optional string expandedHeight = 5;
  if (has_expandedheight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->expandedheight().data(), this->expandedheight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->expandedheight(), output);
  }

  // optional string apiFramework = 6;
  if (has_apiframework()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->apiframework().data(), this->apiframework().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->apiframework(), output);
  }

  // optional string staticUrl = 7;
  if (has_staticurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->staticurl().data(), this->staticurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->staticurl(), output);
  }

  // optional string iframeUrl = 8;
  if (has_iframeurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->iframeurl().data(), this->iframeurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->iframeurl(), output);
  }

  // optional string html = 9;
  if (has_html()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->html().data(), this->html().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->html(), output);
  }

  // optional string clickThroughUrl = 10;
  if (has_clickthroughurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clickthroughurl().data(), this->clickthroughurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->clickthroughurl(), output);
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad.CompanionCreative.Companion.CompanionClickTracking companionClickTracking = 11;
  for (int i = 0; i < this->companionclicktracking_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->companionclicktracking(i), output);
  }

  // repeated string creativeView = 12;
  for (int i = 0; i < this->creativeview_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->creativeview(i).data(), this->creativeview(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->creativeview(i), output);
  }

  // optional string altText = 13;
  if (has_alttext()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->alttext().data(), this->alttext().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->alttext(), output);
  }

  // optional string creativeType = 15;
  if (has_creativetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativetype().data(), this->creativetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->creativetype(), output);
  }

  // optional .com.rj.protos.msg.BidderResponse.Ad.CompanionCreative.Companion.AdParameters adParameters = 16;
  if (has_adparameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->adparameters(), output);
  }

  // optional string assetWidth = 17;
  if (has_assetwidth()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->assetwidth().data(), this->assetwidth().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->assetwidth(), output);
  }

  // optional string assetHeight = 18;
  if (has_assetheight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->assetheight().data(), this->assetheight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->assetheight(), output);
  }

  // optional string adSlotID = 19;
  if (has_adslotid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adslotid().data(), this->adslotid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->adslotid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BidderResponse_Ad_CompanionCreative_Companion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string width = 1;
  if (has_width()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->width().data(), this->width().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->width(), target);
  }

  // optional string height = 2;
  if (has_height()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->height().data(), this->height().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->height(), target);
  }

  // optional string id = 3;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->id(), target);
  }

  // optional string expandedWidth = 4;
  if (has_expandedwidth()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->expandedwidth().data(), this->expandedwidth().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->expandedwidth(), target);
  }

  // optional string expandedHeight = 5;
  if (has_expandedheight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->expandedheight().data(), this->expandedheight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->expandedheight(), target);
  }

  // optional string apiFramework = 6;
  if (has_apiframework()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->apiframework().data(), this->apiframework().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->apiframework(), target);
  }

  // optional string staticUrl = 7;
  if (has_staticurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->staticurl().data(), this->staticurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->staticurl(), target);
  }

  // optional string iframeUrl = 8;
  if (has_iframeurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->iframeurl().data(), this->iframeurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->iframeurl(), target);
  }

  // optional string html = 9;
  if (has_html()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->html().data(), this->html().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->html(), target);
  }

  // optional string clickThroughUrl = 10;
  if (has_clickthroughurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clickthroughurl().data(), this->clickthroughurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->clickthroughurl(), target);
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad.CompanionCreative.Companion.CompanionClickTracking companionClickTracking = 11;
  for (int i = 0; i < this->companionclicktracking_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->companionclicktracking(i), target);
  }

  // repeated string creativeView = 12;
  for (int i = 0; i < this->creativeview_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativeview(i).data(), this->creativeview(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(12, this->creativeview(i), target);
  }

  // optional string altText = 13;
  if (has_alttext()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->alttext().data(), this->alttext().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->alttext(), target);
  }

  // optional string creativeType = 15;
  if (has_creativetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativetype().data(), this->creativetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->creativetype(), target);
  }

  // optional .com.rj.protos.msg.BidderResponse.Ad.CompanionCreative.Companion.AdParameters adParameters = 16;
  if (has_adparameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->adparameters(), target);
  }

  // optional string assetWidth = 17;
  if (has_assetwidth()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->assetwidth().data(), this->assetwidth().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->assetwidth(), target);
  }

  // optional string assetHeight = 18;
  if (has_assetheight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->assetheight().data(), this->assetheight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->assetheight(), target);
  }

  // optional string adSlotID = 19;
  if (has_adslotid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adslotid().data(), this->adslotid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->adslotid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BidderResponse_Ad_CompanionCreative_Companion::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string width = 1;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->width());
    }

    // optional string height = 2;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->height());
    }

    // optional string id = 3;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string expandedWidth = 4;
    if (has_expandedwidth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->expandedwidth());
    }

    // optional string expandedHeight = 5;
    if (has_expandedheight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->expandedheight());
    }

    // optional string apiFramework = 6;
    if (has_apiframework()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->apiframework());
    }

    // optional string assetWidth = 17;
    if (has_assetwidth()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->assetwidth());
    }

    // optional string assetHeight = 18;
    if (has_assetheight()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->assetheight());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string adSlotID = 19;
    if (has_adslotid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->adslotid());
    }

    // optional string clickThroughUrl = 10;
    if (has_clickthroughurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clickthroughurl());
    }

    // optional string altText = 13;
    if (has_alttext()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alttext());
    }

    // optional .com.rj.protos.msg.BidderResponse.Ad.CompanionCreative.Companion.AdParameters adParameters = 16;
    if (has_adparameters()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->adparameters());
    }

    // optional string staticUrl = 7;
    if (has_staticurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->staticurl());
    }

    // optional string creativeType = 15;
    if (has_creativetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creativetype());
    }

    // optional string iframeUrl = 8;
    if (has_iframeurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->iframeurl());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string html = 9;
    if (has_html()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->html());
    }

  }
  // repeated .com.rj.protos.msg.BidderResponse.Ad.CompanionCreative.Companion.CompanionClickTracking companionClickTracking = 11;
  total_size += 1 * this->companionclicktracking_size();
  for (int i = 0; i < this->companionclicktracking_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->companionclicktracking(i));
  }

  // repeated string creativeView = 12;
  total_size += 1 * this->creativeview_size();
  for (int i = 0; i < this->creativeview_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->creativeview(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidderResponse_Ad_CompanionCreative_Companion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BidderResponse_Ad_CompanionCreative_Companion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BidderResponse_Ad_CompanionCreative_Companion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BidderResponse_Ad_CompanionCreative_Companion::MergeFrom(const BidderResponse_Ad_CompanionCreative_Companion& from) {
  GOOGLE_CHECK_NE(&from, this);
  companionclicktracking_.MergeFrom(from.companionclicktracking_);
  creativeview_.MergeFrom(from.creativeview_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_expandedwidth()) {
      set_expandedwidth(from.expandedwidth());
    }
    if (from.has_expandedheight()) {
      set_expandedheight(from.expandedheight());
    }
    if (from.has_apiframework()) {
      set_apiframework(from.apiframework());
    }
    if (from.has_assetwidth()) {
      set_assetwidth(from.assetwidth());
    }
    if (from.has_assetheight()) {
      set_assetheight(from.assetheight());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_adslotid()) {
      set_adslotid(from.adslotid());
    }
    if (from.has_clickthroughurl()) {
      set_clickthroughurl(from.clickthroughurl());
    }
    if (from.has_alttext()) {
      set_alttext(from.alttext());
    }
    if (from.has_adparameters()) {
      mutable_adparameters()->::com::rj::protos::msg::BidderResponse_Ad_CompanionCreative_Companion_AdParameters::MergeFrom(from.adparameters());
    }
    if (from.has_staticurl()) {
      set_staticurl(from.staticurl());
    }
    if (from.has_creativetype()) {
      set_creativetype(from.creativetype());
    }
    if (from.has_iframeurl()) {
      set_iframeurl(from.iframeurl());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_html()) {
      set_html(from.html());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BidderResponse_Ad_CompanionCreative_Companion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidderResponse_Ad_CompanionCreative_Companion::CopyFrom(const BidderResponse_Ad_CompanionCreative_Companion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidderResponse_Ad_CompanionCreative_Companion::IsInitialized() const {

  return true;
}

void BidderResponse_Ad_CompanionCreative_Companion::Swap(BidderResponse_Ad_CompanionCreative_Companion* other) {
  if (other != this) {
    std::swap(width_, other->width_);
    std::swap(height_, other->height_);
    std::swap(id_, other->id_);
    std::swap(expandedwidth_, other->expandedwidth_);
    std::swap(expandedheight_, other->expandedheight_);
    std::swap(apiframework_, other->apiframework_);
    std::swap(assetwidth_, other->assetwidth_);
    std::swap(assetheight_, other->assetheight_);
    std::swap(adslotid_, other->adslotid_);
    std::swap(clickthroughurl_, other->clickthroughurl_);
    std::swap(alttext_, other->alttext_);
    companionclicktracking_.Swap(&other->companionclicktracking_);
    std::swap(adparameters_, other->adparameters_);
    std::swap(staticurl_, other->staticurl_);
    std::swap(creativetype_, other->creativetype_);
    std::swap(iframeurl_, other->iframeurl_);
    std::swap(html_, other->html_);
    creativeview_.Swap(&other->creativeview_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BidderResponse_Ad_CompanionCreative_Companion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidderResponse_Ad_CompanionCreative_Companion_descriptor_;
  metadata.reflection = BidderResponse_Ad_CompanionCreative_Companion_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BidderResponse_Ad_CompanionCreative::kIdFieldNumber;
const int BidderResponse_Ad_CompanionCreative::kSequenceFieldNumber;
const int BidderResponse_Ad_CompanionCreative::kAdIdFieldNumber;
const int BidderResponse_Ad_CompanionCreative::kRequiredFieldNumber;
const int BidderResponse_Ad_CompanionCreative::kApiFrameworkFieldNumber;
const int BidderResponse_Ad_CompanionCreative::kCreativeExtensionFieldNumber;
const int BidderResponse_Ad_CompanionCreative::kCompanionFieldNumber;
#endif  // !_MSC_VER

BidderResponse_Ad_CompanionCreative::BidderResponse_Ad_CompanionCreative()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BidderResponse_Ad_CompanionCreative::InitAsDefaultInstance() {
}

BidderResponse_Ad_CompanionCreative::BidderResponse_Ad_CompanionCreative(const BidderResponse_Ad_CompanionCreative& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BidderResponse_Ad_CompanionCreative::SharedCtor() {
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sequence_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  adid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  required_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  apiframework_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  creativeextension_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidderResponse_Ad_CompanionCreative::~BidderResponse_Ad_CompanionCreative() {
  SharedDtor();
}

void BidderResponse_Ad_CompanionCreative::SharedDtor() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (sequence_ != &::google::protobuf::internal::kEmptyString) {
    delete sequence_;
  }
  if (adid_ != &::google::protobuf::internal::kEmptyString) {
    delete adid_;
  }
  if (required_ != &::google::protobuf::internal::kEmptyString) {
    delete required_;
  }
  if (apiframework_ != &::google::protobuf::internal::kEmptyString) {
    delete apiframework_;
  }
  if (creativeextension_ != &::google::protobuf::internal::kEmptyString) {
    delete creativeextension_;
  }
  if (this != default_instance_) {
  }
}

void BidderResponse_Ad_CompanionCreative::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidderResponse_Ad_CompanionCreative::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidderResponse_Ad_CompanionCreative_descriptor_;
}

const BidderResponse_Ad_CompanionCreative& BidderResponse_Ad_CompanionCreative::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdBidderResponseTemplate_2eproto();
  return *default_instance_;
}

BidderResponse_Ad_CompanionCreative* BidderResponse_Ad_CompanionCreative::default_instance_ = NULL;

BidderResponse_Ad_CompanionCreative* BidderResponse_Ad_CompanionCreative::New() const {
  return new BidderResponse_Ad_CompanionCreative;
}

void BidderResponse_Ad_CompanionCreative::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
    if (has_sequence()) {
      if (sequence_ != &::google::protobuf::internal::kEmptyString) {
        sequence_->clear();
      }
    }
    if (has_adid()) {
      if (adid_ != &::google::protobuf::internal::kEmptyString) {
        adid_->clear();
      }
    }
    if (has_required()) {
      if (required_ != &::google::protobuf::internal::kEmptyString) {
        required_->clear();
      }
    }
    if (has_apiframework()) {
      if (apiframework_ != &::google::protobuf::internal::kEmptyString) {
        apiframework_->clear();
      }
    }
    if (has_creativeextension()) {
      if (creativeextension_ != &::google::protobuf::internal::kEmptyString) {
        creativeextension_->clear();
      }
    }
  }
  companion_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BidderResponse_Ad_CompanionCreative::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_sequence;
        break;
      }

      // optional string sequence = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sequence:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sequence()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sequence().data(), this->sequence().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_adId;
        break;
      }

      // optional string adId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->adid().data(), this->adid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_companion;
        break;
      }

      // repeated .com.rj.protos.msg.BidderResponse.Ad.CompanionCreative.Companion companion = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_companion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_companion()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_companion;
        if (input->ExpectTag(42)) goto parse_apiFramework;
        break;
      }

      // optional string apiFramework = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_apiFramework:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apiframework()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->apiframework().data(), this->apiframework().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_creativeExtension;
        break;
      }

      // optional string creativeExtension = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_creativeExtension:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creativeextension()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->creativeextension().data(), this->creativeextension().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_required;
        break;
      }

      // optional string required = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_required:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_required()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->required().data(), this->required().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BidderResponse_Ad_CompanionCreative::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->id(), output);
  }

  // optional string sequence = 2;
  if (has_sequence()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sequence().data(), this->sequence().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->sequence(), output);
  }

  // optional string adId = 3;
  if (has_adid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adid().data(), this->adid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->adid(), output);
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad.CompanionCreative.Companion companion = 4;
  for (int i = 0; i < this->companion_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->companion(i), output);
  }

  // optional string apiFramework = 5;
  if (has_apiframework()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->apiframework().data(), this->apiframework().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->apiframework(), output);
  }

  // optional string creativeExtension = 6;
  if (has_creativeextension()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativeextension().data(), this->creativeextension().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->creativeextension(), output);
  }

  // optional string required = 7;
  if (has_required()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->required().data(), this->required().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->required(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BidderResponse_Ad_CompanionCreative::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string sequence = 2;
  if (has_sequence()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sequence().data(), this->sequence().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sequence(), target);
  }

  // optional string adId = 3;
  if (has_adid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adid().data(), this->adid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->adid(), target);
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad.CompanionCreative.Companion companion = 4;
  for (int i = 0; i < this->companion_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->companion(i), target);
  }

  // optional string apiFramework = 5;
  if (has_apiframework()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->apiframework().data(), this->apiframework().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->apiframework(), target);
  }

  // optional string creativeExtension = 6;
  if (has_creativeextension()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->creativeextension().data(), this->creativeextension().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->creativeextension(), target);
  }

  // optional string required = 7;
  if (has_required()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->required().data(), this->required().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->required(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BidderResponse_Ad_CompanionCreative::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string sequence = 2;
    if (has_sequence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sequence());
    }

    // optional string adId = 3;
    if (has_adid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->adid());
    }

    // optional string required = 7;
    if (has_required()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->required());
    }

    // optional string apiFramework = 5;
    if (has_apiframework()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->apiframework());
    }

    // optional string creativeExtension = 6;
    if (has_creativeextension()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creativeextension());
    }

  }
  // repeated .com.rj.protos.msg.BidderResponse.Ad.CompanionCreative.Companion companion = 4;
  total_size += 1 * this->companion_size();
  for (int i = 0; i < this->companion_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->companion(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidderResponse_Ad_CompanionCreative::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BidderResponse_Ad_CompanionCreative* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BidderResponse_Ad_CompanionCreative*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BidderResponse_Ad_CompanionCreative::MergeFrom(const BidderResponse_Ad_CompanionCreative& from) {
  GOOGLE_CHECK_NE(&from, this);
  companion_.MergeFrom(from.companion_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_sequence()) {
      set_sequence(from.sequence());
    }
    if (from.has_adid()) {
      set_adid(from.adid());
    }
    if (from.has_required()) {
      set_required(from.required());
    }
    if (from.has_apiframework()) {
      set_apiframework(from.apiframework());
    }
    if (from.has_creativeextension()) {
      set_creativeextension(from.creativeextension());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BidderResponse_Ad_CompanionCreative::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidderResponse_Ad_CompanionCreative::CopyFrom(const BidderResponse_Ad_CompanionCreative& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidderResponse_Ad_CompanionCreative::IsInitialized() const {

  return true;
}

void BidderResponse_Ad_CompanionCreative::Swap(BidderResponse_Ad_CompanionCreative* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(sequence_, other->sequence_);
    std::swap(adid_, other->adid_);
    std::swap(required_, other->required_);
    std::swap(apiframework_, other->apiframework_);
    std::swap(creativeextension_, other->creativeextension_);
    companion_.Swap(&other->companion_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BidderResponse_Ad_CompanionCreative::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidderResponse_Ad_CompanionCreative_descriptor_;
  metadata.reflection = BidderResponse_Ad_CompanionCreative_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BidderResponse_Ad::kPriceFieldNumber;
const int BidderResponse_Ad::kCampaignIdFieldNumber;
const int BidderResponse_Ad::kAdvertiserNameFieldNumber;
const int BidderResponse_Ad::kCategoryFieldNumber;
const int BidderResponse_Ad::kHasVpaidCreativeFieldNumber;
const int BidderResponse_Ad::kAdIdFieldNumber;
const int BidderResponse_Ad::kSequenceFieldNumber;
const int BidderResponse_Ad::kTypeFieldNumber;
const int BidderResponse_Ad::kAdSystemFieldNumber;
const int BidderResponse_Ad::kAdTagFieldNumber;
const int BidderResponse_Ad::kAdDescFieldNumber;
const int BidderResponse_Ad::kAdSurveyFieldNumber;
const int BidderResponse_Ad::kAdTitleFieldNumber;
const int BidderResponse_Ad::kImpTrackFieldNumber;
const int BidderResponse_Ad::kErrTrackFieldNumber;
const int BidderResponse_Ad::kLinearCreativeFieldNumber;
const int BidderResponse_Ad::kCompanionCreativeFieldNumber;
const int BidderResponse_Ad::kExtensionFieldNumber;
const int BidderResponse_Ad::kFollowAdditionalWrappersFieldNumber;
const int BidderResponse_Ad::kAllowMultipleAdsFieldNumber;
const int BidderResponse_Ad::kFallbackOnNoAdFieldNumber;
#endif  // !_MSC_VER

BidderResponse_Ad::BidderResponse_Ad()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BidderResponse_Ad::InitAsDefaultInstance() {
  adsystem_ = const_cast< ::com::rj::protos::msg::BidderResponse_Ad_AdSystem*>(&::com::rj::protos::msg::BidderResponse_Ad_AdSystem::default_instance());
  companioncreative_ = const_cast< ::com::rj::protos::msg::BidderResponse_Ad_CompanionCreative*>(&::com::rj::protos::msg::BidderResponse_Ad_CompanionCreative::default_instance());
}

BidderResponse_Ad::BidderResponse_Ad(const BidderResponse_Ad& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BidderResponse_Ad::SharedCtor() {
  _cached_size_ = 0;
  price_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  campaignid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  advertisername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  category_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  hasvpaidcreative_ = false;
  adid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sequence_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  adsystem_ = NULL;
  adtag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  addesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  adtitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  companioncreative_ = NULL;
  followadditionalwrappers_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  allowmultipleads_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  fallbackonnoad_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidderResponse_Ad::~BidderResponse_Ad() {
  SharedDtor();
}

void BidderResponse_Ad::SharedDtor() {
  if (price_ != &::google::protobuf::internal::kEmptyString) {
    delete price_;
  }
  if (campaignid_ != &::google::protobuf::internal::kEmptyString) {
    delete campaignid_;
  }
  if (advertisername_ != &::google::protobuf::internal::kEmptyString) {
    delete advertisername_;
  }
  if (category_ != &::google::protobuf::internal::kEmptyString) {
    delete category_;
  }
  if (adid_ != &::google::protobuf::internal::kEmptyString) {
    delete adid_;
  }
  if (sequence_ != &::google::protobuf::internal::kEmptyString) {
    delete sequence_;
  }
  if (type_ != &::google::protobuf::internal::kEmptyString) {
    delete type_;
  }
  if (adtag_ != &::google::protobuf::internal::kEmptyString) {
    delete adtag_;
  }
  if (addesc_ != &::google::protobuf::internal::kEmptyString) {
    delete addesc_;
  }
  if (adtitle_ != &::google::protobuf::internal::kEmptyString) {
    delete adtitle_;
  }
  if (followadditionalwrappers_ != &::google::protobuf::internal::kEmptyString) {
    delete followadditionalwrappers_;
  }
  if (allowmultipleads_ != &::google::protobuf::internal::kEmptyString) {
    delete allowmultipleads_;
  }
  if (fallbackonnoad_ != &::google::protobuf::internal::kEmptyString) {
    delete fallbackonnoad_;
  }
  if (this != default_instance_) {
    delete adsystem_;
    delete companioncreative_;
  }
}

void BidderResponse_Ad::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidderResponse_Ad::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidderResponse_Ad_descriptor_;
}

const BidderResponse_Ad& BidderResponse_Ad::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdBidderResponseTemplate_2eproto();
  return *default_instance_;
}

BidderResponse_Ad* BidderResponse_Ad::default_instance_ = NULL;

BidderResponse_Ad* BidderResponse_Ad::New() const {
  return new BidderResponse_Ad;
}

void BidderResponse_Ad::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_price()) {
      if (price_ != &::google::protobuf::internal::kEmptyString) {
        price_->clear();
      }
    }
    if (has_campaignid()) {
      if (campaignid_ != &::google::protobuf::internal::kEmptyString) {
        campaignid_->clear();
      }
    }
    if (has_advertisername()) {
      if (advertisername_ != &::google::protobuf::internal::kEmptyString) {
        advertisername_->clear();
      }
    }
    if (has_category()) {
      if (category_ != &::google::protobuf::internal::kEmptyString) {
        category_->clear();
      }
    }
    hasvpaidcreative_ = false;
    if (has_adid()) {
      if (adid_ != &::google::protobuf::internal::kEmptyString) {
        adid_->clear();
      }
    }
    if (has_sequence()) {
      if (sequence_ != &::google::protobuf::internal::kEmptyString) {
        sequence_->clear();
      }
    }
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::kEmptyString) {
        type_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_adsystem()) {
      if (adsystem_ != NULL) adsystem_->::com::rj::protos::msg::BidderResponse_Ad_AdSystem::Clear();
    }
    if (has_adtag()) {
      if (adtag_ != &::google::protobuf::internal::kEmptyString) {
        adtag_->clear();
      }
    }
    if (has_addesc()) {
      if (addesc_ != &::google::protobuf::internal::kEmptyString) {
        addesc_->clear();
      }
    }
    if (has_adtitle()) {
      if (adtitle_ != &::google::protobuf::internal::kEmptyString) {
        adtitle_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_companioncreative()) {
      if (companioncreative_ != NULL) companioncreative_->::com::rj::protos::msg::BidderResponse_Ad_CompanionCreative::Clear();
    }
    if (has_followadditionalwrappers()) {
      if (followadditionalwrappers_ != &::google::protobuf::internal::kEmptyString) {
        followadditionalwrappers_->clear();
      }
    }
    if (has_allowmultipleads()) {
      if (allowmultipleads_ != &::google::protobuf::internal::kEmptyString) {
        allowmultipleads_->clear();
      }
    }
    if (has_fallbackonnoad()) {
      if (fallbackonnoad_ != &::google::protobuf::internal::kEmptyString) {
        fallbackonnoad_->clear();
      }
    }
  }
  adsurvey_.Clear();
  imptrack_.Clear();
  errtrack_.Clear();
  linearcreative_.Clear();
  extension_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BidderResponse_Ad::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string price = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_price()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->price().data(), this->price().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_campaignId;
        break;
      }

      // optional string campaignId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_campaignId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_campaignid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->campaignid().data(), this->campaignid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_advertiserName;
        break;
      }

      // optional string advertiserName = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_advertiserName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_advertisername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->advertisername().data(), this->advertisername().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_category;
        break;
      }

      // optional string category = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_category:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_category()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->category().data(), this->category().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_adId;
        break;
      }

      // optional string adId = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->adid().data(), this->adid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_type;
        break;
      }

      // optional string type = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_adSystem;
        break;
      }

      // optional .com.rj.protos.msg.BidderResponse.Ad.AdSystem adSystem = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adSystem:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_adsystem()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_adTag;
        break;
      }

      // optional string adTag = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adTag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adtag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->adtag().data(), this->adtag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_adDesc;
        break;
      }

      // optional string adDesc = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adDesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->addesc().data(), this->addesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_adSurvey;
        break;
      }

      // repeated string adSurvey = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adSurvey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_adsurvey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->adsurvey(this->adsurvey_size() - 1).data(),
            this->adsurvey(this->adsurvey_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_adSurvey;
        if (input->ExpectTag(98)) goto parse_errTrack;
        break;
      }

      // repeated string errTrack = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_errTrack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_errtrack()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->errtrack(this->errtrack_size() - 1).data(),
            this->errtrack(this->errtrack_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_errTrack;
        if (input->ExpectTag(106)) goto parse_linearCreative;
        break;
      }

      // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative linearCreative = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_linearCreative:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_linearcreative()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_linearCreative;
        if (input->ExpectTag(114)) goto parse_companionCreative;
        break;
      }

      // optional .com.rj.protos.msg.BidderResponse.Ad.CompanionCreative companionCreative = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_companionCreative:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_companioncreative()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_hasVpaidCreative;
        break;
      }

      // optional bool hasVpaidCreative = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hasVpaidCreative:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hasvpaidcreative_)));
          set_has_hasvpaidcreative();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_adTitle;
        break;
      }

      // optional string adTitle = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adTitle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adtitle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->adtitle().data(), this->adtitle().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_extension;
        break;
      }

      // repeated string extension = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_extension:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_extension()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->extension(this->extension_size() - 1).data(),
            this->extension(this->extension_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_extension;
        if (input->ExpectTag(154)) goto parse_impTrack;
        break;
      }

      // repeated .com.rj.protos.msg.BidderResponse.Ad.Impression impTrack = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_impTrack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_imptrack()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_impTrack;
        if (input->ExpectTag(162)) goto parse_sequence;
        break;
      }

      // optional string sequence = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sequence:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sequence()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sequence().data(), this->sequence().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_followAdditionalWrappers;
        break;
      }

      // optional string followAdditionalWrappers = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_followAdditionalWrappers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_followadditionalwrappers()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->followadditionalwrappers().data(), this->followadditionalwrappers().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_allowMultipleAds;
        break;
      }

      // optional string allowMultipleAds = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_allowMultipleAds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_allowmultipleads()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->allowmultipleads().data(), this->allowmultipleads().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_fallbackOnNoAd;
        break;
      }

      // optional string fallbackOnNoAd = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fallbackOnNoAd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fallbackonnoad()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fallbackonnoad().data(), this->fallbackonnoad().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BidderResponse_Ad::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string price = 1;
  if (has_price()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->price().data(), this->price().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->price(), output);
  }

  // optional string campaignId = 2;
  if (has_campaignid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->campaignid().data(), this->campaignid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->campaignid(), output);
  }

  // optional string advertiserName = 3;
  if (has_advertisername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->advertisername().data(), this->advertisername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->advertisername(), output);
  }

  // optional string category = 4;
  if (has_category()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->category().data(), this->category().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->category(), output);
  }

  // optional string adId = 5;
  if (has_adid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adid().data(), this->adid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->adid(), output);
  }

  // optional string type = 6;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->type(), output);
  }

  // optional .com.rj.protos.msg.BidderResponse.Ad.AdSystem adSystem = 7;
  if (has_adsystem()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->adsystem(), output);
  }

  // optional string adTag = 8;
  if (has_adtag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adtag().data(), this->adtag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->adtag(), output);
  }

  // optional string adDesc = 9;
  if (has_addesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->addesc().data(), this->addesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->addesc(), output);
  }

  // repeated string adSurvey = 10;
  for (int i = 0; i < this->adsurvey_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->adsurvey(i).data(), this->adsurvey(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->adsurvey(i), output);
  }

  // repeated string errTrack = 12;
  for (int i = 0; i < this->errtrack_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->errtrack(i).data(), this->errtrack(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->errtrack(i), output);
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative linearCreative = 13;
  for (int i = 0; i < this->linearcreative_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->linearcreative(i), output);
  }

  // optional .com.rj.protos.msg.BidderResponse.Ad.CompanionCreative companionCreative = 14;
  if (has_companioncreative()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->companioncreative(), output);
  }

  // optional bool hasVpaidCreative = 16;
  if (has_hasvpaidcreative()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->hasvpaidcreative(), output);
  }

  // optional string adTitle = 17;
  if (has_adtitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adtitle().data(), this->adtitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->adtitle(), output);
  }

  // repeated string extension = 18;
  for (int i = 0; i < this->extension_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->extension(i).data(), this->extension(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->extension(i), output);
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad.Impression impTrack = 19;
  for (int i = 0; i < this->imptrack_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->imptrack(i), output);
  }

  // optional string sequence = 20;
  if (has_sequence()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sequence().data(), this->sequence().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->sequence(), output);
  }

  // optional string followAdditionalWrappers = 21;
  if (has_followadditionalwrappers()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->followadditionalwrappers().data(), this->followadditionalwrappers().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->followadditionalwrappers(), output);
  }

  // optional string allowMultipleAds = 22;
  if (has_allowmultipleads()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->allowmultipleads().data(), this->allowmultipleads().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->allowmultipleads(), output);
  }

  // optional string fallbackOnNoAd = 23;
  if (has_fallbackonnoad()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fallbackonnoad().data(), this->fallbackonnoad().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->fallbackonnoad(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BidderResponse_Ad::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string price = 1;
  if (has_price()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->price().data(), this->price().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->price(), target);
  }

  // optional string campaignId = 2;
  if (has_campaignid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->campaignid().data(), this->campaignid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->campaignid(), target);
  }

  // optional string advertiserName = 3;
  if (has_advertisername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->advertisername().data(), this->advertisername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->advertisername(), target);
  }

  // optional string category = 4;
  if (has_category()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->category().data(), this->category().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->category(), target);
  }

  // optional string adId = 5;
  if (has_adid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adid().data(), this->adid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->adid(), target);
  }

  // optional string type = 6;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->type(), target);
  }

  // optional .com.rj.protos.msg.BidderResponse.Ad.AdSystem adSystem = 7;
  if (has_adsystem()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->adsystem(), target);
  }

  // optional string adTag = 8;
  if (has_adtag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adtag().data(), this->adtag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->adtag(), target);
  }

  // optional string adDesc = 9;
  if (has_addesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->addesc().data(), this->addesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->addesc(), target);
  }

  // repeated string adSurvey = 10;
  for (int i = 0; i < this->adsurvey_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adsurvey(i).data(), this->adsurvey(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->adsurvey(i), target);
  }

  // repeated string errTrack = 12;
  for (int i = 0; i < this->errtrack_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->errtrack(i).data(), this->errtrack(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(12, this->errtrack(i), target);
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative linearCreative = 13;
  for (int i = 0; i < this->linearcreative_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->linearcreative(i), target);
  }

  // optional .com.rj.protos.msg.BidderResponse.Ad.CompanionCreative companionCreative = 14;
  if (has_companioncreative()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->companioncreative(), target);
  }

  // optional bool hasVpaidCreative = 16;
  if (has_hasvpaidcreative()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->hasvpaidcreative(), target);
  }

  // optional string adTitle = 17;
  if (has_adtitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adtitle().data(), this->adtitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->adtitle(), target);
  }

  // repeated string extension = 18;
  for (int i = 0; i < this->extension_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->extension(i).data(), this->extension(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(18, this->extension(i), target);
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad.Impression impTrack = 19;
  for (int i = 0; i < this->imptrack_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->imptrack(i), target);
  }

  // optional string sequence = 20;
  if (has_sequence()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sequence().data(), this->sequence().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->sequence(), target);
  }

  // optional string followAdditionalWrappers = 21;
  if (has_followadditionalwrappers()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->followadditionalwrappers().data(), this->followadditionalwrappers().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->followadditionalwrappers(), target);
  }

  // optional string allowMultipleAds = 22;
  if (has_allowmultipleads()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->allowmultipleads().data(), this->allowmultipleads().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->allowmultipleads(), target);
  }

  // optional string fallbackOnNoAd = 23;
  if (has_fallbackonnoad()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fallbackonnoad().data(), this->fallbackonnoad().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->fallbackonnoad(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BidderResponse_Ad::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string price = 1;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->price());
    }

    // optional string campaignId = 2;
    if (has_campaignid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->campaignid());
    }

    // optional string advertiserName = 3;
    if (has_advertisername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->advertisername());
    }

    // optional string category = 4;
    if (has_category()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->category());
    }

    // optional bool hasVpaidCreative = 16;
    if (has_hasvpaidcreative()) {
      total_size += 2 + 1;
    }

    // optional string adId = 5;
    if (has_adid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->adid());
    }

    // optional string sequence = 20;
    if (has_sequence()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sequence());
    }

    // optional string type = 6;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .com.rj.protos.msg.BidderResponse.Ad.AdSystem adSystem = 7;
    if (has_adsystem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->adsystem());
    }

    // optional string adTag = 8;
    if (has_adtag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->adtag());
    }

    // optional string adDesc = 9;
    if (has_addesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->addesc());
    }

    // optional string adTitle = 17;
    if (has_adtitle()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->adtitle());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional .com.rj.protos.msg.BidderResponse.Ad.CompanionCreative companionCreative = 14;
    if (has_companioncreative()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->companioncreative());
    }

    // optional string followAdditionalWrappers = 21;
    if (has_followadditionalwrappers()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->followadditionalwrappers());
    }

    // optional string allowMultipleAds = 22;
    if (has_allowmultipleads()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->allowmultipleads());
    }

    // optional string fallbackOnNoAd = 23;
    if (has_fallbackonnoad()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fallbackonnoad());
    }

  }
  // repeated string adSurvey = 10;
  total_size += 1 * this->adsurvey_size();
  for (int i = 0; i < this->adsurvey_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->adsurvey(i));
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad.Impression impTrack = 19;
  total_size += 2 * this->imptrack_size();
  for (int i = 0; i < this->imptrack_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->imptrack(i));
  }

  // repeated string errTrack = 12;
  total_size += 1 * this->errtrack_size();
  for (int i = 0; i < this->errtrack_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->errtrack(i));
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad.LinearCreative linearCreative = 13;
  total_size += 1 * this->linearcreative_size();
  for (int i = 0; i < this->linearcreative_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->linearcreative(i));
  }

  // repeated string extension = 18;
  total_size += 2 * this->extension_size();
  for (int i = 0; i < this->extension_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->extension(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidderResponse_Ad::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BidderResponse_Ad* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BidderResponse_Ad*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BidderResponse_Ad::MergeFrom(const BidderResponse_Ad& from) {
  GOOGLE_CHECK_NE(&from, this);
  adsurvey_.MergeFrom(from.adsurvey_);
  imptrack_.MergeFrom(from.imptrack_);
  errtrack_.MergeFrom(from.errtrack_);
  linearcreative_.MergeFrom(from.linearcreative_);
  extension_.MergeFrom(from.extension_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_price()) {
      set_price(from.price());
    }
    if (from.has_campaignid()) {
      set_campaignid(from.campaignid());
    }
    if (from.has_advertisername()) {
      set_advertisername(from.advertisername());
    }
    if (from.has_category()) {
      set_category(from.category());
    }
    if (from.has_hasvpaidcreative()) {
      set_hasvpaidcreative(from.hasvpaidcreative());
    }
    if (from.has_adid()) {
      set_adid(from.adid());
    }
    if (from.has_sequence()) {
      set_sequence(from.sequence());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_adsystem()) {
      mutable_adsystem()->::com::rj::protos::msg::BidderResponse_Ad_AdSystem::MergeFrom(from.adsystem());
    }
    if (from.has_adtag()) {
      set_adtag(from.adtag());
    }
    if (from.has_addesc()) {
      set_addesc(from.addesc());
    }
    if (from.has_adtitle()) {
      set_adtitle(from.adtitle());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_companioncreative()) {
      mutable_companioncreative()->::com::rj::protos::msg::BidderResponse_Ad_CompanionCreative::MergeFrom(from.companioncreative());
    }
    if (from.has_followadditionalwrappers()) {
      set_followadditionalwrappers(from.followadditionalwrappers());
    }
    if (from.has_allowmultipleads()) {
      set_allowmultipleads(from.allowmultipleads());
    }
    if (from.has_fallbackonnoad()) {
      set_fallbackonnoad(from.fallbackonnoad());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BidderResponse_Ad::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidderResponse_Ad::CopyFrom(const BidderResponse_Ad& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidderResponse_Ad::IsInitialized() const {

  return true;
}

void BidderResponse_Ad::Swap(BidderResponse_Ad* other) {
  if (other != this) {
    std::swap(price_, other->price_);
    std::swap(campaignid_, other->campaignid_);
    std::swap(advertisername_, other->advertisername_);
    std::swap(category_, other->category_);
    std::swap(hasvpaidcreative_, other->hasvpaidcreative_);
    std::swap(adid_, other->adid_);
    std::swap(sequence_, other->sequence_);
    std::swap(type_, other->type_);
    std::swap(adsystem_, other->adsystem_);
    std::swap(adtag_, other->adtag_);
    std::swap(addesc_, other->addesc_);
    adsurvey_.Swap(&other->adsurvey_);
    std::swap(adtitle_, other->adtitle_);
    imptrack_.Swap(&other->imptrack_);
    errtrack_.Swap(&other->errtrack_);
    linearcreative_.Swap(&other->linearcreative_);
    std::swap(companioncreative_, other->companioncreative_);
    extension_.Swap(&other->extension_);
    std::swap(followadditionalwrappers_, other->followadditionalwrappers_);
    std::swap(allowmultipleads_, other->allowmultipleads_);
    std::swap(fallbackonnoad_, other->fallbackonnoad_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BidderResponse_Ad::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidderResponse_Ad_descriptor_;
  metadata.reflection = BidderResponse_Ad_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BidderResponse::kIdFieldNumber;
const int BidderResponse::kBidderIdFieldNumber;
const int BidderResponse::kAdsFieldNumber;
#endif  // !_MSC_VER

BidderResponse::BidderResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BidderResponse::InitAsDefaultInstance() {
}

BidderResponse::BidderResponse(const BidderResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BidderResponse::SharedCtor() {
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bidderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidderResponse::~BidderResponse() {
  SharedDtor();
}

void BidderResponse::SharedDtor() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (bidderid_ != &::google::protobuf::internal::kEmptyString) {
    delete bidderid_;
  }
  if (this != default_instance_) {
  }
}

void BidderResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidderResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidderResponse_descriptor_;
}

const BidderResponse& BidderResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AdBidderResponseTemplate_2eproto();
  return *default_instance_;
}

BidderResponse* BidderResponse::default_instance_ = NULL;

BidderResponse* BidderResponse::New() const {
  return new BidderResponse;
}

void BidderResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
    if (has_bidderid()) {
      if (bidderid_ != &::google::protobuf::internal::kEmptyString) {
        bidderid_->clear();
      }
    }
  }
  ads_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BidderResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bidderId;
        break;
      }

      // optional string bidderId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bidderId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bidderid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bidderid().data(), this->bidderid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ads;
        break;
      }

      // repeated .com.rj.protos.msg.BidderResponse.Ad ads = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ads:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ads()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ads;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BidderResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->id(), output);
  }

  // optional string bidderId = 2;
  if (has_bidderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bidderid().data(), this->bidderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->bidderid(), output);
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad ads = 3;
  for (int i = 0; i < this->ads_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->ads(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BidderResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string bidderId = 2;
  if (has_bidderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bidderid().data(), this->bidderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bidderid(), target);
  }

  // repeated .com.rj.protos.msg.BidderResponse.Ad ads = 3;
  for (int i = 0; i < this->ads_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->ads(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BidderResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string bidderId = 2;
    if (has_bidderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bidderid());
    }

  }
  // repeated .com.rj.protos.msg.BidderResponse.Ad ads = 3;
  total_size += 1 * this->ads_size();
  for (int i = 0; i < this->ads_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ads(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidderResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BidderResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BidderResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BidderResponse::MergeFrom(const BidderResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  ads_.MergeFrom(from.ads_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_bidderid()) {
      set_bidderid(from.bidderid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BidderResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidderResponse::CopyFrom(const BidderResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidderResponse::IsInitialized() const {

  return true;
}

void BidderResponse::Swap(BidderResponse* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(bidderid_, other->bidderid_);
    ads_.Swap(&other->ads_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BidderResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidderResponse_descriptor_;
  metadata.reflection = BidderResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace msg
}  // namespace protos
}  // namespace rj
}  // namespace com

// @@protoc_insertion_point(global_scope)
