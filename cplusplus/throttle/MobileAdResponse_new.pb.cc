// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MobileAdResponse_new.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MobileAdResponse_new.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace rj {
namespace protos {
namespace mobile {

namespace {

const ::google::protobuf::Descriptor* MobileAdResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* MobileAdResponse_TrackingEvents_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MobileAdResponse_TrackingEvents_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MobileAdResponse_Orientation_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_MobileAdResponse_5fnew_2eproto() {
  protobuf_AddDesc_MobileAdResponse_5fnew_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MobileAdResponse_new.proto");
  GOOGLE_CHECK(file != NULL);
  MobileAdResponse_descriptor_ = file->message_type(0);
  static const int MobileAdResponse_offsets_[28] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, bidderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, adtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, iconurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, subtitle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, relatedinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, imageurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, htmlmarkup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, adlink_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, videourl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, youtubeurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, telnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, shareurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, packagename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, schemeurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, weburl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, fallbackurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, clickopentype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, clickurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, animation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, refresh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, autoclose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, impressionurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, orientation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, trackingevents_),
  };
  MobileAdResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdResponse_descriptor_,
      MobileAdResponse::default_instance_,
      MobileAdResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdResponse));
  MobileAdResponse_TrackingEvents_descriptor_ = MobileAdResponse_descriptor_->nested_type(0);
  static const int MobileAdResponse_TrackingEvents_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_TrackingEvents, event_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_TrackingEvents, trackurl_),
  };
  MobileAdResponse_TrackingEvents_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MobileAdResponse_TrackingEvents_descriptor_,
      MobileAdResponse_TrackingEvents::default_instance_,
      MobileAdResponse_TrackingEvents_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_TrackingEvents, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MobileAdResponse_TrackingEvents, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MobileAdResponse_TrackingEvents));
  MobileAdResponse_Orientation_descriptor_ = MobileAdResponse_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MobileAdResponse_5fnew_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdResponse_descriptor_, &MobileAdResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MobileAdResponse_TrackingEvents_descriptor_, &MobileAdResponse_TrackingEvents::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MobileAdResponse_5fnew_2eproto() {
  delete MobileAdResponse::default_instance_;
  delete MobileAdResponse_reflection_;
  delete MobileAdResponse_TrackingEvents::default_instance_;
  delete MobileAdResponse_TrackingEvents_reflection_;
}

void protobuf_AddDesc_MobileAdResponse_5fnew_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032MobileAdResponse_new.proto\022\024com.rj.pro"
    "tos.mobile\"\337\005\n\020MobileAdResponse\022\n\n\002id\030\001 "
    "\002(\t\022\020\n\010bidderId\030\002 \001(\t\022\016\n\006adType\030\003 \001(\t\022\017\n"
    "\007iconUrl\030\004 \001(\t\022\r\n\005title\030\005 \001(\t\022\020\n\010subTitl"
    "e\030\006 \001(\t\022\023\n\013relatedInfo\030\007 \001(\t\022\020\n\010imageUrl"
    "\030\010 \001(\t\022\022\n\nhtmlMarkup\030\t \001(\t\022\016\n\006adLink\030\n \001"
    "(\t\022\020\n\010videoUrl\030\013 \001(\t\022\022\n\nyoutubeUrl\030\014 \001(\t"
    "\022\016\n\006telNum\030\r \001(\t\022\020\n\010shareUrl\030\016 \001(\t\022\023\n\013pa"
    "ckageName\030\017 \001(\t\022\021\n\tschemeUrl\030\020 \001(\t\022\016\n\006we"
    "bUrl\030\021 \001(\t\022\023\n\013fallbackUrl\030\022 \001(\t\022\025\n\rclick"
    "OpenType\030\023 \001(\t\022\020\n\010clickUrl\030\024 \001(\t\022\021\n\tanim"
    "ation\030\025 \001(\t\022\017\n\007refresh\030\026 \001(\t\022\r\n\005width\030\027 "
    "\001(\t\022\016\n\006height\030\030 \001(\t\022\021\n\tautoClose\030\031 \001(\t\022\025"
    "\n\rimpressionUrl\030\032 \003(\t\022G\n\013orientation\030\033 \001"
    "(\01622.com.rj.protos.mobile.MobileAdRespon"
    "se.Orientation\022M\n\016trackingEvents\030\034 \003(\01325"
    ".com.rj.protos.mobile.MobileAdResponse.T"
    "rackingEvents\0321\n\016TrackingEvents\022\r\n\005event"
    "\030\001 \001(\t\022\020\n\010trackUrl\030\002 \001(\t\"*\n\013Orientation\022"
    "\r\n\tLANDSCAPE\020\000\022\014\n\010PORTRAIT\020\001", 788);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MobileAdResponse_new.proto", &protobuf_RegisterTypes);
  MobileAdResponse::default_instance_ = new MobileAdResponse();
  MobileAdResponse_TrackingEvents::default_instance_ = new MobileAdResponse_TrackingEvents();
  MobileAdResponse::default_instance_->InitAsDefaultInstance();
  MobileAdResponse_TrackingEvents::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MobileAdResponse_5fnew_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MobileAdResponse_5fnew_2eproto {
  StaticDescriptorInitializer_MobileAdResponse_5fnew_2eproto() {
    protobuf_AddDesc_MobileAdResponse_5fnew_2eproto();
  }
} static_descriptor_initializer_MobileAdResponse_5fnew_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* MobileAdResponse_Orientation_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_Orientation_descriptor_;
}
bool MobileAdResponse_Orientation_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MobileAdResponse_Orientation MobileAdResponse::LANDSCAPE;
const MobileAdResponse_Orientation MobileAdResponse::PORTRAIT;
const MobileAdResponse_Orientation MobileAdResponse::Orientation_MIN;
const MobileAdResponse_Orientation MobileAdResponse::Orientation_MAX;
const int MobileAdResponse::Orientation_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MobileAdResponse_TrackingEvents::kEventFieldNumber;
const int MobileAdResponse_TrackingEvents::kTrackUrlFieldNumber;
#endif  // !_MSC_VER

MobileAdResponse_TrackingEvents::MobileAdResponse_TrackingEvents()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdResponse_TrackingEvents::InitAsDefaultInstance() {
}

MobileAdResponse_TrackingEvents::MobileAdResponse_TrackingEvents(const MobileAdResponse_TrackingEvents& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdResponse_TrackingEvents::SharedCtor() {
  _cached_size_ = 0;
  event_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  trackurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdResponse_TrackingEvents::~MobileAdResponse_TrackingEvents() {
  SharedDtor();
}

void MobileAdResponse_TrackingEvents::SharedDtor() {
  if (event_ != &::google::protobuf::internal::kEmptyString) {
    delete event_;
  }
  if (trackurl_ != &::google::protobuf::internal::kEmptyString) {
    delete trackurl_;
  }
  if (this != default_instance_) {
  }
}

void MobileAdResponse_TrackingEvents::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdResponse_TrackingEvents::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_TrackingEvents_descriptor_;
}

const MobileAdResponse_TrackingEvents& MobileAdResponse_TrackingEvents::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MobileAdResponse_5fnew_2eproto();
  return *default_instance_;
}

MobileAdResponse_TrackingEvents* MobileAdResponse_TrackingEvents::default_instance_ = NULL;

MobileAdResponse_TrackingEvents* MobileAdResponse_TrackingEvents::New() const {
  return new MobileAdResponse_TrackingEvents;
}

void MobileAdResponse_TrackingEvents::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_event()) {
      if (event_ != &::google::protobuf::internal::kEmptyString) {
        event_->clear();
      }
    }
    if (has_trackurl()) {
      if (trackurl_ != &::google::protobuf::internal::kEmptyString) {
        trackurl_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdResponse_TrackingEvents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string event = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->event().data(), this->event().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_trackUrl;
        break;
      }

      // optional string trackUrl = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_trackUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trackurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->trackurl().data(), this->trackurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdResponse_TrackingEvents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string event = 1;
  if (has_event()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event().data(), this->event().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->event(), output);
  }

  // optional string trackUrl = 2;
  if (has_trackurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->trackurl().data(), this->trackurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->trackurl(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdResponse_TrackingEvents::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string event = 1;
  if (has_event()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->event().data(), this->event().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->event(), target);
  }

  // optional string trackUrl = 2;
  if (has_trackurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->trackurl().data(), this->trackurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->trackurl(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdResponse_TrackingEvents::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string event = 1;
    if (has_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->event());
    }

    // optional string trackUrl = 2;
    if (has_trackurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->trackurl());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdResponse_TrackingEvents::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdResponse_TrackingEvents* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdResponse_TrackingEvents*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdResponse_TrackingEvents::MergeFrom(const MobileAdResponse_TrackingEvents& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_event()) {
      set_event(from.event());
    }
    if (from.has_trackurl()) {
      set_trackurl(from.trackurl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdResponse_TrackingEvents::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdResponse_TrackingEvents::CopyFrom(const MobileAdResponse_TrackingEvents& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdResponse_TrackingEvents::IsInitialized() const {

  return true;
}

void MobileAdResponse_TrackingEvents::Swap(MobileAdResponse_TrackingEvents* other) {
  if (other != this) {
    std::swap(event_, other->event_);
    std::swap(trackurl_, other->trackurl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdResponse_TrackingEvents::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdResponse_TrackingEvents_descriptor_;
  metadata.reflection = MobileAdResponse_TrackingEvents_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MobileAdResponse::kIdFieldNumber;
const int MobileAdResponse::kBidderIdFieldNumber;
const int MobileAdResponse::kAdTypeFieldNumber;
const int MobileAdResponse::kIconUrlFieldNumber;
const int MobileAdResponse::kTitleFieldNumber;
const int MobileAdResponse::kSubTitleFieldNumber;
const int MobileAdResponse::kRelatedInfoFieldNumber;
const int MobileAdResponse::kImageUrlFieldNumber;
const int MobileAdResponse::kHtmlMarkupFieldNumber;
const int MobileAdResponse::kAdLinkFieldNumber;
const int MobileAdResponse::kVideoUrlFieldNumber;
const int MobileAdResponse::kYoutubeUrlFieldNumber;
const int MobileAdResponse::kTelNumFieldNumber;
const int MobileAdResponse::kShareUrlFieldNumber;
const int MobileAdResponse::kPackageNameFieldNumber;
const int MobileAdResponse::kSchemeUrlFieldNumber;
const int MobileAdResponse::kWebUrlFieldNumber;
const int MobileAdResponse::kFallbackUrlFieldNumber;
const int MobileAdResponse::kClickOpenTypeFieldNumber;
const int MobileAdResponse::kClickUrlFieldNumber;
const int MobileAdResponse::kAnimationFieldNumber;
const int MobileAdResponse::kRefreshFieldNumber;
const int MobileAdResponse::kWidthFieldNumber;
const int MobileAdResponse::kHeightFieldNumber;
const int MobileAdResponse::kAutoCloseFieldNumber;
const int MobileAdResponse::kImpressionUrlFieldNumber;
const int MobileAdResponse::kOrientationFieldNumber;
const int MobileAdResponse::kTrackingEventsFieldNumber;
#endif  // !_MSC_VER

MobileAdResponse::MobileAdResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MobileAdResponse::InitAsDefaultInstance() {
}

MobileAdResponse::MobileAdResponse(const MobileAdResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MobileAdResponse::SharedCtor() {
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bidderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  adtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  iconurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  subtitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  relatedinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  imageurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  htmlmarkup_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  adlink_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  videourl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  youtubeurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  telnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  shareurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  packagename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  schemeurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  weburl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  fallbackurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  clickopentype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  clickurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  animation_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  refresh_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  width_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  height_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  autoclose_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  orientation_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MobileAdResponse::~MobileAdResponse() {
  SharedDtor();
}

void MobileAdResponse::SharedDtor() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (bidderid_ != &::google::protobuf::internal::kEmptyString) {
    delete bidderid_;
  }
  if (adtype_ != &::google::protobuf::internal::kEmptyString) {
    delete adtype_;
  }
  if (iconurl_ != &::google::protobuf::internal::kEmptyString) {
    delete iconurl_;
  }
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (subtitle_ != &::google::protobuf::internal::kEmptyString) {
    delete subtitle_;
  }
  if (relatedinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete relatedinfo_;
  }
  if (imageurl_ != &::google::protobuf::internal::kEmptyString) {
    delete imageurl_;
  }
  if (htmlmarkup_ != &::google::protobuf::internal::kEmptyString) {
    delete htmlmarkup_;
  }
  if (adlink_ != &::google::protobuf::internal::kEmptyString) {
    delete adlink_;
  }
  if (videourl_ != &::google::protobuf::internal::kEmptyString) {
    delete videourl_;
  }
  if (youtubeurl_ != &::google::protobuf::internal::kEmptyString) {
    delete youtubeurl_;
  }
  if (telnum_ != &::google::protobuf::internal::kEmptyString) {
    delete telnum_;
  }
  if (shareurl_ != &::google::protobuf::internal::kEmptyString) {
    delete shareurl_;
  }
  if (packagename_ != &::google::protobuf::internal::kEmptyString) {
    delete packagename_;
  }
  if (schemeurl_ != &::google::protobuf::internal::kEmptyString) {
    delete schemeurl_;
  }
  if (weburl_ != &::google::protobuf::internal::kEmptyString) {
    delete weburl_;
  }
  if (fallbackurl_ != &::google::protobuf::internal::kEmptyString) {
    delete fallbackurl_;
  }
  if (clickopentype_ != &::google::protobuf::internal::kEmptyString) {
    delete clickopentype_;
  }
  if (clickurl_ != &::google::protobuf::internal::kEmptyString) {
    delete clickurl_;
  }
  if (animation_ != &::google::protobuf::internal::kEmptyString) {
    delete animation_;
  }
  if (refresh_ != &::google::protobuf::internal::kEmptyString) {
    delete refresh_;
  }
  if (width_ != &::google::protobuf::internal::kEmptyString) {
    delete width_;
  }
  if (height_ != &::google::protobuf::internal::kEmptyString) {
    delete height_;
  }
  if (autoclose_ != &::google::protobuf::internal::kEmptyString) {
    delete autoclose_;
  }
  if (this != default_instance_) {
  }
}

void MobileAdResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileAdResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MobileAdResponse_descriptor_;
}

const MobileAdResponse& MobileAdResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MobileAdResponse_5fnew_2eproto();
  return *default_instance_;
}

MobileAdResponse* MobileAdResponse::default_instance_ = NULL;

MobileAdResponse* MobileAdResponse::New() const {
  return new MobileAdResponse;
}

void MobileAdResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
    if (has_bidderid()) {
      if (bidderid_ != &::google::protobuf::internal::kEmptyString) {
        bidderid_->clear();
      }
    }
    if (has_adtype()) {
      if (adtype_ != &::google::protobuf::internal::kEmptyString) {
        adtype_->clear();
      }
    }
    if (has_iconurl()) {
      if (iconurl_ != &::google::protobuf::internal::kEmptyString) {
        iconurl_->clear();
      }
    }
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::kEmptyString) {
        title_->clear();
      }
    }
    if (has_subtitle()) {
      if (subtitle_ != &::google::protobuf::internal::kEmptyString) {
        subtitle_->clear();
      }
    }
    if (has_relatedinfo()) {
      if (relatedinfo_ != &::google::protobuf::internal::kEmptyString) {
        relatedinfo_->clear();
      }
    }
    if (has_imageurl()) {
      if (imageurl_ != &::google::protobuf::internal::kEmptyString) {
        imageurl_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_htmlmarkup()) {
      if (htmlmarkup_ != &::google::protobuf::internal::kEmptyString) {
        htmlmarkup_->clear();
      }
    }
    if (has_adlink()) {
      if (adlink_ != &::google::protobuf::internal::kEmptyString) {
        adlink_->clear();
      }
    }
    if (has_videourl()) {
      if (videourl_ != &::google::protobuf::internal::kEmptyString) {
        videourl_->clear();
      }
    }
    if (has_youtubeurl()) {
      if (youtubeurl_ != &::google::protobuf::internal::kEmptyString) {
        youtubeurl_->clear();
      }
    }
    if (has_telnum()) {
      if (telnum_ != &::google::protobuf::internal::kEmptyString) {
        telnum_->clear();
      }
    }
    if (has_shareurl()) {
      if (shareurl_ != &::google::protobuf::internal::kEmptyString) {
        shareurl_->clear();
      }
    }
    if (has_packagename()) {
      if (packagename_ != &::google::protobuf::internal::kEmptyString) {
        packagename_->clear();
      }
    }
    if (has_schemeurl()) {
      if (schemeurl_ != &::google::protobuf::internal::kEmptyString) {
        schemeurl_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_weburl()) {
      if (weburl_ != &::google::protobuf::internal::kEmptyString) {
        weburl_->clear();
      }
    }
    if (has_fallbackurl()) {
      if (fallbackurl_ != &::google::protobuf::internal::kEmptyString) {
        fallbackurl_->clear();
      }
    }
    if (has_clickopentype()) {
      if (clickopentype_ != &::google::protobuf::internal::kEmptyString) {
        clickopentype_->clear();
      }
    }
    if (has_clickurl()) {
      if (clickurl_ != &::google::protobuf::internal::kEmptyString) {
        clickurl_->clear();
      }
    }
    if (has_animation()) {
      if (animation_ != &::google::protobuf::internal::kEmptyString) {
        animation_->clear();
      }
    }
    if (has_refresh()) {
      if (refresh_ != &::google::protobuf::internal::kEmptyString) {
        refresh_->clear();
      }
    }
    if (has_width()) {
      if (width_ != &::google::protobuf::internal::kEmptyString) {
        width_->clear();
      }
    }
    if (has_height()) {
      if (height_ != &::google::protobuf::internal::kEmptyString) {
        height_->clear();
      }
    }
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (has_autoclose()) {
      if (autoclose_ != &::google::protobuf::internal::kEmptyString) {
        autoclose_->clear();
      }
    }
    orientation_ = 0;
  }
  impressionurl_.Clear();
  trackingevents_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MobileAdResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bidderId;
        break;
      }

      // optional string bidderId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bidderId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bidderid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bidderid().data(), this->bidderid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_adType;
        break;
      }

      // optional string adType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->adtype().data(), this->adtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_iconUrl;
        break;
      }

      // optional string iconUrl = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_iconUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iconurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->iconurl().data(), this->iconurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_title;
        break;
      }

      // optional string title = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_subTitle;
        break;
      }

      // optional string subTitle = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_subTitle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subtitle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->subtitle().data(), this->subtitle().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_relatedInfo;
        break;
      }

      // optional string relatedInfo = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_relatedInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_relatedinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->relatedinfo().data(), this->relatedinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_imageUrl;
        break;
      }

      // optional string imageUrl = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_imageUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imageurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->imageurl().data(), this->imageurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_htmlMarkup;
        break;
      }

      // optional string htmlMarkup = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_htmlMarkup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_htmlmarkup()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->htmlmarkup().data(), this->htmlmarkup().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_adLink;
        break;
      }

      // optional string adLink = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_adLink:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_adlink()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->adlink().data(), this->adlink().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_videoUrl;
        break;
      }

      // optional string videoUrl = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_videoUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_videourl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->videourl().data(), this->videourl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_youtubeUrl;
        break;
      }

      // optional string youtubeUrl = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_youtubeUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_youtubeurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->youtubeurl().data(), this->youtubeurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_telNum;
        break;
      }

      // optional string telNum = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_telNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_telnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->telnum().data(), this->telnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_shareUrl;
        break;
      }

      // optional string shareUrl = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_shareUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shareurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->shareurl().data(), this->shareurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_packageName;
        break;
      }

      // optional string packageName = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_packageName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_packagename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->packagename().data(), this->packagename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_schemeUrl;
        break;
      }

      // optional string schemeUrl = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_schemeUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_schemeurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->schemeurl().data(), this->schemeurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_webUrl;
        break;
      }

      // optional string webUrl = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_webUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_weburl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->weburl().data(), this->weburl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_fallbackUrl;
        break;
      }

      // optional string fallbackUrl = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fallbackUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fallbackurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fallbackurl().data(), this->fallbackurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_clickOpenType;
        break;
      }

      // optional string clickOpenType = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_clickOpenType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clickopentype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->clickopentype().data(), this->clickopentype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_clickUrl;
        break;
      }

      // optional string clickUrl = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_clickUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clickurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->clickurl().data(), this->clickurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_animation;
        break;
      }

      // optional string animation = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_animation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_animation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->animation().data(), this->animation().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_refresh;
        break;
      }

      // optional string refresh = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_refresh:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_refresh()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->refresh().data(), this->refresh().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_width;
        break;
      }

      // optional string width = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_width:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_width()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->width().data(), this->width().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(194)) goto parse_height;
        break;
      }

      // optional string height = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_height:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_height()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->height().data(), this->height().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_autoClose;
        break;
      }

      // optional string autoClose = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_autoClose:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_autoclose()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->autoclose().data(), this->autoclose().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_impressionUrl;
        break;
      }

      // repeated string impressionUrl = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_impressionUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_impressionurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->impressionurl(this->impressionurl_size() - 1).data(),
            this->impressionurl(this->impressionurl_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_impressionUrl;
        if (input->ExpectTag(216)) goto parse_orientation;
        break;
      }

      // optional .com.rj.protos.mobile.MobileAdResponse.Orientation orientation = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_orientation:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::rj::protos::mobile::MobileAdResponse_Orientation_IsValid(value)) {
            set_orientation(static_cast< ::com::rj::protos::mobile::MobileAdResponse_Orientation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(27, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(226)) goto parse_trackingEvents;
        break;
      }

      // repeated .com.rj.protos.mobile.MobileAdResponse.TrackingEvents trackingEvents = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_trackingEvents:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_trackingevents()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(226)) goto parse_trackingEvents;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MobileAdResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->id(), output);
  }

  // optional string bidderId = 2;
  if (has_bidderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bidderid().data(), this->bidderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->bidderid(), output);
  }

  // optional string adType = 3;
  if (has_adtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adtype().data(), this->adtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->adtype(), output);
  }

  // optional string iconUrl = 4;
  if (has_iconurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->iconurl().data(), this->iconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->iconurl(), output);
  }

  // optional string title = 5;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->title(), output);
  }

  // optional string subTitle = 6;
  if (has_subtitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->subtitle().data(), this->subtitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->subtitle(), output);
  }

  // optional string relatedInfo = 7;
  if (has_relatedinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->relatedinfo().data(), this->relatedinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->relatedinfo(), output);
  }

  // optional string imageUrl = 8;
  if (has_imageurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->imageurl().data(), this->imageurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->imageurl(), output);
  }

  // optional string htmlMarkup = 9;
  if (has_htmlmarkup()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->htmlmarkup().data(), this->htmlmarkup().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->htmlmarkup(), output);
  }

  // optional string adLink = 10;
  if (has_adlink()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adlink().data(), this->adlink().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->adlink(), output);
  }

  // optional string videoUrl = 11;
  if (has_videourl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->videourl().data(), this->videourl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->videourl(), output);
  }

  // optional string youtubeUrl = 12;
  if (has_youtubeurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->youtubeurl().data(), this->youtubeurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->youtubeurl(), output);
  }

  // optional string telNum = 13;
  if (has_telnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->telnum().data(), this->telnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->telnum(), output);
  }

  // optional string shareUrl = 14;
  if (has_shareurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->shareurl().data(), this->shareurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->shareurl(), output);
  }

  // optional string packageName = 15;
  if (has_packagename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->packagename().data(), this->packagename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->packagename(), output);
  }

  // optional string schemeUrl = 16;
  if (has_schemeurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->schemeurl().data(), this->schemeurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->schemeurl(), output);
  }

  // optional string webUrl = 17;
  if (has_weburl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->weburl().data(), this->weburl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->weburl(), output);
  }

  // optional string fallbackUrl = 18;
  if (has_fallbackurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fallbackurl().data(), this->fallbackurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->fallbackurl(), output);
  }

  // optional string clickOpenType = 19;
  if (has_clickopentype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clickopentype().data(), this->clickopentype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->clickopentype(), output);
  }

  // optional string clickUrl = 20;
  if (has_clickurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clickurl().data(), this->clickurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->clickurl(), output);
  }

  // optional string animation = 21;
  if (has_animation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->animation().data(), this->animation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->animation(), output);
  }

  // optional string refresh = 22;
  if (has_refresh()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->refresh().data(), this->refresh().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->refresh(), output);
  }

  // optional string width = 23;
  if (has_width()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->width().data(), this->width().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->width(), output);
  }

  // optional string height = 24;
  if (has_height()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->height().data(), this->height().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      24, this->height(), output);
  }

  // optional string autoClose = 25;
  if (has_autoclose()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->autoclose().data(), this->autoclose().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      25, this->autoclose(), output);
  }

  // repeated string impressionUrl = 26;
  for (int i = 0; i < this->impressionurl_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->impressionurl(i).data(), this->impressionurl(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      26, this->impressionurl(i), output);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.Orientation orientation = 27;
  if (has_orientation()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      27, this->orientation(), output);
  }

  // repeated .com.rj.protos.mobile.MobileAdResponse.TrackingEvents trackingEvents = 28;
  for (int i = 0; i < this->trackingevents_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->trackingevents(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MobileAdResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string bidderId = 2;
  if (has_bidderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bidderid().data(), this->bidderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bidderid(), target);
  }

  // optional string adType = 3;
  if (has_adtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adtype().data(), this->adtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->adtype(), target);
  }

  // optional string iconUrl = 4;
  if (has_iconurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->iconurl().data(), this->iconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->iconurl(), target);
  }

  // optional string title = 5;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->title(), target);
  }

  // optional string subTitle = 6;
  if (has_subtitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->subtitle().data(), this->subtitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->subtitle(), target);
  }

  // optional string relatedInfo = 7;
  if (has_relatedinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->relatedinfo().data(), this->relatedinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->relatedinfo(), target);
  }

  // optional string imageUrl = 8;
  if (has_imageurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->imageurl().data(), this->imageurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->imageurl(), target);
  }

  // optional string htmlMarkup = 9;
  if (has_htmlmarkup()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->htmlmarkup().data(), this->htmlmarkup().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->htmlmarkup(), target);
  }

  // optional string adLink = 10;
  if (has_adlink()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->adlink().data(), this->adlink().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->adlink(), target);
  }

  // optional string videoUrl = 11;
  if (has_videourl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->videourl().data(), this->videourl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->videourl(), target);
  }

  // optional string youtubeUrl = 12;
  if (has_youtubeurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->youtubeurl().data(), this->youtubeurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->youtubeurl(), target);
  }

  // optional string telNum = 13;
  if (has_telnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->telnum().data(), this->telnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->telnum(), target);
  }

  // optional string shareUrl = 14;
  if (has_shareurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->shareurl().data(), this->shareurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->shareurl(), target);
  }

  // optional string packageName = 15;
  if (has_packagename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->packagename().data(), this->packagename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->packagename(), target);
  }

  // optional string schemeUrl = 16;
  if (has_schemeurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->schemeurl().data(), this->schemeurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->schemeurl(), target);
  }

  // optional string webUrl = 17;
  if (has_weburl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->weburl().data(), this->weburl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->weburl(), target);
  }

  // optional string fallbackUrl = 18;
  if (has_fallbackurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fallbackurl().data(), this->fallbackurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->fallbackurl(), target);
  }

  // optional string clickOpenType = 19;
  if (has_clickopentype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clickopentype().data(), this->clickopentype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->clickopentype(), target);
  }

  // optional string clickUrl = 20;
  if (has_clickurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clickurl().data(), this->clickurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->clickurl(), target);
  }

  // optional string animation = 21;
  if (has_animation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->animation().data(), this->animation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->animation(), target);
  }

  // optional string refresh = 22;
  if (has_refresh()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->refresh().data(), this->refresh().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->refresh(), target);
  }

  // optional string width = 23;
  if (has_width()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->width().data(), this->width().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->width(), target);
  }

  // optional string height = 24;
  if (has_height()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->height().data(), this->height().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->height(), target);
  }

  // optional string autoClose = 25;
  if (has_autoclose()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->autoclose().data(), this->autoclose().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->autoclose(), target);
  }

  // repeated string impressionUrl = 26;
  for (int i = 0; i < this->impressionurl_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->impressionurl(i).data(), this->impressionurl(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(26, this->impressionurl(i), target);
  }

  // optional .com.rj.protos.mobile.MobileAdResponse.Orientation orientation = 27;
  if (has_orientation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      27, this->orientation(), target);
  }

  // repeated .com.rj.protos.mobile.MobileAdResponse.TrackingEvents trackingEvents = 28;
  for (int i = 0; i < this->trackingevents_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        28, this->trackingevents(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MobileAdResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string bidderId = 2;
    if (has_bidderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bidderid());
    }

    // optional string adType = 3;
    if (has_adtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->adtype());
    }

    // optional string iconUrl = 4;
    if (has_iconurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->iconurl());
    }

    // optional string title = 5;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string subTitle = 6;
    if (has_subtitle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->subtitle());
    }

    // optional string relatedInfo = 7;
    if (has_relatedinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->relatedinfo());
    }

    // optional string imageUrl = 8;
    if (has_imageurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->imageurl());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string htmlMarkup = 9;
    if (has_htmlmarkup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->htmlmarkup());
    }

    // optional string adLink = 10;
    if (has_adlink()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->adlink());
    }

    // optional string videoUrl = 11;
    if (has_videourl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->videourl());
    }

    // optional string youtubeUrl = 12;
    if (has_youtubeurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->youtubeurl());
    }

    // optional string telNum = 13;
    if (has_telnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->telnum());
    }

    // optional string shareUrl = 14;
    if (has_shareurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->shareurl());
    }

    // optional string packageName = 15;
    if (has_packagename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->packagename());
    }

    // optional string schemeUrl = 16;
    if (has_schemeurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->schemeurl());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string webUrl = 17;
    if (has_weburl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->weburl());
    }

    // optional string fallbackUrl = 18;
    if (has_fallbackurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fallbackurl());
    }

    // optional string clickOpenType = 19;
    if (has_clickopentype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clickopentype());
    }

    // optional string clickUrl = 20;
    if (has_clickurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clickurl());
    }

    // optional string animation = 21;
    if (has_animation()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->animation());
    }

    // optional string refresh = 22;
    if (has_refresh()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->refresh());
    }

    // optional string width = 23;
    if (has_width()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->width());
    }

    // optional string height = 24;
    if (has_height()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->height());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional string autoClose = 25;
    if (has_autoclose()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->autoclose());
    }

    // optional .com.rj.protos.mobile.MobileAdResponse.Orientation orientation = 27;
    if (has_orientation()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->orientation());
    }

  }
  // repeated string impressionUrl = 26;
  total_size += 2 * this->impressionurl_size();
  for (int i = 0; i < this->impressionurl_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->impressionurl(i));
  }

  // repeated .com.rj.protos.mobile.MobileAdResponse.TrackingEvents trackingEvents = 28;
  total_size += 2 * this->trackingevents_size();
  for (int i = 0; i < this->trackingevents_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->trackingevents(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileAdResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MobileAdResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MobileAdResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MobileAdResponse::MergeFrom(const MobileAdResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  impressionurl_.MergeFrom(from.impressionurl_);
  trackingevents_.MergeFrom(from.trackingevents_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_bidderid()) {
      set_bidderid(from.bidderid());
    }
    if (from.has_adtype()) {
      set_adtype(from.adtype());
    }
    if (from.has_iconurl()) {
      set_iconurl(from.iconurl());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_subtitle()) {
      set_subtitle(from.subtitle());
    }
    if (from.has_relatedinfo()) {
      set_relatedinfo(from.relatedinfo());
    }
    if (from.has_imageurl()) {
      set_imageurl(from.imageurl());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_htmlmarkup()) {
      set_htmlmarkup(from.htmlmarkup());
    }
    if (from.has_adlink()) {
      set_adlink(from.adlink());
    }
    if (from.has_videourl()) {
      set_videourl(from.videourl());
    }
    if (from.has_youtubeurl()) {
      set_youtubeurl(from.youtubeurl());
    }
    if (from.has_telnum()) {
      set_telnum(from.telnum());
    }
    if (from.has_shareurl()) {
      set_shareurl(from.shareurl());
    }
    if (from.has_packagename()) {
      set_packagename(from.packagename());
    }
    if (from.has_schemeurl()) {
      set_schemeurl(from.schemeurl());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_weburl()) {
      set_weburl(from.weburl());
    }
    if (from.has_fallbackurl()) {
      set_fallbackurl(from.fallbackurl());
    }
    if (from.has_clickopentype()) {
      set_clickopentype(from.clickopentype());
    }
    if (from.has_clickurl()) {
      set_clickurl(from.clickurl());
    }
    if (from.has_animation()) {
      set_animation(from.animation());
    }
    if (from.has_refresh()) {
      set_refresh(from.refresh());
    }
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_autoclose()) {
      set_autoclose(from.autoclose());
    }
    if (from.has_orientation()) {
      set_orientation(from.orientation());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MobileAdResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileAdResponse::CopyFrom(const MobileAdResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileAdResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MobileAdResponse::Swap(MobileAdResponse* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(bidderid_, other->bidderid_);
    std::swap(adtype_, other->adtype_);
    std::swap(iconurl_, other->iconurl_);
    std::swap(title_, other->title_);
    std::swap(subtitle_, other->subtitle_);
    std::swap(relatedinfo_, other->relatedinfo_);
    std::swap(imageurl_, other->imageurl_);
    std::swap(htmlmarkup_, other->htmlmarkup_);
    std::swap(adlink_, other->adlink_);
    std::swap(videourl_, other->videourl_);
    std::swap(youtubeurl_, other->youtubeurl_);
    std::swap(telnum_, other->telnum_);
    std::swap(shareurl_, other->shareurl_);
    std::swap(packagename_, other->packagename_);
    std::swap(schemeurl_, other->schemeurl_);
    std::swap(weburl_, other->weburl_);
    std::swap(fallbackurl_, other->fallbackurl_);
    std::swap(clickopentype_, other->clickopentype_);
    std::swap(clickurl_, other->clickurl_);
    std::swap(animation_, other->animation_);
    std::swap(refresh_, other->refresh_);
    std::swap(width_, other->width_);
    std::swap(height_, other->height_);
    std::swap(autoclose_, other->autoclose_);
    impressionurl_.Swap(&other->impressionurl_);
    std::swap(orientation_, other->orientation_);
    trackingevents_.Swap(&other->trackingevents_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MobileAdResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MobileAdResponse_descriptor_;
  metadata.reflection = MobileAdResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mobile
}  // namespace protos
}  // namespace rj
}  // namespace com

// @@protoc_insertion_point(global_scope)
